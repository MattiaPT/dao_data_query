{
  "data": [
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4NjRkNzIyNDk1ZTFhODAwMjA4NTc4YWExOTdmOTRmNjU3MzJjNTZiY2E3NDllYmJiOWQ1ZjE1MWFmYmI3MmUxZg==",
      "id": "0x64d722495e1a800208578aa197f94f65732c56bca749ebbb9d5f151afbb72e1f",
      "title": "GGP-0046: Updated Feature Matrix Support (blast-mainnet, boba, boba-bnb)",
      "content": "## Description\n\nThis GGP proposes an update to the Feature Support Matrix to include full protocol support for two additional mainnet networks: Blast and Fuse. This is an update to the previously ratified matrix in [GGP-0045: Updated Feature Matrix Support (blast & fuse)](https://snapshot.org/#/council.graphprotocol.eth/proposal/0xc602fb785c0cbc6926c6c464352241320c0ef49b2fbb0a5a594155b8b4cd0700).\n\nFollowing the Chain Integration Process (CIP), these three chains have been thoroughly tested for any data determinism issues by InfraDAO, whose reports were reviewed by the Graph's Technical Advisory Board (TAB). Below is a summary of the TAB’s review of all reports. \n\n| Chain | CIP Report | TAB Vote (summary) |\n| --- | --- | --- |\n| Boba | [Boba Report (CIP 0011)](https://www.notion.so/Boba-Report-CIP-0011-d755661421e845b6b66bf8552f4b6d54?pvs=21)   |  **Approvals**: 4/6 **Rejections**: 0/6 |\n| Boba-BNB | [BobaBNB (CIP 0012)](https://www.notion.so/BobaBNB-CIP-0012-2e1a302988ce403b9a8b34d1963f5ebb?pvs=21)  | **Approvals**: 4/6  **Rejections**: 0/6 |\n\n**Notes on TAB reviews:**\n- *Due to force majeure, two team members could not complete the report. Still, the majority was achieved (4/6), and the performed tests indicate zero issues and risks.*\n- *Additional details and comments from TAB members can be found in each report.*\n\n---\n\n### Updated Feature Support Matrix\n\nProposed changes: https://github.com/graphprotocol/indexer/pull/1021/files#diff-0fd094e11f9aeeb2dbb021264be73b2951f080288139df40391da49b6c46d0ff\n\n![Council Docs image.png](ipfs://bafkreic3lh253bkvknvo47hlqdxasck5pm7do5jphgmkjt4kfuog2qwxlu)\n\n**Note:** \n*Indexing rewards can still not be disabled for Substreams-powered Subgraphs (SpS). This SAO limitation will be fixed in the upcoming weeks.  `Substreams: boba` `Substreams: boba-bnb` are not being purposefully added to the matrix, but the approval of this proposal effectively means activating full protocol support for Subgraphs and SPS indexing `boba` and `boba-bnb` chains.*\n\n**Full copy of Feature Matrix Support w/ new additions**\n\n| Subgraph Feature | Aliases | Implemented | Experimental | Query Arbitration | Indexing Arbitration | Indexing Rewards |\n| --- | --- | --- | --- | --- | --- | --- |\n| **Core Features** |  |  |  |  |  |  |\n| Full-text Search |  | Yes | No | No | Yes | Yes |\n| Non-Fatal Errors |  | Yes | Yes | Yes | Yes | Yes |\n| Grafting |  | Yes | Yes | Yes | Yes | Yes |\n| **Data Source Types** |  |  |  |  |  |  |\n| eip155:\\* | \\* | Yes | No | No | No | No |\n| eip155:1 | mainnet | Yes | No | Yes | Yes | Yes |\n| eip155:100 | gnosis | Yes | Yes | Yes | Yes | Yes |\n| near:\\* | \\* | Yes | Yes | No | No | No |\n| cosmos:\\* | \\* | Yes | Yes | No | No | No |\n| arweave:\\* | \\* | Yes | Yes | No | No | No |\n| eip155:42161 | artbitrum-one | Yes | Yes | Yes | Yes | Yes |\n| eip155:42220 | celo | Yes | Yes | Yes | Yes | Yes |\n| eip155:43114 | avalanche | Yes | Yes | Yes | Yes | Yes |\n| eip155:250 | fantom | Yes | Yes | Yes | Yes | Yes |\n| eip155:137 | polygon | Yes | Yes | Yes | Yes | Yes |\n| eip155:10 | optimism | Yes | Yes | Yes | Yes | Yes |\n| eip155:8453 | base | Yes | Yes | Yes | Yes | Yes |\n| eip155:534352 | scroll | Yes | Yes | Yes | Yes | Yes |\n| eip155:59144 | linea | Yes | Yes | Yes | Yes | Yes |\n| eip155:56 | bsc | Yes | Yes | Yes | Yes | Yes |\n| eip155:122 | fuse | Yes | Yes | Yes | Yes | Yes |\n| eip155:81457 | blast-mainnet | Yes | Yes | Yes | Yes | Yes |\n| eip155:288 | boba | Yes | Yes | Yes | Yes | Yes |\n| eip155:56288 | boba-bnb | Yes | Yes | Yes | Yes | Yes |\n| **Data Source Features** |  |  |  |  |  |  |\n| ipfs.cat in mappings |  | Yes | Yes | No | No | No |\n| ENS |  | Yes | Yes | Yes | Yes | Yes |\n| File data sources: Arweave |  | Yes | Yes | No | Yes | Yes |\n| File data sources: IPFS |  | Yes | Yes | No | Yes | Yes |\n| Substreams: mainnet |  | Yes | Yes | Yes | Yes | Yes |\n| Substreams: optimism |  | Yes | Yes | Yes | Yes | Yes |\n\n### Defender Transactions\n\nhttps://defender.openzeppelin.com/#/transaction-proposals/37d98346-a5b7-40bc-99f4-8f3a7c54fb4f",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0x5520914B9B1EB6d9Ada0222bA1defB34fF6d58A9",
      "totalVotes": 3,
      "blockNumber": 20936699,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x64d722495e1a800208578aa197f94f65732c56bca749ebbb9d5f151afbb72e1f",
      "startTime": {
        "timestamp": 1728581318
      },
      "endTime": {
        "timestamp": 1730494800
      },
      "startTimestamp": 1728581318,
      "endTimestamp": 1730494800,
      "currentState": "active",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 3.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 3.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1728581794776,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4YzYwMmZiNzg1YzBjYmM2OTI2YzZjNDY0MzUyMjQxMzIwYzBlZjQ5YjJmYmIwYTVhNTk0MTU1YjhiNGNkMDcwMA==",
      "id": "0xc602fb785c0cbc6926c6c464352241320c0ef49b2fbb0a5a594155b8b4cd0700",
      "title": "GGP-0045: Updated Feature Matrix Support (blast & fuse)",
      "content": "## **Description**\n\nThis GGP proposes an update to the Feature Support Matrix to include full protocol support for two additional mainnet networks: Blast and Fuse. This is an update to the previously ratified matrix in [GGP-0043: Updated Feature Matrix Support (base, bsc, scroll, linea)](https://snapshot.org/#/council.graphprotocol.eth/proposal/0x4226f917346416b76f77369181881bebbc9b4e3f66e9681e5fc4e56d7460eba7).\n\nFollowing the Chain Integration Process (CIP), these three chains have been thoroughly tested for any data determinism issues by InfraDAO, whose reports were reviewed by the Graph's Technical Advisory Board (TAB). Below is a summary of the TAB’s review of all reports.\n\n| Chain | CIP Report | TAB Vote (summary) |\n| --- | --- | --- |\n| Blast | [🔗 Blast Report (CIP 0011)](https://www.notion.so/Blast-Report-CIP-0011-d238f78ff2ff4cb2b099add12cf45fe3?pvs=21)  | ✅ **Approvals**: 6/6  |\n| Fuse | 🔗 [Fuse Report (CIP 0010) ](https://www.notion.so/Fuse-Report-CIP-0010-cd2b1dbc74544b5ab726246fa1ae1e3d?pvs=21)  | ✅ **Approvals**: 6/6 |\n\n> Additional details and comments from TAB members can be found in each report.\n\n### Updated Feature Support Matrix\n\nProposed changes: https://github.com/graphprotocol/indexer/pull/979/files \n![feature matrix diff view blast fuse.jpg](ipfs://bafkreicxrwqw7lfuem4jdbebcjmzhopu4z4rvc7puz25p2lpfs6qjmkh7a)\n    \n> **Note:**\n_Indexing rewards can still not be disabled for Substreams-powered Subgraphs (SpS). This SAO limitation will be fixed in the upcoming weeks.  `Substreams: blast` and `Substreams: fuse` are not being purposefully added to the matrix, but the approval of this proposal effectively means activating full protocol support for Subgraphs and SPS indexing blast and fuse chains._\n\n**Full copy of Feature Matrix Support w/ new additions**\n\n| Subgraph Feature | Aliases | Implemented | Experimental | Query Arbitration | Indexing Arbitration | Indexing Rewards |\n| --- | --- | --- | --- | --- | --- | --- |\n| **Core Features** |  |  |  |  |  |  |\n| Full-text Search |  | Yes | No | No | Yes | Yes |\n| Non-Fatal Errors |  | Yes | Yes | Yes | Yes | Yes |\n| Grafting |  | Yes | Yes | Yes | Yes | Yes |\n| **Data Source Types** |  |  |  |  |  |  |\n| eip155:\\* | \\* | Yes | No | No | No | No |\n| eip155:1 | mainnet | Yes | No | Yes | Yes | Yes |\n| eip155:100 | gnosis | Yes | Yes | Yes | Yes | Yes |\n| near:\\* | \\* | Yes | Yes | No | No | No |\n| cosmos:\\* | \\* | Yes | Yes | No | No | No |\n| arweave:\\* | \\* | Yes | Yes | No | No | No |\n| eip155:42161 | artbitrum-one | Yes | Yes | Yes | Yes | Yes |\n| eip155:42220 | celo | Yes | Yes | Yes | Yes | Yes |\n| eip155:43114 | avalanche | Yes | Yes | Yes | Yes | Yes |\n| eip155:250 | fantom | Yes | Yes | Yes | Yes | Yes |\n| eip155:137 | polygon | Yes | Yes | Yes | Yes | Yes |\n| eip155:10 | optimism | Yes | Yes | Yes | Yes | Yes |\n| eip155:8453 | base | Yes | Yes | Yes | Yes | Yes |\n| eip155:534352 | scroll | Yes | Yes | Yes | Yes | Yes |\n| eip155:59144 | linea | Yes | Yes | Yes | Yes | Yes |\n| eip155:56 | bsc | Yes | Yes | Yes | Yes | Yes |\n| eip155:122 | fuse | Yes | Yes | Yes | Yes | Yes |\n| eip155:81457 | blast | Yes | Yes | Yes | Yes | Yes |\n| **Data Source Features** |  |  |  |  |  |  |\n| ipfs.cat in mappings |  | Yes | Yes | No | No | No |\n| ENS |  | Yes | Yes | Yes | Yes | Yes |\n| File data sources: Arweave |  | Yes | Yes | No | Yes | Yes |\n| File data sources: IPFS |  | Yes | Yes | No | Yes | Yes |\n| Substreams: mainnet |  | Yes | Yes | Yes | Yes | Yes |\n| Substreams: optimism |  | Yes | Yes | Yes | Yes | Yes |",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xb731A785B0B5012a1E5B3480653A4E5DF05ffD0A",
      "totalVotes": 7,
      "blockNumber": 20585192,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0xc602fb785c0cbc6926c6c464352241320c0ef49b2fbb0a5a594155b8b4cd0700",
      "startTime": {
        "timestamp": 1724342369
      },
      "endTime": {
        "timestamp": 1727495940
      },
      "startTimestamp": 1724342369,
      "endTimestamp": 1727495940,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 1.0,
          "choice": 1
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 1.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1724342599037,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4ODliODM4YzM5YmI2NmQ3NzQ0ZGJmNjE1NzkwY2I5YjhmZWE5YmI4YTJjZjYwMjI0NGQ5NDlkNzE3M2M1ZDIzZQ==",
      "id": "0x89b838c39bb66d7744dbf615790cb9b8fea9bb8a2cf602244d949d7173c5d23e",
      "title": "GGP-0044: Deprecate the L1 (mainnet) protocol",
      "content": "GIP: 0067\nTitle: Deprecate the L1 (mainnet) protocol\nAuthors: Pablo Carranza Velez pablo@edgeandnode.com\n\nIndexing Rewards have now fully moved from the L1 (mainnet) deployment of protocol to the L2 (Arbitrum One) instance.\nThis GGP and the associated GIP propose fully deprecating the L1 protocol according to the following timeline:\n\n- T = 0 (June 28th, 2024): Indexing Rewards are set to 100% on L2.\n- T = 1 month (July 28th): Support for querying subgraphs on L1 is removed. The backstop Indexer on L1 is stopped. The L1 instances of the Gateway are stopped.\n- T = 6 months (December 28th): Support for most transfer tools is removed (as described in GIP-0067). The L1 protocol is considered officially deprecated, and L1 contracts are marked End-Of-Life and will get no new upgrades or support. Participants may still withdraw any remaining GRT from the protocol contracts.\n\nExact dates for removing functionality might vary based on core dev availability to deploy upgrades, but support for the deprecated tools will stop on the dates mentioned above.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xfF15883A2eEEc9C3b74238230C9F898c4d79BA47",
      "totalVotes": 6,
      "blockNumber": 20386530,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x89b838c39bb66d7744dbf615790cb9b8fea9bb8a2cf602244d949d7173c5d23e",
      "startTime": {
        "timestamp": 1721946407
      },
      "endTime": {
        "timestamp": 1724711160
      },
      "startTimestamp": 1721946407,
      "endTimestamp": 1724711160,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1721946499627,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4MjI5ZTg4ZGE0ODM5ZjhiYTdmMzQ5MzIzZGZjNTY0Zjk5MWY3MmU0ZmFlZjg0NTA2YTcyMDViMWM1MDU5ZjYzMQ==",
      "id": "0x229e88da4839f8ba7f349323dfc564f991f72e4faef84506a7205b1c5059f631",
      "title": "GGP-0042: Updated Feature Matrix Support (base, bsc, scroll, linea)",
      "content": "## Description\n\nThis GGP proposes an update to the Feature Support Matrix to include full protocol support for three additional mainnet networks: Base, BNB Smart Chain (bsc), Linea, and Scroll. This is an update to the previously ratified matrix in [GGP-0037: GGP-0037: Updated Feature Matrix Support (Graph Node v0.34.1)](https://snapshot.org/#/council.graphprotocol.eth/proposal/0x840a7de34b1dac9c7ef03d3170540abc5957ffd00564777aac9b253068a93723). \n\nFollowing the Chain Integration Process (CIP), these three chains have been thoroughly tested for any data determinism issues as [reported by InfraDAO and reviewed by the Graph's Technical Advisory Board](https://thegraphfoundation.notion.site/TAB-reports-on-CIP-tested-chains-Base-Binance-Linea-Scroll-a69ff972dd4d4150b53aa43681607541?pvs=4). \n\n\n## Next steps after council approval\n\n1. [This PR](https://github.com/graphprotocol/indexer/pull/898) will be merged.\n2. The Council will sign the Defender transaction to include Base, BNB Chain, Linea, and Scroll as registered networks to the EBO.\n3. Indexing rewards for subgraphs and SpS (Substreams-powered Subgraphs) will be enabled for such chains.\n\n## Updated feature support matrix\n\nHighlighting the only difference to the previously ratified Feature Support Matrix in [GGP-0037](https://snapshot.org/#/council.graphprotocol.eth/proposal/0x840a7de34b1dac9c7ef03d3170540abc5957ffd00564777aac9b253068a93723):\n\n \n![image](ipfs://bafybeiebzwwxrhrj5nsjdv27u47jwthh2zaekpv64ph6ip5bpl25lrwduy)\n[link to original diff view](https://github.com/graphprotocol/indexer/pull/898/files)\n---\n\n\n## *Annex: full copy of proposed feature support matrix*\n\nThis section is purely informational. Below is a copy of the latest matrix, as proposed in the aforementioned PR https://github.com/graphprotocol/indexer/pull/855\n\n| Subgraph Feature           | Aliases       | Implemented | Experimental | Query Arbitration | Indexing Arbitration | Indexing Rewards |\n| -------------------------- | ------------- | ----------- | ------------ | ----------------- | -------------------- | ---------------- |\n| **Core Features**          |               |             |              |                   |                      |                  |\n| Full-text Search           |               | Yes         | No           | No                | Yes                  | Yes              |\n| Non-Fatal Errors           |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| Grafting                   |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| **Data Source Types**      |               |             |              |                   |                      |                  |\n| eip155:\\*                  | \\*            | Yes         | No           | No                | No                   | No               |\n| eip155:1                   | mainnet       | Yes         | No           | Yes               | Yes                  | Yes              |\n| eip155:100                 | gnosis        | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| near:\\*                    | \\*            | Yes         | Yes          | No                | No                   | No               |\n| cosmos:\\*                  | \\*            | Yes         | Yes          | No                | No                   | No               |\n| arweave:\\*                 | \\*            | Yes         | Yes          | No                | No                   | No               |\n| eip155:42161               | artbitrum-one | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:42220               | celo          | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:43114               | avalanche     | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:250                 | fantom        | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:137                 | polygon       | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:10                  | optimism      | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:8453                | base          | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:534352              | scroll        | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:59144               | linea         | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:56                  | bsc           | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| **Data Source Features**   |               |             |              |                   |                      |                  |\n| ipfs.cat in mappings       |               | Yes         | Yes          | No                | No                   | No               |\n| ENS                        |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| File data sources: Arweave |               | Yes         | Yes          | No                | Yes                  | Yes              |\n| File data sources: IPFS    |               | Yes         | Yes          | No                | Yes                  | Yes              |\n| Substreams: mainnet        |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| Substreams: optimism       |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| Substreams: base           |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| Substreams: scroll         |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| Substreams: linea          |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| Substreams: bsc            |               | Yes         | Yes          | Yes               | Yes                  | Yes              |",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xb731A785B0B5012a1E5B3480653A4E5DF05ffD0A",
      "totalVotes": 5,
      "blockNumber": 20040533,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x229e88da4839f8ba7f349323dfc564f991f72e4faef84506a7205b1c5059f631",
      "startTime": {
        "timestamp": 1717770398
      },
      "endTime": {
        "timestamp": 1721519940
      },
      "startTimestamp": 1717770398,
      "endTimestamp": 1721519940,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 5.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 5.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1717770860855,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4NDIyNmY5MTczNDY0MTZiNzZmNzczNjkxODE4ODFiZWJiYzliNGUzZjY2ZTk2ODFlNWZjNGU1NmQ3NDYwZWJhNw==",
      "id": "0x4226f917346416b76f77369181881bebbc9b4e3f66e9681e5fc4e56d7460eba7",
      "title": "GGP-0043: Updated Feature Matrix Support (base, bsc, scroll, linea)",
      "content": "## Description\n\nThis GGP proposes an update to the Feature Support Matrix to include full protocol support for (regular) subgraphs indexing the following 4 networks: Base, BNB Smart Chain (bsc), Linea, and Scroll. \n\nThis GGP replaces [GGP-0042](https://snapshot.org/#/council.graphprotocol.eth/proposal/0x229e88da4839f8ba7f349323dfc564f991f72e4faef84506a7205b1c5059f631) given the contentions around adding indexing rewards support for  [Substreams-powered Subgraphs](https://thegraph.com/docs/en/cookbook/substreams-powered-subgraphs/) indexing the chains above. \n**The updated proposal has only regular subgraphs in scope.**\n\nOnce approved, the feature matrix included here will supersede the previously ratified one in [GGP-0037: GGP-0037: Updated Feature Matrix Support (Graph Node v0.34.1)](https://snapshot.org/#/council.graphprotocol.eth/proposal/0x840a7de34b1dac9c7ef03d3170540abc5957ffd00564777aac9b253068a93723). \n\n## Next steps after council approval\n\n1. [This PR](https://github.com/graphprotocol/indexer/pull/898) will be merged.\n2. The Council will sign the Defender transaction to include Base, BNB Chain, Linea, and Scroll as registered networks to the EBO.\n3. Indexing rewards will be supported for subgraphs indexing such chains.\n\n## Updated feature support matrix\n\nHighlighting the only difference to the previously ratified Feature Support Matrix in [GGP-0037](https://snapshot.org/#/council.graphprotocol.eth/proposal/0x840a7de34b1dac9c7ef03d3170540abc5957ffd00564777aac9b253068a93723):\n\n \n![image](ipfs://bafkreidk2reh3on5nykozrbem63wbxuqgkwmy2rw6ukmqjsxcheoif52k4)\n    [link to original diff view](https://github.com/graphprotocol/indexer/pull/898/files)\n---\n\n\n## *Annex: complete copy of proposed feature support matrix*\n\nThis section is purely informational. Below is a copy of the latest matrix, as proposed in the PR above https://github.com/graphprotocol/indexer/pull/855\n\n| Subgraph Feature           | Aliases       | Implemented | Experimental | Query Arbitration | Indexing Arbitration | Indexing Rewards |\n| -------------------------- | ------------- | ----------- | ------------ | ----------------- | -------------------- | ---------------- |\n| **Core Features**          |               |             |              |                   |                      |                  |\n| Full-text Search           |               | Yes         | No           | No                | Yes                  | Yes              |\n| Non-Fatal Errors           |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| Grafting                   |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| **Data Source Types**      |               |             |              |                   |                      |                  |\n| eip155:\\*                  | \\*            | Yes         | No           | No                | No                   | No               |\n| eip155:1                   | mainnet       | Yes         | No           | Yes               | Yes                  | Yes              |\n| eip155:100                 | gnosis        | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| near:\\*                    | \\*            | Yes         | Yes          | No                | No                   | No               |\n| cosmos:\\*                  | \\*            | Yes         | Yes          | No                | No                   | No               |\n| arweave:\\*                 | \\*            | Yes         | Yes          | No                | No                   | No               |\n| eip155:42161               | artbitrum-one | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:42220               | celo          | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:43114               | avalanche     | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:250                 | fantom        | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:137                 | polygon       | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:10                  | optimism      | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:8453                | base          | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:534352              | scroll        | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:59144               | linea         | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:56                  | bsc           | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| **Data Source Features**   |               |             |              |                   |                      |                  |\n| ipfs.cat in mappings       |               | Yes         | Yes          | No                | No                   | No               |\n| ENS                        |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| File data sources: Arweave |               | Yes         | Yes          | No                | Yes                  | Yes              |\n| File data sources: IPFS    |               | Yes         | Yes          | No                | Yes                  | Yes              |\n| Substreams: mainnet        |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| Substreams: optimism       |               | Yes         | Yes          | Yes               | Yes                  | Yes              |",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xb731A785B0B5012a1E5B3480653A4E5DF05ffD0A",
      "totalVotes": 6,
      "blockNumber": 20076902,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x4226f917346416b76f77369181881bebbc9b4e3f66e9681e5fc4e56d7460eba7",
      "startTime": {
        "timestamp": 1718209360
      },
      "endTime": {
        "timestamp": 1720900740
      },
      "startTimestamp": 1718209360,
      "endTimestamp": 1720900740,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1718211223109,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4MjFjZDIzMzdjNThiZjY4MDI4MWMxYjRkNzk1ZDA3ZmUzNWJiODNjZjdjMTA3MTE5MGJiM2NhOGZjMjAwODhhYQ==",
      "id": "0x21cd2337c58bf680281c1b4d795d07fe35bb83cf7c1071190bb3ca8fc20088aa",
      "title": "GGP-0042: Updated Feature Matrix Support (base, scroll, linea)",
      "content": "## Description\n\nThis GGP proposes an update to the Feature Support Matrix to include full protocol support for three additional mainnet networks: Base, Linea, and Scroll. This is an update to the previously ratified matrix in [GGP-0037: GGP-0037: Updated Feature Matrix Support (Graph Node v0.34.1)](https://snapshot.org/#/council.graphprotocol.eth/proposal/0x840a7de34b1dac9c7ef03d3170540abc5957ffd00564777aac9b253068a93723). \n\nFollowing the Chain Integration Process (CIP), these three chains have been thoroughly tested for any data determinism issues as [reported by InfraDAO and reviewed by the Graph's Technical Advisory Board](https://thegraphfoundation.notion.site/TAB-reports-on-CIP-tested-chains-Base-Binance-Linea-Scroll-a69ff972dd4d4150b53aa43681607541?pvs=4). \n\n_**Note**: BNB Chain (Binance) is not part of this proposal, as further investigation on detected PoI divergences is ongoing._\n\n## Next steps after council approval\n\n1. [This PR](https://github.com/graphprotocol/indexer/pull/898) will be merged.\n2. The Council will sign the Defender transaction to include Base, Linea, and Scroll as registered networks to the EBO.\n3. Indexing rewards for both subgraphs and SpS (Substreams-powered Subgraphs) indexing such chains will be enabled.\n\n## Updated feature support matrix\n\nHighlighting the only difference to the previously ratified Feature Support Matrix in [GGP-0037](https://snapshot.org/#/council.graphprotocol.eth/proposal/0x840a7de34b1dac9c7ef03d3170540abc5957ffd00564777aac9b253068a93723):\n\n![image](ipfs://bafkreib2ehcpumeghhacdaf4pz4y2iqou7t2gbowwkjqt57e5bp4jry7aa)\n[link to original diff view](https://github.com/graphprotocol/indexer/pull/898/commits/3a71212b445a7b8bf82206a1a4044e664f53fa6e?diff=unified&w=0)\n---\n\n\n## *Annex: full copy of proposed feature support matrix*\n\nThis section is purely informational. Below is a copy of the latest matrix, as proposed in the aforementioned PR https://github.com/graphprotocol/indexer/pull/855\n\n| Subgraph Feature           | Aliases       | Implemented | Experimental | Query Arbitration | Indexing Arbitration | Indexing Rewards |\n| -------------------------- | ------------- | ----------- | ------------ | ----------------- | -------------------- | ---------------- |\n| **Core Features**          |               |             |              |                   |                      |                  |\n| Full-text Search           |               | Yes         | No           | No                | Yes                  | Yes              |\n| Non-Fatal Errors           |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| Grafting                   |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| **Data Source Types**      |               |             |              |                   |                      |                  |\n| eip155:\\*                  | \\*            | Yes         | No           | No                | No                   | No               |\n| eip155:1                   | mainnet       | Yes         | No           | Yes               | Yes                  | Yes              |\n| eip155:100                 | gnosis        | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| near:\\*                    | \\*            | Yes         | Yes          | No                | No                   | No               |\n| cosmos:\\*                  | \\*            | Yes         | Yes          | No                | No                   | No               |\n| arweave:\\*                 | \\*            | Yes         | Yes          | No                | No                   | No               |\n| eip155:42161               | artbitrum-one | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:42220               | celo          | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:43114               | avalanche     | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:250                 | fantom        | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:137                 | polygon       | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:10                  | optimism      | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:8453                | base          | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:341690              | scroll        | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:243192              | linea         | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| **Data Source Features**   |               |             |              |                   |                      |                  |\n| ipfs.cat in mappings       |               | Yes         | Yes          | No                | No                   | No               |\n| ENS                        |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| File data sources: Arweave |               | Yes         | Yes          | No                | Yes                  | Yes              |\n| File data sources: IPFS    |               | Yes         | Yes          | No                | Yes                  | Yes              |\n| Substreams: mainnet        |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| Substreams: optimism       |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| Substreams: base           |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| Substreams: scroll         |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| Substreams: linea          |               | Yes         | Yes          | Yes               | Yes                  | Yes              |",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xb731A785B0B5012a1E5B3480653A4E5DF05ffD0A",
      "totalVotes": 5,
      "blockNumber": 19960128,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x21cd2337c58bf680281c1b4d795d07fe35bb83cf7c1071190bb3ca8fc20088aa",
      "startTime": {
        "timestamp": 1716799937
      },
      "endTime": {
        "timestamp": 1717711140
      },
      "startTimestamp": 1716799937,
      "endTimestamp": 1717711140,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 5.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 5.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1716800204154,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4YjRjMzNmZTQzMzJhYTE1OWZmOTI0YThmZmRkZjZlMTg4ZTg0NmRmZGE1NGVlZDk3NmVkMDA0YmFmZWZiNDVmYw==",
      "id": "0xb4c33fe4332aa159ff924a8ffddf6e188e846dfda54eed976ed004bafefb45fc",
      "title": "GGP-0041: Early allocation closure",
      "content": "GIP: 0060\nTitle: Early allocation closure\nAuthors: Ariel Barmat <ariel@edgeandnode.com>\n\nThe protocol imposes over indexers a restriction to wait for at least one epoch must pass before they can close allocations. This GGP and associated GIP propose removing it and allowing them to manage allocations as they see more convenient.\n\nAllocations closed in less than 1 epoch will not be eligible for indexing rewards.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xfF15883A2eEEc9C3b74238230C9F898c4d79BA47",
      "totalVotes": 6,
      "blockNumber": 19790723,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0xb4c33fe4332aa159ff924a8ffddf6e188e846dfda54eed976ed004bafefb45fc",
      "startTime": {
        "timestamp": 1714753104
      },
      "endTime": {
        "timestamp": 1717431480
      },
      "startTimestamp": 1714753104,
      "endTimestamp": 1717431480,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1714753569970,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4NzFiYjZhYWZlMWVmN2U3NWI1YWU1ZThlYTljMWIyOWEwNGQzNzVkMDllMTgxOTRiNmM4Y2Q0MWFjNDgyNjg3Mw==",
      "id": "0x71bb6aafe1ef7e75b5ae5e8ea9c1b29a04d375d09e18194b6c8cd41ac4826873",
      "title": "GGP-0039: Delegation of responsibility for Graph Node version updates",
      "content": "GIP: 0064\nTitle: Delegation of responsibility for Graph Node version updates\nAuthors: Adam Fuller\n\nThe Graph Council should delegate responsibility for specification of the protocol-supported version of Graph Node to the Graph Node core development team (with maintainer status on the [graph-node](https://github.com/graphprotocol/graph-node) repository). The Graph Council can revoke this delegation of responsibility at any time.\n\nThe Graph Node team should provide the Council and community with updates on new versions, along with any salient information regarding functionality or testing.\n\nThe Graph Council will still be responsible for specification of the rest of the feature support matrix, via GGP.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xfF15883A2eEEc9C3b74238230C9F898c4d79BA47",
      "totalVotes": 6,
      "blockNumber": 19775465,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x71bb6aafe1ef7e75b5ae5e8ea9c1b29a04d375d09e18194b6c8cd41ac4826873",
      "startTime": {
        "timestamp": 1714568867
      },
      "endTime": {
        "timestamp": 1717247220
      },
      "startTimestamp": 1714568867,
      "endTimestamp": 1717247220,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1714569062274,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4MjE0YWQ4ODk1OWE4ZTA5ZTczNDFiMjE2NTA2OTlhYjY3MzQ1NDkzZDkzODYxMThkYzUyNGM4MjdiZDAxMTA5MA==",
      "id": "0x214ad88959a8e09e7341b21650699ab67345493d9386118dc524c827bd011090",
      "title": "GGP-0040: Updated Feature Support (ens, arweave, 0.35.x)",
      "content": "## Description\n\nThis GGP includes a proposed updated Feature Support Matrix including:\n\n- Graph Node version to [0.35.0](https://github.com/graphprotocol/graph-node/releases/tag/v0.35.0)\n    - Note: _Past approval of [GGP-0039: Delegation of responsibility for Graph Node version updates](https://snapshot.org/#/council.graphprotocol.eth/proposal/0x71bb6aafe1ef7e75b5ae5e8ea9c1b29a04d375d09e18194b6c8cd41ac4826873) means the Council will stop ratifying the protocol-supported version of Graph Node to be used by Graph Indexers on the network and delegate such responsibility to the Graph Node team._\n- Support for Arweave File Data Sources (at the same level as IPFS, given identical implementation and data isolation), supported as of Graph Node [0.33.0](https://github.com/graphprotocol/graph-node/releases/tag/v0.33.0)\n- Full support for ENS:\n    > Missing rainbow tables now result in a non-deterministic error ([graphprotocol/graph-node#4206](https://github.com/graphprotocol/graph-node/issues/4206)). This is required, as a deterministic error would create a POI for the failure block and result in non-determinism vs. indexers who did have the rainbow tables present (who could keep syncing). A subgraph failing with a non-deterministic error doesn't generate a POI, and isn't eligible for indexing rewards - indexers could then import the rainbow tables, and as the failure is non-deterministic, it will be retried and syncing can begin again.\n\n[→ Link to quote source](https://github.com/graphprotocol/indexer/pull/886#issuecomment-2084854715)\n    \n\nAs with every new release, no POI divergences have been found after syncing ~100 subgraphs and comparing them against the previously ratified version.\n\n## Next steps\n\n[This PR](https://github.com/graphprotocol/indexer/pull/886) will be closed pending Council approval. \n\n## Updated Feature Support Matrix\n\n- Added a new subgraph feature: `File data sources: Arweave` with the same level of support of the previous `File data sources: IPFS`\n- Updated the `ENS` feature to include support for `Query Arbitration`, `Indexing Arbitration`, and `Indexing Rewards`\n\n### Diff view\n \n![image](ipfs://bafkreifhznbjb4oliji2unsnmoxcy5r4pwssi5pvjk66hoakas2dhs3dda)\n\n[→ Link to source](https://github.com/graphprotocol/indexer/pull/886/files?diff=unified&w=1&short_path=0fd094e#diff-0fd094e11f9aeeb2dbb021264be73b2951f080288139df40391da49b6c46d0ff)\n\n---\n\n## Annex: Full copy of proposed Feature Support Matrix\n\nThis section is purely informational. Below is a copy of the latest matrix, as proposed in the aforementioned PR https://github.com/graphprotocol/indexer/pull/886\n\n```markdown\n| Subgraph Feature           | Aliases       | Implemented | Experimental | Query Arbitration | Indexing Arbitration | Indexing Rewards |\n| -------------------------- | ------------- | ----------- | ------------ | ----------------- | -------------------- | ---------------- |\n| **Core Features**          |               |             |              |                   |                      |                  |\n| Full-text Search           |               | Yes         | No           | No                | Yes                  | Yes              |\n| Non-Fatal Errors           |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| Grafting                   |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| **Data Source Types**      |               |             |              |                   |                      |                  |\n| eip155:\\*                  | \\*            | Yes         | No           | No                | No                   | No               |\n| eip155:1                   | mainnet       | Yes         | No           | Yes               | Yes                  | Yes              |\n| eip155:100                 | gnosis        | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| near:\\*                    | \\*            | Yes         | Yes          | No                | No                   | No               |\n| cosmos:\\*                  | \\*            | Yes         | Yes          | No                | No                   | No               |\n| arweave:\\*                 | \\*            | Yes         | Yes          | No                | No                   | No               |\n| eip155:42161               | artbitrum-one | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:42220               | celo          | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:43114               | avalanche     | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:250                 | fantom        | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:137                 | polygon       | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:10                  | optimism      | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| **Data Source Features**   |               |             |              |                   |                      |                  |\n| ipfs.cat in mappings       |               | Yes         | Yes          | No                | No                   | No               |\n| ENS                        |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| File data sources: Arweave |               | Yes         | Yes          | No                | Yes                  | Yes              |\n| File data sources: IPFS    |               | Yes         | Yes          | No                | Yes                  | Yes              |\n| Substreams: mainnet        |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| Substreams: optimism       |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n```\n\nThe accepted `graph-node` version range must always be specified; it always comprises the latest available version and the one immediately preceding it.\nThe latest for the feature matrix above:\n\n```\ngraph-node: >=0.35.0 <0.36.0\n```\n\n### Previous Council vote\n\n**[GGP-0037: Updated Feature Matrix Support (Graph Node v0.34.1)](https://snapshot.org/#/council.graphprotocol.eth/proposal/0x840a7de34b1dac9c7ef03d3170540abc5957ffd00564777aac9b253068a93723)**",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xb731A785B0B5012a1E5B3480653A4E5DF05ffD0A",
      "totalVotes": 6,
      "blockNumber": 19790623,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x214ad88959a8e09e7341b21650699ab67345493d9386118dc524c827bd011090",
      "startTime": {
        "timestamp": 1714751956
      },
      "endTime": {
        "timestamp": 1715900340
      },
      "startTimestamp": 1714751956,
      "endTimestamp": 1715900340,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1714752296246,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4YzJlYmVlNjM1OWUxYjBlZWJjMTEzNzVmMjlmOWFjNDRmZWU2MTgwYzQ1MmIyNDA2MTIyMzQ5MTEyNWQzYTE3Mw==",
      "id": "0xc2ebee6359e1b0eebc11375f29f9ac44fee6180c452b24061223491125d3a173",
      "title": "GIP-0038: Subgraph Availability Manager",
      "content": "GIP: 0065\nTitle: Subgraph Availability Manager\nAuthors: Miguel de Elias miguel@edgeandnode.com\n[Link to full GIP] (https://github.com/graphprotocol/graph-improvement-proposals/blob/cf998623a4c8e90db7fc1c024c6179f812570c22/gips/0065-subgraph-availability-manager.md)\n\n---\n\n### GIP Summary\nGIP-0065 proposes the SubgraphAvailabilityManager to decentralize The Graph’s protocol. It replaces a single SAO with five oracle operators, requiring a consensus of three for actions on subgraph data. Deployed on Arbitrum One, it mediates between oracles and the RewardsManager, featuring a vote system with expiration limits. Governed by the council, the contract is non-upgradeable but replaceable.\n\n### Technical Advisory Board (TAB) review & vote\nReviewed by 6 members (all);\nApproved by 5\nRejected by 1\nMore on TAB's vote [here](https://www.notion.so/thegraphfoundation/TAB-Report-on-GIP-0065-59336a53f642418cbf1100743ac5b21c?pvs=4).\n\n---\n\n### Next steps\nOnce this GGP is approved:\n- This [PR](https://github.com/graphprotocol/graph-improvement-proposals/pull/38) will be merged\n- The new `SubgraphAvailabilityManager` contract will be deployed with a `RewardsManager` address defined and set of Operators.\n- SAO Operators will start coordinating the deployment of new SAO instances.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xb731A785B0B5012a1E5B3480653A4E5DF05ffD0A",
      "totalVotes": 6,
      "blockNumber": 19681272,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0xc2ebee6359e1b0eebc11375f29f9ac44fee6180c452b24061223491125d3a173",
      "startTime": {
        "timestamp": 1713430438
      },
      "endTime": {
        "timestamp": 1714258740
      },
      "startTimestamp": 1713430438,
      "endTimestamp": 1714258740,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1713430781701,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4ODQwYTdkZTM0YjFkYWM5YzdlZjAzZDMxNzA1NDBhYmM1OTU3ZmZkMDA1NjQ3NzdhYWM5YjI1MzA2OGE5MzcyMw==",
      "id": "0x840a7de34b1dac9c7ef03d3170540abc5957ffd00564777aac9b253068a93723",
      "title": "GGP-0037: Updated Feature Matrix Support (Graph Node v0.34.1)",
      "content": "## Description\n\nThis GGP includes a proposed updated Feature Support Matrix, including the new Graph Node release v0.34.1, whose release notes are [here](https://github.com/graphprotocol/graph-node/releases/tag/untagged-d207d57ec36b1c1623ac) and [here](https://github.com/graphprotocol/graph-node/releases/tag/v0.34.0) for v0.34.0. This is an update to the previously ratified matrix in [GGP-0036: Add full protocol support for both Optimism subgraphs and SPS](https://snapshot.org/#/council.graphprotocol.eth/proposal/0xcb7ce4aad9f18961d3a4ebe77a9a6f32f6a6335193f531e2c68f9308346c9e6e). \n\nAs with every new release, no POI divergences have been found after syncing ~100 subgraphs and comparing them against the previously ratified version.\n\n## Next steps\n\n[This PR](https://github.com/graphprotocol/indexer/pull/855) will be closed pending Council approval. Afterward, mainnet Indexers will be encouraged to use  Graph Node v0.34.1. \n\n## Updated Feature Support Matrix\n\nHighlighting the only difference to the previously ratified Feature Support Matrix in [GGP-0036](https://snapshot.org/#/council.graphprotocol.eth/proposal/0xcb7ce4aad9f18961d3a4ebe77a9a6f32f6a6335193f531e2c68f9308346c9e6e):\n\n![Feature matrix support preview](https://ipfs.network.thegraph.com/api/v0/cat?arg=QmYd8TgLgB68SQ7WWSR2BQdoHudKaRCriCoUbj9E8UB7Xc)\n\n---\n\n\n## Annex: Full copy of proposed Feature Support Matrix\n\nThis section is purely informational. Below is a copy of the latest matrix, as proposed in the aforementioned PR https://github.com/graphprotocol/indexer/pull/855\n\n| Subgraph Feature | Aliases | Implemented | Experimental | Query Arbitration | Indexing Arbitration | Indexing Rewards |\n| --- | --- | --- | --- | --- | --- | --- |\n| Core Features |  |  |  |  |  |  |\n| Full-text Search |  | Yes | No | No | Yes | Yes |\n| Non-Fatal Errors |  | Yes | Yes | Yes | Yes | Yes |\n| Grafting |  | Yes | Yes | Yes | Yes | Yes |\n| Data Source Types |  |  |  |  |  |  |\n| eip155:* | * | Yes | No | No | No | No |\n| eip155:1 | mainnet | Yes | No | Yes | Yes | Yes |\n| eip155:100 | gnosis | Yes | Yes | Yes | Yes | Yes |\n| near:* | * | Yes | Yes | No | No | No |\n| cosmos:* | * | Yes | Yes | No | No | No |\n| arweave:* | * | Yes | Yes | No | No | No |\n| eip155:42161 | artbitrum-one | Yes | Yes | Yes | Yes | Yes |\n| eip155:42220 | celo | Yes | Yes | Yes | Yes | Yes |\n| eip155:43114 | avalanche | Yes | Yes | Yes | Yes | Yes |\n| eip155:250 | fantom | Yes | Yes | Yes | Yes | Yes |\n| eip155:137 | polygon | Yes | Yes | Yes | Yes | Yes |\n| eip155:10 | optimism | Yes | Yes | Yes | Yes | Yes |\n| Data Source Features |  |  |  |  |  |  |\n| ipfs.cat in mappings |  | Yes | Yes | No | No | No |\n| ENS |  | Yes | Yes | No | No | No |\n| File data sources: IPFS |  | Yes | Yes | No | Yes | Yes |\n| Substreams: mainnet |  | Yes | Yes | Yes | Yes | Yes |\n| Substreams: optimism |  | Yes | Yes | Yes | Yes | Yes |\n\nThe accepted `graph-node` version range must always be specified; it always comprises the latest available version and the one immediately preceding it.\nThe latest for the feature matrix above:\n\n```\ngraph-node: >=0.34.1 <0.35.0\n\n```\n\n### Latest Council snapshot\n\n[GPP-0028 Update Feature Support Matrix (Graph Node v0.32.0)](https://snapshot.org/#/council.graphprotocol.eth/proposal/0xa7dcaf27d3b8cb6c135c398753a82fb4a6fc1ff5ad666cb131109f2de506253c)\n\n> **NOTE:** this is incorrect. The latest snapshot vote was [GGP-0036: Add full protocol support for both Optimism subgraphs and SPS](https://snapshot.org/#/council.graphprotocol.eth/proposal/0xcb7ce4aad9f18961d3a4ebe77a9a6f32f6a6335193f531e2c68f9308346c9e6e).\n> \n\n### Other notes\n\n- Currently, one single matrix is used to reflect protocol behaviour for both Ethereum mainnet and Arbitrum One.\n- Aliases can be used in subgraph manifest files to refer to specific networks.\n- Experimental features are generally not fully supported for indexing rewards and arbitration, and usage of experimental features will be considered during any arbitration that does occur.\n- Query fees apply to all queries, regardless of the underlying features used by a subgraph.\n- Subgraph features not named in the matrix are assumed to be fully supported for indexing & query rewards and arbitration",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xb731A785B0B5012a1E5B3480653A4E5DF05ffD0A",
      "totalVotes": 6,
      "blockNumber": 19161846,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x840a7de34b1dac9c7ef03d3170540abc5957ffd00564777aac9b253068a93723",
      "startTime": {
        "timestamp": 1707133498
      },
      "endTime": {
        "timestamp": 1708106340
      },
      "startTimestamp": 1707133498,
      "endTimestamp": 1708106340,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1707160624353,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4NTk2NDgzOWM5MGE0YmNjYjYyNWRiNjhkOGFmYTFlNjMyYmY0Yjk5ZDlkOGUxN2FjMzUzOTc5OGM5MzVkZWQyNQ==",
      "id": "0x5964839c90a4bccb625db68d8afa1e632bf4b99d9d8e17ac3539798c935ded25",
      "title": "GGP-0035: Remove delegation parameters cooldown",
      "content": "GIP: 0062\nTitle: Remove delegation parameters cooldown\nAuthors: Pablo Carranza Velez\n\nThis GGP and the referenced GIP propose removing the \"delegation parameters cooldown\" feature. This cooldown defines how long an Indexer must wait before setting the delegation query fee and rewards cut.\n\nUpon a successful vote of this proposal, the audited implementation for this GIP (https://github.com/graphprotocol/contracts/pull/866) will be deployed by the Edge & Node Smart Contracts team following a test and deployment plan.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xfF15883A2eEEc9C3b74238230C9F898c4d79BA47",
      "totalVotes": 6,
      "blockNumber": 18677175,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x5964839c90a4bccb625db68d8afa1e632bf4b99d9d8e17ac3539798c935ded25",
      "startTime": {
        "timestamp": 1701282774
      },
      "endTime": {
        "timestamp": 1703874720
      },
      "startTimestamp": 1701282774,
      "endTimestamp": 1703874720,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1701283274383,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4ZDQ0MzkzMjljMGQ0NGY5ZDYxZTc3N2YxMmQ1YWI3NDgzMTE0Yzc0ZDgxOGM1NTZiNGM4NWMwMmE3MTZjZDcyNQ==",
      "id": "0xd4439329c0d44f9d61e777f12d5ab7483114c74d818c556b4c85c02a716cd725",
      "title": "GGP-0034: Enable permissionless payers",
      "content": "GIP: 0056\nTitle: Permissionless payers\nAuthors: Zac Burns\n\nThis proposal removes the limitation of specific governance-approved entities to pay query fees to Indexers in the network.\n\nThe code changes remove the `assetHolders` mapping from the staking contract and all associated functions, checks, and events, and implements some additional protections to perform this change securely.\n\nUpon a successful vote of this proposal, the latest audited implementation of the change (https://github.com/graphprotocol/contracts/pull/864 plus related audit fixes) will be deployed by the Edge & Node Smart Contracts team following a test and deployment plan.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xfF15883A2eEEc9C3b74238230C9F898c4d79BA47",
      "totalVotes": 6,
      "blockNumber": 18677140,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0xd4439329c0d44f9d61e777f12d5ab7483114c74d818c556b4c85c02a716cd725",
      "startTime": {
        "timestamp": 1701259395
      },
      "endTime": {
        "timestamp": 1703851380
      },
      "startTimestamp": 1701259395,
      "endTimestamp": 1703851380,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1701259860877,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4ZGVlYjQ4ODdiN2EzYTU2YzU4OGYwZDU1MGEyOWJhMmZmZTk4ODUxN2MwNGNhMmU5ODZmYzZlY2U4NmNlODIxYw==",
      "id": "0xdeeb4887b7a3a56c588f0d550a29ba2ffe988517c04ca2e986fc6ece86ce821c",
      "title": "GGP-0031 - Bundled GIPs - 0041 Store Dispute Status on Resolution & 0059 Remove Owner Tax",
      "content": "The previous vote for this GGP expired before Council members could vote: https://snapshot.org/#/council.graphprotocol.eth/proposal/0x40370601669c1c772bbb07042c96526f90d96cb14c34fa5de36a9fe42d31c69a - so this is a second attempt for the same proposal.\n\nGIP-0041\nTitle: Store Dispute Status on Resolution\nAuthors: jordan@soulbound.xyz goose@soulbound.xyz\nAbstract:\nThe Dispute Manager contract allows fisherman to police Indexer activity by submitting disputes for invalid indexing or query responses. Right now, disputes are deleted on resolution instead of being marked as accepted, rejected, or drawn. This prevents other smart contracts from tracking the status of disputes and past Indexer slashing events. Rather than delete disputes, this proposal suggests that the Dispute Manager contract should permanently store disputes alongside their status.\n\nMotivation:\nSpyglass Labs is building a Subgraph Bridge designed to offload prohibitively expensive computations from the EVM to The Graph.\nOur goal is to prevent query responses from Indexers from being certified on-chain if that response is tied to either an active or valid dispute.\nWe consider this is a great addition to the core functionality of the Dispute Manager that will help transform subgraphs into read-oriented rollups.\n\nGIP-0059\nTitle: Remove Owner Tax\nAuthors: Ariel Barmat, Adam Fuller\nAbstract:\nWe propose setting the owner tax on the GNS to 0%, effectively disabling this mechanism that works any time a subgraph owner publishes a new version.\n\nMotivation:\nThe idea of introducing an \"owner tax\" was to prevent a grieving attack in which a subgraph owner repeatedly publishes new versions and then drains its curators via the \"curation tax\".\nThe consequence is that it also introduces friction every time an honest subgraph owner updates their versions:\n\nThey need to have GRT available in the wallet everytime they publish a new version. This in addition to having ETH to pay for transaction fees.\nMental cost of planning the amount of GRT they need for paying the tax. If the curation pool is big enough it can amount to a high value.\nOur belief is that this adds unnecessary high friction for little gain considering the reality of the curation market.\nOur observation about how the curation market developed in the last two years shows that subgraph owners do most of their own curation as they are naturally incentivized to have their subgraph indexed on the network. Additionally, we believe that if a subgraph owner misbehave it will be penalized by curators and they will then be more careful at verifying the accounts that create those subgraphs before supporting them.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xfF15883A2eEEc9C3b74238230C9F898c4d79BA47",
      "totalVotes": 6,
      "blockNumber": 18677066,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0xdeeb4887b7a3a56c588f0d550a29ba2ffe988517c04ca2e986fc6ece86ce821c",
      "startTime": {
        "timestamp": 1701258486
      },
      "endTime": {
        "timestamp": 1703850420
      },
      "startTimestamp": 1701258486,
      "endTimestamp": 1703850420,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1701258708743,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4MGY5MmI2NDU4MmM1ZjAwOWIyZDRmNTBmOWEwMGJmNjZlZDlmYTg2ZjY1MTRlMjY5NzY5YTUwMjQ4NjBiMDI1Yg==",
      "id": "0x0f92b64582c5f009b2d4f50f9a00bf66ed9fa86f6514e269769a5024860b025b",
      "title": "GGP 0033: Increase L2 rewards to 95%",
      "content": "(This proposal has already been executed on November 27th, so this GGP is a means to officially ratify the action)\n\nGIP: 0052\n\nTitle: Timeline and requirements to increase rewards in L2\n\nAuthors: Pablo Carranza Vélez, Ariel Barmat, Tomás Migone\n\nSince GIP-0031 and GIP-0040 have been deployed, The Graph now runs the protocol on both Ethereum Mainnet (L1) and Arbitrum One (L2). Participants are free to perform actions on either chain, and as GIP-0037 and GIP-0043 have been rolled out, indexing rewards in L2 are enabled and set at 50% of total issuance.\n\nTransfer tools have also been deployed as per GIP-0046 to allow participants to transfer their stake, delegation, subgraphs and curation to L2.\n\nGIP-0052 depends on GIP-0046 and proposes increasing the indexing rewards in L2, in several steps until fully transitioning protocol issuance to Arbitrum One. This GGP proposes approving the third step, increasing issuance in Arbitrum One to 95% of total issuance (and reducing it in L1 accordingly), on November 27th, 2023, if no blocking issues are reported before then.\n\nFollowing a successful vote of this proposal, the following transactions will be executed:\n\n- The increase of L2 rewards to 95% of total issuance (114.6935 GRT per block) will be on Arbitrum One on November 27th.\n- Reducing L1 issuance to 5% (i.e. 6.0365 GRT per block) will be executed at the same time.\n- The L1 bridge mint allowance will be adjusted accordingly afterwards.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xfF15883A2eEEc9C3b74238230C9F898c4d79BA47",
      "totalVotes": 6,
      "blockNumber": 18677051,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x0f92b64582c5f009b2d4f50f9a00bf66ed9fa86f6514e269769a5024860b025b",
      "startTime": {
        "timestamp": 1701258321
      },
      "endTime": {
        "timestamp": 1703850240
      },
      "startTimestamp": 1701258321,
      "endTimestamp": 1703850240,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1701258708743,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4Y2I3Y2U0YWFkOWYxODk2MWQzYTRlYmU3N2E5YTZmMzJmNmE2MzM1MTkzZjUzMWUyYzY4ZjkzMDgzNDZjOWU2ZQ==",
      "id": "0xcb7ce4aad9f18961d3a4ebe77a9a6f32f6a6335193f531e2c68f9308346c9e6e",
      "title": "GGP-0036: Add full protocol support for both Optimism subgraphs and SPS",
      "content": "### Executive Summary\n\nThis GGP proposes adding full protocol support for Optimism subgraphs and Substreams-powered subgraphs [(SPS)](https://thegraph.com/docs/en/cookbook/substreams-powered-subgraphs/).\n\n### Context\n\nAs part of the new [Chain Integration Process (CIP) GIP](https://github.com/PedroMD/graph-improvement-proposals/blob/chain-integration-process/gips/0057-chain-integration-process.md) (3-stage simplified overview [here](https://thegraph.com/docs/en/chain-integration-overview/)), the Optimism team has [formally requested](https://forum.thegraph.com/t/add-support-for-op-mainnet/4623/3) protocol integration via [The Graph’s Forum](https://forum.thegraph.com/t/add-support-for-op-mainnet/4623/3). Council ratification of indexing rewards on this new Subgraph Data Source is the last step of that process.\n\n### Description\n\nOptimism is already supported in the [Subgraph Studio](https://thegraph.com/studio/) (1st stage), and the Optimism stack and docs have been tested for reliability and determinism issues during subgraph syncing. InfraDAO conducted this testing as part of stage 2 of the CIP. As stated in the CIP, full protocol support for a new subgraph data source (chain) requires a final vote in favor of the Council. Hence, this GGP. Furthermore, support for SPS is bundled into this GGP given the newly launched [Optimism Firehose](https://github.com/streamingfast/firehose-core/releases/tag/v1.0.0) (based on EVM JSON-RPC polling), built by the StreamingFast team (related GIP [here](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0055-evm-firehose.md)).\n\n### **Next Steps**\n\n1. Pending Council approval, the canonical Subgraph feature support matrix will be updated and the related [PR](https://github.com/graphprotocol/indexer/pull/828) merged, effectively signaling full protocol support for Optimism subgraphs and SPS on mainnet. \n2. InfraDAO's Indexer-focused documentation on how to set up the Optimism node for subgraph and SPS syncing will be added to the protocol's [canonical documentation page](www.thegraph.com/docs). This will include the newly launched Firehose Optimism.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xb731A785B0B5012a1E5B3480653A4E5DF05ffD0A",
      "totalVotes": 6,
      "blockNumber": 18787546,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0xcb7ce4aad9f18961d3a4ebe77a9a6f32f6a6335193f531e2c68f9308346c9e6e",
      "startTime": {
        "timestamp": 1702595349
      },
      "endTime": {
        "timestamp": 1703286480
      },
      "startTimestamp": 1702595349,
      "endTimestamp": 1703286480,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1702595515395,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4MTljYmIxYzRiOTAzNmNiN2IzMWU5NDAyY2I1YTVjY2I5MGM2Njk2MWE0NmE0MGFmNWNjNDY0MjRmMTU5ODRiOQ==",
      "id": "0x19cbb1c4b9036cb7b31e9402cb5a5ccb90c66961a46a40af5cc46424f15984b9",
      "title": "GGP 0033: Increase L2 rewards to 95%",
      "content": "GIP: 0052\n\nTitle: Timeline and requirements to increase rewards in L2\n\nAuthors: Pablo Carranza Vélez, Ariel Barmat, Tomás Migone\n\nSince [GIP-0031](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0031-arbitrum-grt-bridge.md) and [GIP-0040](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0040-deploy-l2.md) have been deployed, The Graph now runs the protocol on both Ethereum Mainnet (L1) and Arbitrum One (L2). Participants are free to perform actions on either chain, and as [GIP-0037](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0037-arbitrum-linear-rewards.md) and [GIP-0043](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0043-l2-indexing-rewards.md) have been rolled out, indexing rewards in L2 are enabled and set at 50% of total issuance.\n\nTransfer tools have also been deployed as per [GIP-0046](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0046-l2-transfer-tools.md) to allow participants to transfer their stake, delegation, subgraphs and curation to L2.\n\n[GIP-0052](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0052-timeline-and-requirements-for-l2-rewards.md) depends on GIP-0046 and proposes increasing the indexing rewards in L2, in several steps until fully transitioning protocol issuance to Arbitrum One. This GGP proposes approving the third step, increasing issuance in Arbitrum One to 95% of total issuance (and reducing it in L1 accordingly), on November 27th, 2023, if no blocking issues are reported before then.\n\nFollowing a successful vote of this proposal, the following transactions will be executed:\n\n- The increase of L2 rewards to 95% of total issuance (114.6935 GRT per block) will be on Arbitrum One on November 27th.\n- Reducing L1 issuance to 5% (i.e. 6.0365 GRT per block) will be executed at the same time.\n- The L1 bridge mint allowance will be adjusted accordingly afterwards.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xfF15883A2eEEc9C3b74238230C9F898c4d79BA47",
      "totalVotes": 5,
      "blockNumber": 18636874,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x19cbb1c4b9036cb7b31e9402cb5a5ccb90c66961a46a40af5cc46424f15984b9",
      "startTime": {
        "timestamp": 1700772119
      },
      "endTime": {
        "timestamp": 1701172800
      },
      "startTimestamp": 1700772119,
      "endTimestamp": 1701172800,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 5.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 5.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1700772642292,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4MDVhMTA3ZTFhNmI0OThiN2Y5ODkyMTNlZDUxOTA1NjZmMjFlZmM1Y2ExYmM2ZDE4YmMxODhjYjdhMjU5OGE3MA==",
      "id": "0x05a107e1a6b498b7f989213ed5190566f21efc5ca1bc6d18bc188cb7a2598a70",
      "title": "GGP-0032 Update Feature Support Matrix for Graph Node v0.33.0",
      "content": "### Description\nThis is an update to the previously ratified Feature Support Matrix included in [GGP-0028](https://snapshot.org/#/council.graphprotocol.eth/proposal/0xa7dcaf27d3b8cb6c135c398753a82fb4a6fc1ff5ad666cb131109f2de506253c), [GGP-0026](https://snapshot.org/#/council.graphprotocol.eth/proposal/0x80c55bb8697d16fedb71ccdce40704f24e931cc28f289a029e0717f3b729e6a8), [GGP-0025](https://snapshot.org/#/council.graphprotocol.eth/proposal/0xb4b297e553a1ed29bfa9a0e0ad121947c186e332df3dfff2a6526ddd545bd796), [GGP-0023](https://snapshot.org/#/council.graphprotocol.eth/proposal/0xd40fe605ecc3d0faca07d6c8d85a3f0d66106ef9e206aa57397de776f0a76a2c), [GGP-0022](https://snapshot.org/#/council.graphprotocol.eth/proposal/0x324e7a971db9f98d2bfeeef587f3c0a5c0ae0ff211e75daa99270d42d6fc6ca5), [GGP-0018](https://snapshot.org/#/council.graphprotocol.eth/proposal/0x4fa76f9ae541bf883e547407270866ffeb8448f3b3fca90bb9c5bc46e31499c2) and [GGP-0015](https://snapshot.org/#/council.graphprotocol.eth/proposal/0xbdd884654a393620a7e8665b4289201b7542c3ee62becfad133e951b0c408444).\n\nRelease notes for the upgrade can be found [here](https://github.com/graphprotocol/graph-node/releases/tag/v0.31.0-rc.0).\n\n### Next Steps\n[This PR](https://github.com/graphprotocol/indexer/pull/810) will be closed pending approval. Afterward, mainnet Indexers will be encouraged to upgrade Graph Node.\n\n### Feature Support Matrix\nThis defines indexing & querying features that are experimental or not fully supported for indexing & query rewards and arbitration (more information can be found in [GIP-008](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0008-subgraph-api-versioning-and-feature-support.md)).\n\n`graph-node: >=0.33.0 <0.34.0`\n| Subgraph Feature         | Aliases       | Implemented | Experimental | Query Arbitration | Indexing Arbitration | Indexing Rewards |\n| ------------------------ | ------------- | ----------- | ------------ | ----------------- | -------------------- | ---------------- |\n| **Core Features**        |               |             |              |                   |                      |                  |\n| Full-text Search         |               | Yes         | No           | No                | Yes                  | Yes              |\n| Non-Fatal Errors         |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| Grafting                 |               | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| **Data Source Types**    |               |             |              |                   |                      |                  |\n| eip155:*                 | *             | Yes         | No           | No                | No                   | No               |\n| eip155:1                 | mainnet       | Yes         | No           | Yes               | Yes                  | Yes              |\n| eip155:100               | gnosis        | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| near:*                   | *             | Yes         | Yes          | No                | No                   | No               |\n| cosmos:*                 | *             | Yes         | Yes          | No                | No                   | No               |\n| arweave:*                | *             | Yes         | Yes          | No                | No                   | No               |\n| eip155:42161             | artbitrum-one | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:42220             | celo          | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:43114             | avalanche     | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:250               | fantom        | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| eip155:137               | polygon       | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| **Data Source Features** |               |             |              |                   |                      |                  |\n| ipfs.cat in mappings     |               | Yes         | Yes          | No                | No                   | No               |\n| ENS                      |               | Yes         | Yes          | No                | No                   | No               |\n| File data sources: IPFS  |               | Yes         | Yes          | No                | Yes                  | Yes              |\n| Substreams data sources  | mainnet       | Yes         | Yes          | Yes               | Yes                  | Yes",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xF535F5bC19809cd99602232D93a628ACD2bF83D7",
      "totalVotes": 7,
      "blockNumber": 18435384,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x05a107e1a6b498b7f989213ed5190566f21efc5ca1bc6d18bc188cb7a2598a70",
      "startTime": {
        "timestamp": 1698336000
      },
      "endTime": {
        "timestamp": 1698940800
      },
      "startTimestamp": 1698336000,
      "endTimestamp": 1698940800,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 7.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 7.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1698335629226,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4NDAzNzA2MDE2NjljMWM3NzJiYmIwNzA0MmM5NjUyNmY5MGQ5NmNiMTRjMzRmYTVkZTM2YTlmZTQyZDMxYzY5YQ==",
      "id": "0x40370601669c1c772bbb07042c96526f90d96cb14c34fa5de36a9fe42d31c69a",
      "title": "GGP-0031 - Bundled GIPs - 0041 Store Dispute Status on Resolution & 0059 Remove Owner Tax",
      "content": "[GIP-0041](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0041-Store-Dispute-status-on-Resolution.md)\nTitle: Store Dispute Status on Resolution\nAuthors: jordan@soulbound.xyz goose@soulbound.xyz\nAbstract: \nThe Dispute Manager contract allows fisherman to police Indexer activity by submitting disputes for invalid indexing or query responses. Right now, disputes are deleted on resolution instead of being marked as accepted, rejected, or drawn. This prevents other smart contracts from tracking the status of disputes and past Indexer slashing events. Rather than delete disputes, this proposal suggests that the Dispute Manager contract should permanently store disputes alongside their status.\n\nMotivation: \nSpyglass Labs is building a Subgraph Bridge designed to offload prohibitively expensive computations from the EVM to The Graph.\nOur goal is to prevent query responses from Indexers from being certified on-chain if that response is tied to either an active or valid dispute.\nWe consider this is a great addition to the core functionality of the Dispute Manager that will help transform subgraphs into read-oriented rollups.\n\n[GIP-0059](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0059-disable-subgraph-owner-tax.md)\nTitle: Remove Owner Tax\nAuthors: [Ariel Barmat](ariel@edgeandnode.com), [Adam Fuller](adam@edgeandnode.com)\nAbstract: \nWe propose setting the owner tax on the GNS to 0%, effectively disabling this mechanism that works any time a subgraph owner publishes a new version.\n\nMotivation: \nThe idea of introducing an \"owner tax\" was to prevent a grieving attack in which a subgraph owner repeatedly publishes new versions and then drains its curators via the \"curation tax\".\nThe consequence is that it also introduces friction every time an honest subgraph owner updates their versions:\n- They need to have GRT available in the wallet everytime they publish a new version. This in addition to having ETH to pay for transaction fees.\n- Mental cost of planning the amount of GRT they need for paying the tax. If the curation pool is big enough it can amount to a high value.\n\nOur belief is that this adds unnecessary high friction for little gain considering the reality of the curation market.\nOur observation about how the curation market developed in the last two years shows that subgraph owners do most of their own curation as they are naturally incentivized to have their subgraph indexed on the network. Additionally, we believe that if a subgraph owner misbehave it will be penalized by curators and they will then be more careful at verifying the accounts that create those subgraphs before supporting them.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xF535F5bC19809cd99602232D93a628ACD2bF83D7",
      "totalVotes": 4,
      "blockNumber": 18392001,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x40370601669c1c772bbb07042c96526f90d96cb14c34fa5de36a9fe42d31c69a",
      "startTime": {
        "timestamp": 1697811300
      },
      "endTime": {
        "timestamp": 1698728400
      },
      "startTimestamp": 1697811300,
      "endTimestamp": 1698728400,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 4.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 4.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1697810804915,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4YTBlZjg1NDMxMDRlNTdlMzk5ZWMwOTJjYWI3MjliYTA1MWJlNDc1YTc3ZDVlOTg2NTRjOWE3OGMwNDc2MmM3OA==",
      "id": "0xa0ef8543104e57e399ec092cab729ba051be475a77d5e98654c9a78c04762c78",
      "title": "GGP-0030: Increase L2 Rewards to 50%",
      "content": "GIP: 0052\nTitle: Timeline and requirements to increase rewards in L2\nAuthors: [Pablo Carranza Vélez](https://snapshot.org/pablo@edgeandnode.com), [Ariel Barmat](https://snapshot.org/ariel@edgeandnode.com), [Tomás Migone](https://snapshot.org/tomas@edgeandnode.com)\n\nSince [GIP-0031](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0031-arbitrum-grt-bridge.md) and [GIP-0040](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0040-deploy-l2.md) have been deployed, The Graph now runs the protocol on both Ethereum Mainnet (L1) and Arbitrum One (L2). Participants are free to perform actions on either chain, and as [GIP-0037](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0037-arbitrum-linear-rewards.md) and [GIP-0043](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0043-l2-indexing-rewards.md) have been rolled out, indexing rewards in L2 are enabled and set at 25% of total issuance.\n\nTransfer tools have also been deployed as per [GIP-0046](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0046-l2-transfer-tools.md) to allow participants to transfer their stake, delegation, subgraphs and curation to L2.\n\n[GIP-0052](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0052-timeline-and-requirements-for-l2-rewards.md) depends on GIP-0046 and proposes increasing the indexing rewards in L2, in several steps until fully transitioning protocol issuance to Arbitrum One. This GGP proposes approving the second step, increasing issuance in Arbitrum One to 50% of total issuance (and reducing it in L1 accordingly), on September 25th, 2023, if no blocking issues are reported before then.\n\nFollowing a successful vote of this proposal, the following transactions will be executed:\n\n- The initial increase of L2 rewards to 50% of total issuance (60.365 GRT per block) will be on Arbitrum One on September 25th.\n- Reducing L1 issuance to 50% (i.e. 60.365 GRT per block) will be executed at the same time.\n- The L1 bridge mint allowance will be adjusted accordingly afterwards.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xF535F5bC19809cd99602232D93a628ACD2bF83D7",
      "totalVotes": 6,
      "blockNumber": 18142098,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0xa0ef8543104e57e399ec092cab729ba051be475a77d5e98654c9a78c04762c78",
      "startTime": {
        "timestamp": 1694786852
      },
      "endTime": {
        "timestamp": 1695268800
      },
      "startTimestamp": 1694786852,
      "endTimestamp": 1695268800,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1694787107741,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4Y2FjNmM4ZWY0MDgwYmNkZWQyNjdiYTI5YTgwYmExNDRhZWRlZWIwOTFmNzhlYmY3MzQ1OTZjYmJlNTQ3N2MzYw==",
      "id": "0xcac6c8ef4080bcded267ba29a80ba144aedeeb091f78ebf734596cbbe5477c3c",
      "title": "GGP-0029: Increase L2 Rewards to 25%",
      "content": "GIP: 0052\nTitle: Timeline and requirements to increase rewards in L2\nAuthors: [Pablo Carranza Vélez](pablo@edgeandnode.com), [Ariel Barmat](ariel@edgeandnode.com), [Tomás Migone](tomas@edgeandnode.com)\n\nSince [GIP-0031](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0031-arbitrum-grt-bridge.md) and [GIP-0040](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0040-deploy-l2.md) have been deployed, The Graph now runs the protocol on both Ethereum Mainnet (L1) and Arbitrum One (L2). Participants are free to perform actions on either chain, and as [GIP-0037](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0037-arbitrum-linear-rewards.md) and [GIP-0043](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0043-l2-indexing-rewards.md) have been rolled out, indexing rewards in L2 are enabled and set at 5% of total issuance.\n\nTransfer tools have also been deployed as per [GIP-0046](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0046-l2-transfer-tools.md) to allow participants to transfer their stake, delegation, subgraphs and curation to L2.\n\n[GIP-0052](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0052-timeline-and-requirements-for-l2-rewards.md) depends on GIP-0046 and proposes increasing the indexing rewards in L2, in several steps until fully transitioning protocol issuance to Arbitrum One. **This GGP proposes approving, for now, only the first of such steps, increasing issuance in Arbitrum One to 25%** of total issuance (and reducing it in L1 accordingly), **on September 10th, 2023,** if no blocking issues are reported before then.\n\nFollowing a successful a successful vote of this proposal, the following transactions will be executed:\n\n- The initial increase of L2 rewards to 25% of total issuance (30.1825 GRT per block) will be on Arbitrum One on September 10th.\n- Reducing L1 issuance to 75% (i.e. 90.5475 GRT per block) will be executed at the same time.\n- A third transaction to adjust the L1 bridge mint limit accordingly will be executed in the following days after that.\n\nFor practical reasons, the Council transactions may be batched with the deployment of Exponential Rebates as per GGP-0027.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xF535F5bC19809cd99602232D93a628ACD2bF83D7",
      "totalVotes": 6,
      "blockNumber": 18037656,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0xcac6c8ef4080bcded267ba29a80ba144aedeeb091f78ebf734596cbbe5477c3c",
      "startTime": {
        "timestamp": 1693522800
      },
      "endTime": {
        "timestamp": 1694034000
      },
      "startTimestamp": 1693522800,
      "endTimestamp": 1694034000,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1693522834810,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4YTdkY2FmMjdkM2I4Y2I2YzEzNWMzOTg3NTNhODJmYjRhNmZjMWZmNWFkNjY2Y2IxMzExMDlmMmRlNTA2MjUzYw==",
      "id": "0xa7dcaf27d3b8cb6c135c398753a82fb4a6fc1ff5ad666cb131109f2de506253c",
      "title": "GGP-0028 Update Feature Support Matrix for Graph Node v0.32.0",
      "content": "Description\nThis is an update to the previously ratified Feature Support Matrix included in [GGP-0026](https://snapshot.org/#/council.graphprotocol.eth/proposal/0x80c55bb8697d16fedb71ccdce40704f24e931cc28f289a029e0717f3b729e6a8), [GGP-0025](https://snapshot.org/#/council.graphprotocol.eth/proposal/0xb4b297e553a1ed29bfa9a0e0ad121947c186e332df3dfff2a6526ddd545bd796), [GGP-0023](https://snapshot.org/#/council.graphprotocol.eth/proposal/0xd40fe605ecc3d0faca07d6c8d85a3f0d66106ef9e206aa57397de776f0a76a2c), [GGP-0022](https://snapshot.org/#/council.graphprotocol.eth/proposal/0x324e7a971db9f98d2bfeeef587f3c0a5c0ae0ff211e75daa99270d42d6fc6ca5), [GGP-0018](https://snapshot.org/#/council.graphprotocol.eth/proposal/0x4fa76f9ae541bf883e547407270866ffeb8448f3b3fca90bb9c5bc46e31499c2) and [GGP-0015](https://snapshot.org/#/council.graphprotocol.eth/proposal/0xbdd884654a393620a7e8665b4289201b7542c3ee62becfad133e951b0c408444).\n\nRelease notes outlining what’s new and bug fixes can be found [here](https://github.com/graphprotocol/graph-node/releases).\n\nAs always, in the process of preparing a release, we run the current and previous versions of Graph Node against a wide set of test subgraphs, checking each for POI consistency across versions. In this case, we found some inconsistencies in the initial test run, but on further investigation that was due to issues with the upstream provider, rather than bugs with Graph Node.\n\nFeature Support Matrix\n`graph-node: >=0.32 <0.33`\n![Feature Matrix Table v32.png](ipfs://bafkreifpxxauclgfac5mleoj73yrgocfrdffrdw22r34xu7bpsqae7byjq)\n\n\nNext Steps \nOnce ratified, Graph Node v0.32.0 will be released for mainnet adoption and [this PR](https://github.com/graphprotocol/indexer/pull/722) will be merged.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xF535F5bC19809cd99602232D93a628ACD2bF83D7",
      "totalVotes": 6,
      "blockNumber": 17964241,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0xa7dcaf27d3b8cb6c135c398753a82fb4a6fc1ff5ad666cb131109f2de506253c",
      "startTime": {
        "timestamp": 1692634822
      },
      "endTime": {
        "timestamp": 1692982800
      },
      "startTimestamp": 1692634822,
      "endTimestamp": 1692982800,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1692635351610,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4NjZkMjJkMGQ2MWQzOTZjNGYwNGNmZWE3Y2I1OWI1NmVlYThlZWQ0NTUwM2Q2MmMyODZlNGNlYjBkZmIyODk2YQ==",
      "id": "0x66d22d0d61d396c4f04cfea7cb59b56eea8eed45503d62c286e4ceb0dfb2896a",
      "title": "GGP-0027 Deploy Exponential Rebates upgrade",
      "content": "GIP: 0051\nTitle: Exponential Query Fee Rebates for Indexers\nAuthors: [Justin Grana](justin@edgeandnode.com), [Howard Heaton](howard@edgeandnode.com), [Tomás Migone](tomas@edgeandnode.com)\n\n***Description***\nGIP-0051 proposes replacing the current query fee rebate distribution mechanism for an exponential function based one to alleviate the shortcomings of the Cobb-Douglas approach. This change requires upgrading the Staking, StakingExtension and RewardsManager contracts on L1 and L2. Additionally, the new mechanism requires setting the rebate parameters to the values recommended in the GIP (α=1 and λ=0.6).\n\nTo minimize potential query fee loses for indexers and guarantee a smooth transition the upgrade will be executed in two stages:\n\n- Stage 1: update a network parameter (`channelDisputeEpochs` to `1 epoch`) to facilitate indexer’s management of allocations and query fee collection.\n- Stage 2: perform the contracts upgrade and configuration.\n\nThe date of execution for each stage will be announced publicly via The Graph’s forum and discord channels **at least one week before it occurs.** For more details on this two stage approach see the GIP.\n\n**This GGP proposes approving the upgrades from GIP-0051.** Following a successful “yes” vote, the proposed updates from GIP-0051 will be executed following the [test plan](https://www.notion.so/a2016b6ce058493a98e86f35e8c650cc?pvs=21) and [deployment plan](https://www.notion.so/8640ce2700b24524b079b2391d72194f?pvs=21) set out by the Edge & Node Smart Contracts team.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xF535F5bC19809cd99602232D93a628ACD2bF83D7",
      "totalVotes": 6,
      "blockNumber": 17877488,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x66d22d0d61d396c4f04cfea7cb59b56eea8eed45503d62c286e4ceb0dfb2896a",
      "startTime": {
        "timestamp": 1691586000
      },
      "endTime": {
        "timestamp": 1692115200
      },
      "startTimestamp": 1691586000,
      "endTimestamp": 1692115200,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1691585962727,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4YjRiMjk3ZTU1M2ExZWQyOWJmYTlhMGUwYWQxMjE5NDdjMTg2ZTMzMmRmM2RmZmYyYTY1MjZkZGQ1NDViZDc5Ng==",
      "id": "0xb4b297e553a1ed29bfa9a0e0ad121947c186e332df3dfff2a6526ddd545bd796",
      "title": "GPP-0025 Update Feature Support Matrix (Graph Node v0.31.0) Substreams Data Sources",
      "content": "## Description\nThis is an update to the previously ratified Feature Support Matrix included in [GGP-0026](https://snapshot.org/#/council.graphprotocol.eth/proposal/0x80c55bb8697d16fedb71ccdce40704f24e931cc28f289a029e0717f3b729e6a8), [GGP-0023](https://snapshot.org/#/council.graphprotocol.eth/proposal/0xd40fe605ecc3d0faca07d6c8d85a3f0d66106ef9e206aa57397de776f0a76a2c), [GGP-0022](https://snapshot.org/#/council.graphprotocol.eth/proposal/0x324e7a971db9f98d2bfeeef587f3c0a5c0ae0ff211e75daa99270d42d6fc6ca5), and [GGP-0018](https://snapshot.org/#/council.graphprotocol.eth/proposal/0x4fa76f9ae541bf883e547407270866ffeb8448f3b3fca90bb9c5bc46e31499c2).\n\nTo ensure that Indexers will index substreams-powered subgraphs, the GIP proposes to add Oracle support for dataSource.kind ==\"substreams\" to the Feature Matrix. This would make an important moment where the performance promises we have made come to fruition. With a very important indexing-time performance boost, as well as an important injection-time performance boost.\nAdding Substreams support to Graph Node is the fastest way to bring the performance and composability benefits of substreams to The Graph Network.\n\n### Next Steps\nMerge the PR on the Indexer repo if and when the council vote is approved.\n \n### Updated Feature Support Matrix\nThis GIP proposes initial support for indexing rewards only on Ethereum mainnet (mainnet) substreams. However, it doesn't mean indexing rewards will be supported on a chain basis: mainnet is the starting point, based on early data determinism assurances and Indexer readiness to operate an Ethereum Firehose at scale, whose implementation has been battle-tested by core developers and the Indexer community during the [MIPs program](https://thegraph.com/migration-incentive-program/). More on data determinism can be found in [Deterministic indexing](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0053-enabling-substreams-based-subgraphs.md#deterministic-indexing).\n\nThe proposed updated Feature Matrix, including the new Substreams data sources subgraph feature, with indexing rewards support for mainnet substreams. More on Subgraph API versioning and feature support can be found in [GIP-008](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0008-subgraph-api-versioning-and-feature-support.md).\n\n`graph-node: >=0.31 <0.32`\n\n![Screenshot 2023-07-18 at 10.27.30 AM.png](ipfs://bafkreibguyobqjfgsxx5ur5f43xsfi6o245vg2mh24girgrk45r5ldavbe)",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xF535F5bC19809cd99602232D93a628ACD2bF83D7",
      "totalVotes": 7,
      "blockNumber": 17721388,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0xb4b297e553a1ed29bfa9a0e0ad121947c186e332df3dfff2a6526ddd545bd796",
      "startTime": {
        "timestamp": 1689699600
      },
      "endTime": {
        "timestamp": 1689973200
      },
      "startTimestamp": 1689699600,
      "endTimestamp": 1689973200,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 7.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 7.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1689699562622,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4ODBjNTViYjg2OTdkMTZmZWRiNzFjY2RjZTQwNzA0ZjI0ZTkzMWNjMjhmMjg5YTAyOWUwNzE3ZjNiNzI5ZTZhOA==",
      "id": "0x80c55bb8697d16fedb71ccdce40704f24e931cc28f289a029e0717f3b729e6a8",
      "title": "GGP-0026: Updated Feature Matrix Support (Graph Node v0.31.0)",
      "content": "## Description\n\nThis GGP includes a proposed updated Feature Support Matrix, including the new Graph Node release 0.31.0, whose release notes are [here](https://github.com/graphprotocol/graph-node/releases/tag/v0.31.0-rc.0). This is an update to the previously ratified matrix in [GGP-0023](https://snapshot.org/#/council.graphprotocol.eth/proposal/0xd40fe605ecc3d0faca07d6c8d85a3f0d66106ef9e206aa57397de776f0a76a2c). \n\nAs with every new release, no POI divergences have been found after syncing ~100 subgraphs and comparing them against the previously ratified version.\n\n## Next steps\n\n[This PR](https://github.com/graphprotocol/indexer/pull/664) will be closed pending approval. Afterward, mainnet Indexers will be encouraged to upgrade Graph Node. \n\n## Feature Support Matrix\n\n> This defines indexing & querying features that are experimental or not fully supported for indexing & query rewards and arbitration (more information can be found in [GIP-008](https://snapshot.org/#/council.graphprotocol.eth/proposal/0xbdd884654a393620a7e8665b4289201b7542c3ee62becfad133e951b0c408444)).\n>\n\ngraph-node: ≥0.31.0 <0.32.0\nvalid from: 874\nupgrade window: 890 \n\n![v31 Feature Support Matrix.png](ipfs://bafkreibjicn3smrnrltovpiasuo4ojheo7mvemdwaovsialbcu4dahgbaq)",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xF535F5bC19809cd99602232D93a628ACD2bF83D7",
      "totalVotes": 6,
      "blockNumber": 17493195,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x80c55bb8697d16fedb71ccdce40704f24e931cc28f289a029e0717f3b729e6a8",
      "startTime": {
        "timestamp": 1686927600
      },
      "endTime": {
        "timestamp": 1687532400
      },
      "startTimestamp": 1686927600,
      "endTimestamp": 1687532400,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1686928312524,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4NjBhZDZkYjdmNzY4NDA3ZDJjYTY2MzEwYTVhZjk0YmJjOWI2NTg5ZDU3M2YwMzNjYWY5NTBhOGQ3Y2ZmNWY2OQ==",
      "id": "0x60ad6db7f768407d2ca66310a5af94bbc9b6589d573f033caf950a8d7cff5f69",
      "title": "GGP-24: Deploy L2 transfer tools",
      "content": "# **GIPs**\n\nGIP: 0046\nTitle: L2 Transfer Tools\nAuthors: Pablo Carranza Vélez [pablo@edgeandnode.com](mailto:pablo@edgeandnode.com), Ariel Barmat [ariel@edgeandnode.com](mailto:ariel@edgeandnode.com), Tomás Migone [tomas@edgeandnode.com](mailto:tomas@edgeandnode.com)\nDiscussion: https://forum.thegraph.com/t/gip-0046-l2-transfer-tools/4023\n\n\n# **Graph Governance Proposal 0024**\n\nSince GIP-0031 and GIP-0040 have been deployed, The Graph now runs the protocol on both Ethereum Mainnet (L1) and Arbitrum One (L2). Participants are free to perform actions on either chain, and as GIP-0037 and GIP-0043 have been rolled out, indexing rewards in L2 are enabled and set at 5% of total issuance.\n\nTo allow participants to easily transfer their Subgraphs, Curation, Stake and Delegation to L2, GIP-0046 has been presented, introducing a set of Transfer Tools. These require updates to the Staking, Curation and GNS contracts on L1 and L2. They also require adding L1 Staking and GNS to the L1GraphTokenGateway’s allowlist so that bridge callhooks to L2 can be sent from these contracts. The GIP also introduces transfer tool contracts for vesting locks (L1GraphTokenLockTransferTool and L2GraphTokenLockTransferTool), which will be governed by The Graph Foundation with technical support from Edge & Node, and should also be added to the bridge allowlist. **This GGP proposes approving the upgrades from GIP-0046.**\n\nFollowing a successful “yes” vote, the proposed updates from GIP-0046 will be executed following the test and deployment plan set out by the Edge & Node Smart Contracts team. The transfer tools for subgraphs and curation will be deployed first, with the stake, delegation and vesting transfer tools being deployed soon after.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xd2Ee184F196471Baee9A511a0B40538eBEdc6de2",
      "totalVotes": 7,
      "blockNumber": 17372328,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x60ad6db7f768407d2ca66310a5af94bbc9b6589d573f033caf950a8d7cff5f69",
      "startTime": {
        "timestamp": 1685456855
      },
      "endTime": {
        "timestamp": 1686061800
      },
      "startTimestamp": 1685456855,
      "endTimestamp": 1686061800,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 7.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 7.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1685457216722,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4ZDQwZmU2MDVlY2MzZDBmYWNhMDdkNmM4ZDg1YTNmMGQ2NjEwNmVmOWUyMDZhYTU3Mzk3ZGU3NzZmMGE3NmEyYw==",
      "id": "0xd40fe605ecc3d0faca07d6c8d85a3f0d66106ef9e206aa57397de776f0a76a2c",
      "title": "GGP 0023: Add Mainnet Support for Fantom and Polygon Data Sources",
      "content": "## Summary\n\nThis GGP proposal now updates the previously ratified Feature Support Matrix (GGP-0022) to include two new data sources: Fantom and Polygon.\n\n## Polygon and Fantom QoS Analysis\n\nThe table below summarises the gateway-based QoS metrics extracted for the two-week period MIPs participants were actively serving MIPs subgraphs on Goerli. \n\n| Chain / metric | Unique indexers | total_queries | num_failed_queries | success_rate | median_blocks_behind | median_blocks_behind (s) &  ~ block time | median_latency_ms | latency_90th_pctl_ms | latency_99th_pctl_ms |\n| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |\n| Gnosis |  | 8598567 | 56007 | 0.987967 | 3.0 | 15 (5s) | 170 | 489 | 1847 |\n| Arbitrum |  | 40252971 | 6796 | 0.998203 | 74.0 | 18 (235 ms) | 495 | 2360 | 5251 |\n| Avalanche |  | 19963197 | 337 | 0.956189 | 12.0 | 24 (2s) | 866 | 5623 | 11574 |\n| Celo |  | 186043 | 372 | 0.998198 | 4.0 | 20 (5s) | 371 | 677 | 1221 |\n| Fantom | 346 | 92953179 | 1600189 | 0.992686 | 39.0 | 39 (1s) | 558 | 1448 | 3866 |\n| Polygon | 296 | 16919043 | 47410 | 0.998677 | 17.0 | 34 (2s) | 387 | 1157 | 3199 |\n\nThe list of subgraphs Indexers have synced and served can be found here for [Polygon](https://www.notion.so/5be50604e5d24e1788249d56c46448d0) and [Fantom](https://www.notion.so/a9f9ae7ef4cc4e038b4faaa58ddb9be3).\n\n### Potential Risks\n\n**Fantom**\n\nApart from a lack of client diversity, no major issues have been verified during Goerli testing.\n\n- Indexers have been running Fantom archive nodes with no issues.\n- No outages have been recorded, and the underlying client is stable and worked reliably under average query load.\n\n**Polygon**\n\nContrary to Fantom, there are *some* risks with Polygon clients (canonical Erigon and Polygon-forked Erigon). \n\nEven though the Polygon and Erigon team have worked together since the recent hard fork to fix most of the issues which prevented Indexers from reliably serving Polygon subgraphs, it is still unclear if Erigon will formally accept a grant from the Polygon Foundation to maintain the canonical Erigon (which would result in Polygon deprecating their fork). \n\nA summary of risks related to Polygon:\n\n- The [official Polygon-provided snapshot](https://snapshots.polygon.technology/) has missing state sync transactions, which prevents Indexers from syncing subgraphs.\n    - This can be mitigated by syncing a new archive node with Erigon’s built-in snapshot feature turned off. The Polygon team is aware of the problem, but as of April 28, 2023, there’s no one working to resolve due to a lack of bandwidth.\n    - There are community-based snapshots Indexers are now sharing. These have been verified to work (no missing state sync transactions), allowing Erigon to continue running when syncing subgraphs.\n- Erigon’s default configuration options are not suitable for Polygon archive nodes. Graph Indexers must specify specific config parameters to ensure the node doesn’t get into read-only mode past the 7.2 TB database size mark. [Read more here](https://discord.com/channels/438038660412342282/1019635469404885132/1100529497188606034).\n    - This can be mitigated with proper official Indexer-focused documentation under [thegraph.com/docs](http://thegraph.com/docs). Different guides have been written for the program, which should now be added to our official docs.\n\nIt’s also important to note there’s a geth-based Firehose implementation, which has been tested heavily by core development teams like Edge & Node, Streaming Fast, and Pinax when serving the needs of the hosted service and Subgraph Studio. However, as of April 28, 2023, Indexers still need an Erigon-based archive node for the `eth_call` JSON-RPC method. \n\nLastly, data integrity is not verified as part of MIPs missions. This will change with the GIP-based chain integration process that’ll be in effect post-MIPs.\n\n---\n\n## Proposed Updated **Feature Support Matrix**\n\nThe proposed updated Feature Support Matrix can be found below, and [this PR](https://github.com/graphprotocol/indexer/pull/655) will be merged once this proposal is accepted. \n\n```\ngraph-node: ≥0.30.0 <0.31.0\nvalid from: 787\nupgrade window: 795\n```\n\n| Subgraph Feature | Aliases | Implemented | Experimental | Query Arbitration | Indexing Arbitration | Indexing Rewards |\n| --- | --- | --- | --- | --- | --- | --- |\n| Core Features |  |  |  |  |  |  |\n| Full-text Search |  | Yes | No | No | Yes | Yes |\n| Non-Fatal Errors |  | Yes | Yes | Yes | Yes | Yes |\n| Grafting |  | Yes | Yes | Yes | Yes | Yes |\n| Data Source Types |  |  |  |  |  |  |\n| eip155:* | * | Yes | No | No | No | No |\n| eip155:1 | mainnet | Yes | No | Yes | Yes | Yes |\n| eip155:100 | gnosis | Yes | Yes | Yes | Yes | Yes |\n| near:* | * | Yes | Yes | No | No | No |\n| cosmos:* | * | Yes | Yes | No | No | No |\n| arweave:* | * | Yes | Yes | No | No | No |\n| eip155:42161 | arbitrum-one | Yes | Yes | Yes | Yes | Yes |\n| eip155:42220 | celo | Yes | Yes | Yes | Yes | Yes |\n| eip155:43114 | avalanche | Yes | Yes | Yes | Yes | Yes |\n| eip155:250 | fantom | Yes | Yes | Yes | Yes | Yes |\n| eip155:137 | polygon | Yes | Yes | Yes | Yes | Yes |\n| Data Source Features |  |  |  |  |  |  |\n| ipfs.cat in mappings |  | Yes | Yes | No | No | No |\n| ENS |  | Yes | Yes | No | No | No |\n| File data sources: IPFS |  | Yes | Yes | No | Yes | Yes |\n\n## Epoch Block Oracle (EBO) Multisig Transaction\n\nAt a protocol-level, adding experimental support for the two new chains with support for indexing rewards and arbitration is a matter of registering these two chains into the canonical EBO (Data Edge contract). The details can be found below.\n\n`RegisterNetworks` EBO message:\n\n```json\n[\n  {\n    \"add\": [\n      \"eip155:250\",\n      \"eip155:137\"\n    ],\n    \"message\": \"RegisterNetworks\",\n    \"remove\": []\n  }\n]\n```\n\nResulting calldata: \n\n```\na1dce33200000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000019030105156569703135353a323530156569703135353a31333700000000000000\n```\n\n*The calldata can be verified with [https://graphprotocol.github.io/block-oracle/](https://graphprotocol.github.io/block-oracle/)*\n\n**CAIP2-ID <> Network name**\n\n```markdown\nfantom:  eip155:250\npolygon: eip155:137\n```\n\n## Next Steps\n\nOnce this proposal is accepted:\n\n1. The resulting call data will be signed by Council members and executed against the following ratified EBO (Epoch Block Oracle) instances:\n    \n    **Ethereum Mainnet** DataEdge contract**:** `0xADE906194C923b28F03F48BC5D9D987AAE21fFab`\n    **Arbitrum One** DataEdge contract: `0x633bb9790d7c4c59991cebd377c0ed6501a35ebe`\n    \n2. The [PR](https://github.com/graphprotocol/indexer/pull/655) with the proposed updated feature matrix support will be merged.\n3. Anyone will be able to publish Fantom and Polygon subgraphs to the network (Ethereum and Arbitrum One), including through Subgraph Studio.\n4. Indexers will be able to serve any Polygon subgraph on Ethereum and Arbitrum One, earning indexing rewards.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xd2Ee184F196471Baee9A511a0B40538eBEdc6de2",
      "totalVotes": 6,
      "blockNumber": 17225327,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0xd40fe605ecc3d0faca07d6c8d85a3f0d66106ef9e206aa57397de776f0a76a2c",
      "startTime": {
        "timestamp": 1683723600
      },
      "endTime": {
        "timestamp": 1684328400
      },
      "startTimestamp": 1683723600,
      "endTimestamp": 1684328400,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1683665482113,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4NTZkNzVkNzEwZDNmOTBhOTY3MDVmNDU1NjI4ZTEzMDk2NjZhYTJlYjI4MGY1YzQyOTUyOTFjYTM3MjhjM2VkMA==",
      "id": "0x56d75d710d3f90a96705f455628e1309666aa2eb280f5c4295291ca3728c3ed0",
      "title": "GGP 0023: Add Mainnet Support for Fantom and Polygon Data Sources",
      "content": "## Summary\n\nThis GGP proposal now updates the previously ratified Feature Support Matrix (GGP-0022) to include two new data sources: Fantom and Polygon.\n\n## Polygon and Fantom QoS Analysis\n\nThe table below summarises the gateway-based QoS metrics extracted for the two-week period MIPs participants were actively serving MIPs subgraphs on Goerli. \n\n| Chain / metric | Unique indexers | total_queries | num_failed_queries | success_rate | median_blocks_behind | median_blocks_behind (s) &  ~ block time | median_latency_ms | latency_90th_pctl_ms | latency_99th_pctl_ms |\n| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |\n| Gnosis |  | 8598567 | 56007 | 0.987967 | 3.0 | 15 (5s) | 170 | 489 | 1847 |\n| Arbitrum |  | 40252971 | 6796 | 0.998203 | 74.0 | 18 (235 ms) | 495 | 2360 | 5251 |\n| Avalanche |  | 19963197 | 337 | 0.956189 | 12.0 | 24 (2s) | 866 | 5623 | 11574 |\n| Celo |  | 186043 | 372 | 0.998198 | 4.0 | 20 (5s) | 371 | 677 | 1221 |\n| Fantom | 346 | 92953179 | 1600189 | 0.992686 | 39.0 | 39 (1s) | 558 | 1448 | 3866 |\n| Polygon | 296 | 16919043 | 47410 | 0.998677 | 17.0 | 34 (2s) | 387 | 1157 | 3199 |\n\nThe list of subgraphs Indexers have synced and served can be found here for [Polygon](https://www.notion.so/5be50604e5d24e1788249d56c46448d0) and [Fantom](https://www.notion.so/a9f9ae7ef4cc4e038b4faaa58ddb9be3).\n\n### Potential Risks\n\n**Fantom**\n\nApart from a lack of client diversity, no major issues have been verified during Goerli testing.\n\n- Indexers have been running Fantom archive nodes with no issues.\n- No outages have been recorded, and the underlying client is stable and worked reliably under average query load.\n\n**Polygon**\n\nContrary to Fantom, there are *some* risks with Polygon clients (canonical Erigon and Polygon-forked Erigon). \n\nEven though the Polygon and Erigon team have worked together since the recent hard fork to fix most of the issues which prevented Indexers from reliably serving Polygon subgraphs, it is still unclear if Erigon will formally accept a grant from the Polygon Foundation to maintain the canonical Erigon (which would result in Polygon deprecating their fork). \n\nA summary of risks related to Polygon:\n\n- The [official Polygon-provided snapshot](https://snapshots.polygon.technology/) has missing state sync transactions, which prevents Indexers from syncing subgraphs.\n    - This can be mitigated by syncing a new archive node with Erigon’s built-in snapshot feature turned off. The Polygon team is aware of the problem, but as of April 28, 2023, there’s no one working to resolve due to a lack of bandwidth.\n    - There are community-based snapshots Indexers are now sharing. These have been verified to work (no missing state sync transactions), allowing Erigon to continue running when syncing subgraphs.\n- Erigon’s default configuration options are not suitable for Polygon archive nodes. Graph Indexers must specify specific config parameters to ensure the node doesn’t get into read-only mode past the 7.2 TB database size mark. [Read more here](https://discord.com/channels/438038660412342282/1019635469404885132/1100529497188606034).\n    - This can be mitigated with proper official Indexer-focused documentation under [thegraph.com/docs](http://thegraph.com/docs). Different guides have been written for the program, which should now be added to our official docs.\n\nIt’s also important to note there’s a geth-based Firehose implementation, which has been tested heavily by core development teams like Edge & Node, Streaming Fast, and Pinax when serving the needs of the hosted service and Subgraph Studio. However, as of April 28, 2023, Indexers still need an Erigon-based archive node for the `eth_call` JSON-RPC method. \n\nLastly, data integrity is not verified as part of MIPs missions. This will change with the GIP-based chain integration process that’ll be in effect post-MIPs.\n\n---\n\n## Proposed Updated **Feature Support Matrix**\n\nThe proposed updated Feature Support Matrix can be found below, and [this PR](https://github.com/graphprotocol/indexer/pull/655) will be merged once this proposal is accepted. \n\n```\ngraph-node: ≥0.30.0 <0.31.0\nvalid from: 787\nupgrade window: 795\n```\n\n| Subgraph Feature | Aliases | Implemented | Experimental | Query Arbitration | Indexing Arbitration | Indexing Rewards |\n| --- | --- | --- | --- | --- | --- | --- |\n| Core Features |  |  |  |  |  |  |\n| Full-text Search |  | Yes | No | No | Yes | Yes |\n| Non-Fatal Errors |  | Yes | Yes | Yes | Yes | Yes |\n| Grafting |  | Yes | Yes | Yes | Yes | Yes |\n| Data Source Types |  |  |  |  |  |  |\n| eip155:* | * | Yes | No | No | No | No |\n| eip155:1 | mainnet | Yes | No | Yes | Yes | Yes |\n| eip155:100 | gnosis | Yes | Yes | Yes | Yes | Yes |\n| near:* | * | Yes | Yes | No | No | No |\n| cosmos:* | * | Yes | Yes | No | No | No |\n| arweave:* | * | Yes | Yes | No | No | No |\n| eip155:42161 | arbitrum-one | Yes | Yes | Yes | Yes | Yes |\n| eip155:42220 | celo | Yes | Yes | Yes | Yes | Yes |\n| eip155:43114 | avalanche | Yes | Yes | Yes | Yes | Yes |\n| eip155:250 | fantom | Yes | Yes | Yes | Yes | Yes |\n| eip155:137 | polygon | Yes | Yes | Yes | Yes | Yes |\n| Data Source Features |  |  |  |  |  |  |\n| ipfs.cat in mappings |  | Yes | Yes | No | No | No |\n| ENS |  | Yes | Yes | No | No | No |\n| File data sources: IPFS |  | Yes | Yes | No | Yes | Yes |\n\n## Epoch Block Oracle (EBO) Multisig Transaction\n\nAt a protocol-level, adding experimental support for the two new chains with support for indexing rewards and arbitration is a matter of registering these two chains into the canonical EBO (Data Edge contract). The details can be found below.\n\n`RegisterNetworks` EBO message:\n\n```json\n[\n  {\n    \"add\": [\n      \"eip155:250\",\n      \"eip155:137\"\n    ],\n    \"message\": \"RegisterNetworks\",\n    \"remove\": []\n  }\n]\n```\n\nResulting calldata: \n\n```\na1dce33200000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000019030105156569703135353a323530156569703135353a31333700000000000000\n```\n\n*The calldata can be verified with [https://graphprotocol.github.io/block-oracle/](https://graphprotocol.github.io/block-oracle/)*\n\n**CAIP2-ID <> Network name**\n\n```markdown\nfantom:  eip155:250\npolygon: eip155:137\n```\n\n## Next Steps\n\nOnce this proposal is accepted:\n\n1. The resulting call data will be signed by Council members and executed against the following ratified EBO (Epoch Block Oracle) instances:\n    \n    **Ethereum Mainnet** DataEdge contract**:** `0xADE906194C923b28F03F48BC5D9D987AAE21fFab`\n    **Arbitrum One** DataEdge contract: `0x633bb9790d7c4c59991cebd377c0ed6501a35ebe`\n    \n2. The [PR](https://github.com/graphprotocol/indexer/pull/655) with the proposed updated feature matrix support will be merged.\n3. Anyone will be able to publish Fantom and Polygon subgraphs to the network (Ethereum and Arbitrum One), including through Subgraph Studio.\n4. Indexers will be able to serve any Polygon subgraph on Ethereum and Arbitrum One, earning indexing rewards.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xd2Ee184F196471Baee9A511a0B40538eBEdc6de2",
      "totalVotes": 2,
      "blockNumber": 17147538,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x56d75d710d3f90a96705f455628e1309666aa2eb280f5c4295291ca3728c3ed0",
      "startTime": {
        "timestamp": 1682773200
      },
      "endTime": {
        "timestamp": 1683378000
      },
      "startTimestamp": 1682773200,
      "endTimestamp": 1683378000,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 2.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 2.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1682720553359,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4MzI0ZTdhOTcxZGI5Zjk4ZDJiZmVlZWY1ODdmM2MwYTVjMGFlMGZmMjExZTc1ZGFhOTkyNzBkNDJkNmZjNmNhNQ==",
      "id": "0x324e7a971db9f98d2bfeeef587f3c0a5c0ae0ff211e75daa99270d42d6fc6ca5",
      "title": "GGP 0022: Update Feature Support Matrix to support Celo, Arbitrum, Avalanche + File Data Sources (IPFS)",
      "content": "### Summary\n\nThis is an update to the previously ratified Feature Support Matrix included in [GGP 0018](https://snapshot.org/#/council.graphprotocol.eth/proposal/0x4fa76f9ae541bf883e547407270866ffeb8448f3b3fca90bb9c5bc46e31499c2).\n\nThis proposal updates the subgraph API Feature Support Matrix to include new `Data Sources`, `Data Source Features`, and the minimum required Graph Node version (v0.30.0).\n\n### **New Data Sources**\n\nThe following chains are supported by ratified EBOs living on Ethereum mainnet and Arbitrum One. \n\n- `eip155:42161` (arbitrum-one)\n- `eip155:42220` (celo)\n- `eip155:43114` (avalanche)\n\nNote: D*ue to timing constraints imposed by the MIPs program, support for these chains has been added on February 24th, following an offline vote from Council members and the signing of the corresponding Defender transaction. Moving forward, official technical support for new chains will only be added after an officially approved GGP.*\n\n### **New Data Features**\n\n`File Data Sources: IPFs`\n\nCore developers who worked on this new feature are proposing support for Indexing Rewards. indexing will still support arbitration and slashing (same as Full-text Search). Quoting Zac, from Edge & Node: \n\n> *Subgraphs with File Data Sources (FDS) may have both on-chain and off-chain logic. The way that (FDS) works is that the off-chain data is “isolated” from the off-chain logic.*\n> \n> \n> *So, all of the off-chain logic is deterministic.*\n> \n> *We decided to enable rewards for the deterministic off-chain portion by, for now, only rolling the on-chain data into the PoI. So, an Indexer can submit a PoI for the off-chain portion and collect rewards.*\n> \n- Official docs [here](https://thegraph.com/docs/en/developing/creating-a-subgraph/#file-data-sources).\n- [GIP-0050](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0050-file-data-sources.md).\n\n### **Graph Node v0.30.0**\n\nSupport for `File Data Sources: IPFS` is introduced with Graph Node v0.30.0, released  Feb 17th. Release notes [here](https://github.com/graphprotocol/graph-node/releases/tag/v0.30.0-rc.0).\n\nGraph Node v0.30.0 is now the recommended version for mainnet ([PR here](https://github.com/graphprotocol/indexer/pull/610)). Starting February 22, 2023, this version is being tested by E&N Backstop Indexers on Goerli. This PR also points to the updated Feature Support Matrix (full copy below), which will remain open until ratified by the Council.\n\n### **Feature Support Matrix**\n\nThe Feature Support Matrix can be found below and has already been merged in [this PR](https://github.com/graphprotocol/indexer/pull/610), which can be reverted. This makes it the latest canonical Feature Support Matrix. Moving forward, PRs and required software changes will happen only once a Matrix is officially ratified by the Council by means of a GGP similar to this one.\n\n```markdown\ngraph-node: ≥0.30.0 <0.31.0\nvalid from: 787\nupgrade window: 795\n```\n\n| Subgraph Feature | Aliases | Implemented | Experimental | Query Arbitration | Indexing Arbitration | Indexing Rewards |\n| --- | --- | --- | --- | --- | --- | --- |\n| Core Features |  |  |  |  |  |  |\n| Full-text Search |  | Yes | No | No | Yes | Yes |\n| Non-Fatal Errors |  | Yes | Yes | Yes | Yes | Yes |\n| Grafting |  | Yes | Yes | Yes | Yes | Yes |\n| Data Source Types |  |  |  |  |  |  |\n| eip155:* | * | Yes | No | No | No | No |\n| eip155:1 | mainnet | Yes | No | Yes | Yes | Yes |\n| eip155:100 | gnosis | Yes | Yes | Yes | Yes | Yes |\n| near:* | * | Yes | Yes | No | No | No |\n| cosmos:* | * | Yes | Yes | No | No | No |\n| arweave:* | * | Yes | Yes | No | No | No |\n| eip155:42161 | arbitrum-one | Yes | Yes | Yes | Yes | Yes |\n| eip155:42220 | celo | Yes | Yes | Yes | Yes | Yes |\n| eip155:43114 | avalanche | Yes | Yes | Yes | Yes | Yes |\n| Data Source Features |  |  |  |  |  |  |\n| ipfs.cat in mappings |  | Yes | Yes | No | No | No |\n| ENS |  | Yes | Yes | No | No | No |\n| File Data Sources: IPFS  |  | Yes | Yes | No | Yes | Yes |\n\nNo new Defender transaction will need to be signed except if there’s a need to revert the proposed (already in effect) Feature Support Matrix.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xd201C95461F69A031Cdc317f453ff190890722aA",
      "totalVotes": 6,
      "blockNumber": 17066885,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x324e7a971db9f98d2bfeeef587f3c0a5c0ae0ff211e75daa99270d42d6fc6ca5",
      "startTime": {
        "timestamp": 1681736400
      },
      "endTime": {
        "timestamp": 1682384400
      },
      "startTimestamp": 1681736400,
      "endTimestamp": 1682384400,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1681739519091,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4MTU0NWU2OWM4MjA1OTI4ZWIxM2ZkM2E4MDFmM2MxOTQwMmI4MDZlOGZjNjBkYjdkYWQyNzRiOGY5NzQ3YzE4Mg==",
      "id": "0x1545e69c8205928eb13fd3a801f3c19402b806e8fc60db7dad274b8f9747c182",
      "title": "GGP 0021: Activate indexing rewards in The Graph Network on Arbitrum One",
      "content": "GGP: 0021\nCreated: 2023-03-24\nScope: Smart Contracts\n\n# GIPs\n\nGIP: 0043\nTitle: Activate indexing rewards in The Graph Network on Arbitrum One\nAuthors: Pablo Carranza Vélez <pablo@edgeandnode.com>, Ariel Barmat <ariel@edgeandnode.com>, Tomás Migone <tomas@edgeandnode.com>\nCreated: 2023-02-01\nUpdated: 2023-02-01\nCategory: \"Protocol Logic\", \"Protocol Interfaces\", \"Economic Parameters\"\nDepends-On: GIP-0037\n\n## Abstract\n\nIn this GIP we propose to upgrade the protocol contracts to support indexing rewards on the L2 as described in GIP-0037. That GIP proposed changing indexer rewards issuance to follow a linear function instead of the current exponential / compound interest formula, with the GRT for rewards minted natively in L1 and L2. In addition, we propose activating indexing rewards in Arbitrum One using a small initial step of 5% to 10% of the total issuance rate.\n\n## Motivation\n\nThe Graph Protocol contracts have been deployed to Arbitrum One in block **42,449,166** as proposed in [GIP-0040](https://forum.thegraph.com/t/gip-0040-l2-bridge-and-protocol-deployment/3695) and approved by the Council in [GGP-0017](https://snapshot.org/#/council.graphprotocol.eth/proposal/0x8c3c94e6a3064023eac582d609041524c1f41b70bece62f6c58d303faa42b7e8). Since then, all the participants can run indexers and subgraphs on Arbitrum One. However, indexers don't have any additional incentive to query fees collected from consumers. This GIP proposes to activate indexing rewards on Arbitrum One using a small initial step of 5% to 10% of issuance to increase the supply of indexers on the L2 deployment of The Graph Network.\n\n## High-Level Description\n\nEnabling indexing rewards in Arbitrum One involves several steps that we can divide into three parts:\n\n### Part One: Upgrade\n\n- Upgrade the Rewards Manager in Ethereum Mainnet (L1) to use the new linear issuance mechanism.\n\n- Upgrade the L1GraphTokenGateway in Ethereum Mainnet (L1) to add extra protections for minted tokens coming from L2.\n\n- Upgrade the Rewards Manager in Arbitrum One (L2) to use the new linear issuance mechanism.\n\n- Council calls `RewardsManager.updateAccRewardsPerSignal()` in L1 to storage all pending accrual.\n\n- Set indexing rewards configuration in terms of issuance speed instead of a percentage of the total token supply on Ethereum Mainnet (L1). We can calculate the current total issuance rate as speed in GRT per block:\n\n$$ totalIssuancePerBlock = totalSupply \\times issuanceRatePerYear \\div blocksPerYear $$\n$$ totalSupply = 10,576,000,000 $$\n$$ issuanceRatePerYear = 0.03 $$\n$$ ethBlockTime = 12 \\text{sec}\\ $$\n$$ blocksPerYear = secondsPerYear / ethBlockTime $$\n$$ 10,576,000,000 \\times 0.03 / (60 \\times 60 \\times 24 \\times 365 \\div 12) = 120.73 \\text{GRT/block}\\ $$\n\n- Finally, check that everything is properly configured and update relevant monitoring that tracks indexing rewards issuance.\n\n### Part Two: Activate indexing rewards in Arbitrum One\n\n- After reviewing that the upgrade is working correctly, the Graph Council will send one transaction to reduce the per-block issuance speed on Ethereum Mainnet (L1) and another one to increase it on Arbitrum One (L2).\n\n- The Council must ensure that the transactions to L1 and L2 get mined as close as possible to avoid a gap in the issuance rate.\n\n- Considering that total issuance speed is now the combined speed of L1 and L2:\n  $$ totalIssuancePerBlock = issuancePerBlockL_1 + issuancePerBlockL_2 $$\n\nTo set the rewards distribution in Arbitrum One to be 10% of the global issuance, the Council should set the issuance speed this way to keep the global issuance at the same rate:\n\n$$ issuancePerBlockL_1 = 0.9 \\times totalIssuancePerBlock $$\n$$ issuancePerBlockL_2 = 0.1 \\times totalIssuancePerBlock $$\n\n### Part Three: Set L2 Bridge enhanced protections\n\nOne of the features introduced by GIP-0037 implementation is a \"Mint Allowance Protection\" as an extra line of defense against uncontrolled minting of L1 GRT after a large withdrawal from the L2.\n\n- The Council must set this value to follow the issuance speed on L2 using `RewardsManager.updateL2MintAllowance()` to match the configuration used in Part Two.\n\n## Additional Considerations\n\n- After the Council upgrades the contracts to use a linear reward distribution, it will lead to less issuance over a very long period. The Council might consider reviewing the issuance per block parameter to match a desired target inflation to total supply.\n\n- This GIP kickstarts the activation of indexing rewards in Arbitrum One. However, the Graph Council will need to decide on future updates in the distribution parameters to migrate most and eventually all of the reward issuance to L2.\n\n## Related Work\n\nFor additional details, please read the related work in the following GIPs:\n\n- [**GIP-0037: The Graph Arbitrum deployment with linear rewards minted in L2**](https://forum.thegraph.com/t/gip-0037-the-graph-arbitrum-deployment-with-linear-rewards-minted-in-l2/3551)\n\n- [**GIP-0040: L2 Bridge and Protocol Deployment**](https://forum.thegraph.com/t/gip-0040-l2-bridge-and-protocol-deployment/3695)\n\nThe feature is implemented in [PR-700](https://github.com/graphprotocol/contracts/pull/700)\n\n## Risks and Security Considerations\n\nPlease read [GIP-0037](https://forum.thegraph.com/t/gip-0037-the-graph-arbitrum-deployment-with-linear-rewards-minted-in-l2/3551#risks-and-security-considerations-20) for a detailed description.\n\n## Validation\n\n- The code was audited by OpenZeppelin and the audit report can be found here: [OpenZeppelin Audit](https://github.com/graphprotocol/contracts/blob/12f17994f73603ff683abaaf53d19b8a588dbf8b/audits/OpenZeppelin/2022-11-graph-linear-rewards.pdf)\n\n- Edge & Node team is running the test and deployment plan that involves simulating the upgrade, activating the rewards and checking that the issuance is correct.\n\n---\n\n# Graph Governance Proposal 0021\n\nFollowing the approval of this proposal, the Council will execute the necessary actions through the Council multisig on Arbitrum One to activate indexing rewards on said network using a small initial step of 5% of the total issuance rate.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xd201C95461F69A031Cdc317f453ff190890722aA",
      "totalVotes": 6,
      "blockNumber": 16897522,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x1545e69c8205928eb13fd3a801f3c19402b806e8fc60db7dad274b8f9747c182",
      "startTime": {
        "timestamp": 1679630400
      },
      "endTime": {
        "timestamp": 1681141200
      },
      "startTimestamp": 1679630400,
      "endTimestamp": 1681141200,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1679663000429,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4ZjEwN2IxYjQ3NzFkYzZmZjVkNjY1ZTkyOGY5ODYzMWIyN2IxMTEwNGEyZjExM2MyNDQwNmEwOWZlMjA3ZDJmOQ==",
      "id": "0xf107b1b4771dc6ff5d665e928f98631b27b11104a2f113c24406a09fe207d2f9",
      "title": "GGP 0022: Update Feature Support Matrix to support Celo, Arbitrum, Avalanche + File Data Sources (IPFS)",
      "content": "### Summary\n\nThis is an update to the previously ratified Feature Support Matrix included in [GGP 0018](https://snapshot.org/#/council.graphprotocol.eth/proposal/0x4fa76f9ae541bf883e547407270866ffeb8448f3b3fca90bb9c5bc46e31499c2).\n\nThis proposal updates the subgraph API Feature Support Matrix to include new `Data Sources`, `Data Source Features`, and the minimum required Graph Node version (v0.30.0).\n\n### **New Data Sources**\n\nThe following chains are supported by ratified EBOs living on Ethereum mainnet and Arbitrum One. \n\n- `eip155:42161` (arbitrum-one)\n- `eip155:42220` (celo)\n- `eip155:43114` (avalanche)\n\nNote: D*ue to timing constraints imposed by the MIPs program, support for these chains has been added on February 24th, following an offline vote from Council members and the signing of the corresponding Defender transaction. Moving forward, official technical support for new chains will only be added after an officially approved GGP.*\n\n### **New Data Features**\n\n`File Data Sources: IPFs`\n\nCore developers who worked on this new feature are proposing support for Indexing Rewards. indexing will still support arbitration and slashing (same as Full-text Search). Quoting Zac, from Edge & Node: \n\n> *Subgraphs with File Data Sources (FDS) may have both on-chain and off-chain logic. The way that (FDS) works is that the off-chain data is “isolated” from the off-chain logic.*\n> \n> \n> *So, all of the off-chain logic is deterministic.*\n> \n> *We decided to enable rewards for the deterministic off-chain portion by, for now, only rolling the on-chain data into the PoI. So, an Indexer can submit a PoI for the off-chain portion and collect rewards.*\n> \n- Official docs [here](https://thegraph.com/docs/en/developing/creating-a-subgraph/#file-data-sources).\n- [GIP-0050](https://github.com/graphprotocol/graph-improvement-proposals/blob/main/gips/0050-file-data-sources.md).\n\n### **Graph Node v0.30.0**\n\nSupport for `File Data Sources: IPFS` is introduced with Graph Node v0.30.0, released  Feb 17th. Release notes [here](https://github.com/graphprotocol/graph-node/releases/tag/v0.30.0-rc.0).\n\nGraph Node v0.30.0 is now the recommended version for mainnet ([PR here](https://github.com/graphprotocol/indexer/pull/610)). Starting February 22, 2023, this version is being tested by E&N Backstop Indexers on Goerli. This PR also points to the updated Feature Support Matrix (full copy below), which will remain open until ratified by the Council.\n\n### **Feature Support Matrix**\n\nThe Feature Support Matrix can be found below and has already been merged in [this PR](https://github.com/graphprotocol/indexer/pull/610), which can be reverted. This makes it the latest canonical Feature Support Matrix. Moving forward, PRs and required software changes will happen only once a Matrix is officially ratified by the Council by means of a GGP similar to this one.\n\n```markdown\ngraph-node: ≥0.30.0 <0.31.0\nvalid from: 787\nupgrade window: 795\n```\n\n| Subgraph Feature | Aliases | Implemented | Experimental | Query Arbitration | Indexing Arbitration | Indexing Rewards |\n| --- | --- | --- | --- | --- | --- | --- |\n| Core Features |  |  |  |  |  |  |\n| Full-text Search |  | Yes | No | No | Yes | Yes |\n| Non-Fatal Errors |  | Yes | Yes | Yes | Yes | Yes |\n| Grafting |  | Yes | Yes | Yes | Yes | Yes |\n| Data Source Types |  |  |  |  |  |  |\n| eip155:* | * | Yes | No | No | No | No |\n| eip155:1 | mainnet | Yes | No | Yes | Yes | Yes |\n| eip155:100 | gnosis | Yes | Yes | Yes | Yes | Yes |\n| near:* | * | Yes | Yes | No | No | No |\n| cosmos:* | * | Yes | Yes | No | No | No |\n| arweave:* | * | Yes | Yes | No | No | No |\n| eip155:42161 | arbitrum-one | Yes | Yes | Yes | Yes | Yes |\n| eip155:42220 | celo | Yes | Yes | Yes | Yes | Yes |\n| eip155:43114 | avalanche | Yes | Yes | Yes | Yes | Yes |\n| Data Source Features |  |  |  |  |  |  |\n| ipfs.cat in mappings |  | Yes | Yes | No | No | No |\n| ENS |  | Yes | Yes | No | No | No |\n| File Data Sources: IPFS  |  | Yes | Yes | No | Yes | Yes |\n\nNo new Defender transaction will need to be signed except if there’s a need to revert the proposed (already in effect) Feature Support Matrix.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xd2Ee184F196471Baee9A511a0B40538eBEdc6de2",
      "totalVotes": 3,
      "blockNumber": 16872586,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0xf107b1b4771dc6ff5d665e928f98631b27b11104a2f113c24406a09fe207d2f9",
      "startTime": {
        "timestamp": 1679360179
      },
      "endTime": {
        "timestamp": 1679965200
      },
      "startTimestamp": 1679360179,
      "endTimestamp": 1679965200,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 3.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 3.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1679416793322,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4NmRkMDJiNGFiM2EzODg2MjgxMDRiNDhhNzkyYjdkYjhkZmUwY2MxYTkzZThiN2Y1OTUyZmQ0ZjdhMWQyYWE3OQ==",
      "id": "0x6dd02b4ab3a388628104b48a792b7db8dfe0cc1a93e8b7f5952fd4f7a1d2aa79",
      "title": "GGP 0021: Activate indexing rewards in The Graph Network on Arbitrum One",
      "content": "GGP: 0021\nCreated: 2023-03-09\nScope: Smart Contracts\n\n# GIPs\n\nGIP: 0043\nTitle: Activate indexing rewards in The Graph Network on Arbitrum One\nAuthors: Pablo Carranza Vélez <pablo@edgeandnode.com>, Ariel Barmat <ariel@edgeandnode.com>, Tomás Migone <tomas@edgeandnode.com>\nCreated: 2023-02-01\nUpdated: 2023-02-01\nCategory: \"Protocol Logic\", \"Protocol Interfaces\", \"Economic Parameters\"\nDepends-On: GIP-0037\n\n## Abstract\n\nIn this GIP we propose to upgrade the protocol contracts to support indexing rewards on the L2 as described in GIP-0037. That GIP proposed changing indexer rewards issuance to follow a linear function instead of the current exponential / compound interest formula, with the GRT for rewards minted natively in L1 and L2. In addition, we propose activating indexing rewards in Arbitrum One using a small initial step of 5% to 10% of the total issuance rate.\n\n## Motivation\n\nThe Graph Protocol contracts have been deployed to Arbitrum One in block **42,449,166** as proposed in [GIP-0040](https://forum.thegraph.com/t/gip-0040-l2-bridge-and-protocol-deployment/3695) and approved by the Council in [GGP-0017](https://snapshot.org/#/council.graphprotocol.eth/proposal/0x8c3c94e6a3064023eac582d609041524c1f41b70bece62f6c58d303faa42b7e8). Since then, all the participants can run indexers and subgraphs on Arbitrum One. However, indexers don't have any additional incentive to query fees collected from consumers. This GIP proposes to activate indexing rewards on Arbitrum One using a small initial step of 5% to 10% of issuance to increase the supply of indexers on the L2 deployment of The Graph Network.\n\n## High-Level Description\n\nEnabling indexing rewards in Arbitrum One involves several steps that we can divide into three parts:\n\n### Part One: Upgrade\n\n- Upgrade the Rewards Manager in Ethereum Mainnet (L1) to use the new linear issuance mechanism.\n\n- Upgrade the L1GraphTokenGateway in Ethereum Mainnet (L1) to add extra protections for minted tokens coming from L2.\n\n- Upgrade the Rewards Manager in Arbitrum One (L2) to use the new linear issuance mechanism.\n\n- Council calls `RewardsManager.updateAccRewardsPerSignal()` in L1 to storage all pending accrual.\n\n- Set indexing rewards configuration in terms of issuance speed instead of a percentage of the total token supply on Ethereum Mainnet (L1). We can calculate the current total issuance rate as speed in GRT per block:\n\n$$ totalIssuancePerBlock = totalSupply \\times issuanceRatePerYear \\div blocksPerYear $$\n$$ totalSupply = 10,576,000,000 $$\n$$ issuanceRatePerYear = 0.03 $$\n$$ ethBlockTime = 12 \\text{sec}\\ $$\n$$ blocksPerYear = secondsPerYear / ethBlockTime $$\n$$ 10,576,000,000 \\times 0.03 / (60 \\times 60 \\times 24 \\times 365 \\div 12) = 120.73 \\text{GRT/block}\\ $$\n\n- Finally, check that everything is properly configured and update relevant monitoring that tracks indexing rewards issuance.\n\n### Part Two: Activate indexing rewards in Arbitrum One\n\n- After reviewing that the upgrade is working correctly, the Graph Council will send one transaction to reduce the per-block issuance speed on Ethereum Mainnet (L1) and another one to increase it on Arbitrum One (L2).\n\n- The Council must ensure that the transactions to L1 and L2 get mined as close as possible to avoid a gap in the issuance rate.\n\n- Considering that total issuance speed is now the combined speed of L1 and L2:\n  $$ totalIssuancePerBlock = issuancePerBlockL_1 + issuancePerBlockL_2 $$\n\nTo set the rewards distribution in Arbitrum One to be 10% of the global issuance, the Council should set the issuance speed this way to keep the global issuance at the same rate:\n\n$$ issuancePerBlockL_1 = 0.9 \\times totalIssuancePerBlock $$\n$$ issuancePerBlockL_2 = 0.1 \\times totalIssuancePerBlock $$\n\n### Part Three: Set L2 Bridge enhanced protections\n\nOne of the features introduced by GIP-0037 implementation is a \"Mint Allowance Protection\" as an extra line of defense against uncontrolled minting of L1 GRT after a large withdrawal from the L2.\n\n- The Council must set this value to follow the issuance speed on L2 using `RewardsManager.updateL2MintAllowance()` to match the configuration used in Part Two.\n\n## Additional Considerations\n\n- After the Council upgrades the contracts to use a linear reward distribution, it will lead to less issuance over a very long period. The Council might consider reviewing the issuance per block parameter to match a desired target inflation to total supply.\n\n- This GIP kickstarts the activation of indexing rewards in Arbitrum One. However, the Graph Council will need to decide on future updates in the distribution parameters to migrate most and eventually all of the reward issuance to L2.\n\n## Related Work\n\nFor additional details, please read the related work in the following GIPs:\n\n- [**GIP-0037: The Graph Arbitrum deployment with linear rewards minted in L2**](https://forum.thegraph.com/t/gip-0037-the-graph-arbitrum-deployment-with-linear-rewards-minted-in-l2/3551)\n\n- [**GIP-0040: L2 Bridge and Protocol Deployment**](https://forum.thegraph.com/t/gip-0040-l2-bridge-and-protocol-deployment/3695)\n\nThe feature is implemented in [PR-700](https://github.com/graphprotocol/contracts/pull/700)\n\n## Risks and Security Considerations\n\nPlease read [GIP-0037](https://forum.thegraph.com/t/gip-0037-the-graph-arbitrum-deployment-with-linear-rewards-minted-in-l2/3551#risks-and-security-considerations-20) for a detailed description.\n\n## Validation\n\n- The code was audited by OpenZeppelin and the audit report can be found here: [OpenZeppelin Audit](https://github.com/graphprotocol/contracts/blob/12f17994f73603ff683abaaf53d19b8a588dbf8b/audits/OpenZeppelin/2022-11-graph-linear-rewards.pdf)\n\n- Edge & Node team is running the test and deployment plan that involves simulating the upgrade, activating the rewards and checking that the issuance is correct.\n\n---\n\n# Graph Governance Proposal 0021\n\nFollowing the approval of this proposal, the Council will execute the necessary actions through the Council multisig on Arbitrum One to activate indexing rewards on said network using a small initial step of 5% of the total issuance rate.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xd201C95461F69A031Cdc317f453ff190890722aA",
      "totalVotes": 3,
      "blockNumber": 16791596,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x6dd02b4ab3a388628104b48a792b7db8dfe0cc1a93e8b7f5952fd4f7a1d2aa79",
      "startTime": {
        "timestamp": 1678376458
      },
      "endTime": {
        "timestamp": 1679586000
      },
      "startTimestamp": 1678376458,
      "endTimestamp": 1679586000,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 3.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 4.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1678236144000,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4ZDU3NGEzMjEzMmRjYWE4MDM5MjJhMDVkNmQ4YTZhNDk3MTk1YzhiNTM3OGFjZDkyMDRlZDE4NGVhMTNjNzk0Mw==",
      "id": "0xd574a32132dcaa803922a05d6d8a6a497195c8b5378acd9204ed184ea13c7943",
      "title": "GGP 0019: Update protocol parameters due to post merge reduced block times",
      "content": "GGP: 0019\nScope: EpochManager and Staking contracts\nCreated: 2023-01-26\nDiscussion: https://forum.thegraph.com/t/update-some-protocol-parameters-due-to-post-merge-reduced-block-times/3754\n---\n\nGraph Governance Proposal 0019\n\nWith the merge the block time has changed from an average of 13.4 seconds to a fixed 12 seconds. This means that any protocol parameters that depend on or were set considering the pre-merge average block time are now slightly off their intended targets since essentially the clock is running faster. While this is not necessarily detrimental to the protocol it signifies a “silent” update and participants interacting with the protocol might experience unexpected behavior. It is then desirable to update the parameters to match their original targets in days/hours.\n\nThis process has already been done for the protocol’s issuance rate in GGP 0013. However, there are at least two more parameters to update: `EpochManager.epochLength` and `Staking.thawingPeriod`.\n\n**`epochLength`**: This parameter sets the length of an epoch in blocks and it’s currently set to 6646 blocks on mainnet. Pre-merge this translated to epoch duration of ~24 hours; post-merge it means epochs are ~22.15 hours long. This is most noticeable for example when considering the allocation epoch cap (maxAllocationEpochs), which is set in epochs so it changed from ~28 days to ~25,8 days. Anyone can close allocations after this period which means unaware indexers might lose out on rewards due to griefers closing allocations they thought were still safe.\n\n**`thawingPeriod`**: Thawing period is the amount of time tokens are locked after unstaking and it’s also set in blocks; on mainnet it’s set to 186092 which means ~28 days pre-merge and ~25,8 days post-merge.\n\nFollowing a successful \"yes\" vote, the protocol update should be carried out at the earliest convenience using The Graph Council’s Gnosis Multisig, changing the parameters according to the following table:\n\nParameter | Current value | Proposed value\n-|-|-\nEpochManager.epochLength\t| 6646 (~24 hours pre-merge; ~22.15 hours post-merge) | 7200 (24 hours post-merge)\nStaking.thawingPeriod | 186092 (~28 days pre-merge; ~25.8 days post-merge) | 201600 (28 days post-merge)\n\n",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xd201C95461F69A031Cdc317f453ff190890722aA",
      "totalVotes": 6,
      "blockNumber": 16493706,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0xd574a32132dcaa803922a05d6d8a6a497195c8b5378acd9204ed184ea13c7943",
      "startTime": {
        "timestamp": 1674758100
      },
      "endTime": {
        "timestamp": 1675967700
      },
      "startTimestamp": 1674758100,
      "endTimestamp": 1675967700,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1678236144000,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4ZTI5MzMwYTg3NjRiMzg1MjJlYjRmNzFiZDJjZDMyYTA4MDA5MDg3NmMzODEwNTQ5YWIwZDBmYjFiYmIwNjkzNg==",
      "id": "0xe29330a8764b38522eb4f71bd2cd32a080090876c3810549ab0d0fb1bbb06936",
      "title": "GGP 0020: Epoch Block Oracle and Data Edge for Arbitrum One",
      "content": "GGP: 0020\nScope: Smart Contracts\nCreated: 2023-01-19\n\n# **GIPs**\n\nGIP: 0038\nTitle: Epoch Block Oracle\nAuthors: Adam Fuller ([adam@edgeandnode.com](mailto:adam@edgeandnode.com)), Ariel Barmat ([ariel@edgeandnode.com](mailto:ariel@edgeandnode.com)), Zachary Burns\nCreated: 2022-02-11\nUpdated: 2022-11-01\nCategory: Protocol Interfaces\n\n[Link to GIP-0038 on IPFS](https://ipfs.io/ipfs/QmPJEK4ErhKR1h5aaqdKGBmThJArxhtxpsF2DmTHMTYNey).\n\n---\n\n# **Graph Governance Proposal 0020**\n\nGGP 0016 introduced an \"Epoch Block Oracle\" to specify the `currentEpochBlock` on other chains, unlocking indexing rewards and network growth, as per GIP-0038.\n\nAs the protocol now also runs on Arbitrum One (since GGP 0017), a separate instance of the Epoch Block Oracle will specify the current epoch blocks to be used on the Arbitrum One protocol.\n\nThis also requires a DataEdge contract on Arbitrum One.\n\nArbitrum nodes don’t support `trace_filter` calls, so the DataEdge contract must emit events with the data that is posted to it for the subgraph to work.\n\nThe Council specifies that the protocol will use the following Data Edge contract instance on Arbitrum One:\n\n[`0x633bb9790d7c4c59991cebd377c0ed6501a35ebe`](https://arbiscan.io/address/0x633bb9790d7c4c59991cebd377c0ed6501a35ebe)",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xd201C95461F69A031Cdc317f453ff190890722aA",
      "totalVotes": 6,
      "blockNumber": 16470245,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0xe29330a8764b38522eb4f71bd2cd32a080090876c3810549ab0d0fb1bbb06936",
      "startTime": {
        "timestamp": 1674485875
      },
      "endTime": {
        "timestamp": 1675695420
      },
      "startTimestamp": 1674485875,
      "endTimestamp": 1675695420,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1678236144000,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4YWU1OTA3MzQzMjU0YWNiYmE0OWY0YmUzMmQ2OWE2MDRjNGUyMjk5OGMwMGUwNmU2MmQ1OTY1ZjczNmY0YWRmNg==",
      "id": "0xae5907343254acbba49f4be32d69a604c4e22998c00e06e62d5965f736f4adf6",
      "title": "GGP 0019: Update protocol parameters due to post merge reduced block times",
      "content": "GGP: 0019\nScope: EpochManager and Staking contracts\nCreated: 2023-01-12\nDiscussion: https://forum.thegraph.com/t/update-some-protocol-parameters-due-to-post-merge-reduced-block-times/3754\n---\n\nGraph Governance Proposal 0019\n\nWith the merge the block time has changed from an average of 13.4 seconds to a fixed 12 seconds. This means that any protocol parameters that depend on or were set considering the pre-merge average block time are now slightly off their intended targets since essentially the clock is running faster. While this is not necessarily detrimental to the protocol it signifies a “silent” update and participants interacting with the protocol might experience unexpected behavior. It is then desirable to update the parameters to match their original targets in days/hours.\n\nThis process has already been done for the protocol’s issuance rate in GGP 0013. However, there are at least two more parameters to update: `EpochManager.epochLength` and `Staking.thawingPeriod`.\n\n**`epochLength`**: This parameter sets the length of an epoch in blocks and it’s currently set to 6646 blocks on mainnet. Pre-merge this translated to epoch duration of ~24 hours; post-merge it means epochs are ~22.15 hours long. This is most noticeable for example when considering the allocation epoch cap (maxAllocationEpochs), which is set in epochs so it changed from ~28 days to ~25,8 days. Anyone can close allocations after this period which means unaware indexers might lose out on rewards due to griefers closing allocations they thought were still safe.\n\n**`thawingPeriod`**: Thawing period is the amount of time tokens are locked after unstaking and it’s also set in blocks; on mainnet it’s set to 186092 which means ~28 days pre-merge and ~25,8 days post-merge.\n\nFollowing a successful \"yes\" vote, the protocol update should be carried out at the earliest convenience using The Graph Council’s Gnosis Multisig, changing the parameters according to the following table:\n\nParameter |Current value\tProposed value\nEpochManager.epochLength\t6646 (~24 hours pre-merge; ~22.15 hours post-merge)\t7200 (24 hours post-merge)\nStaking.thawingPeriod\t186092 (~28 days pre-merge; ~25.8 days post-merge)\t201600 (28 days post-merge)\n\n\n\n\n",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xd201C95461F69A031Cdc317f453ff190890722aA",
      "totalVotes": 5,
      "blockNumber": 16392539,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0xae5907343254acbba49f4be32d69a604c4e22998c00e06e62d5965f736f4adf6",
      "startTime": {
        "timestamp": 1673548511
      },
      "endTime": {
        "timestamp": 1674153300
      },
      "startTimestamp": 1673548511,
      "endTimestamp": 1674153300,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 5.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 5.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1678236144000,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4NGZhNzZmOWFlNTQxYmY4ODNlNTQ3NDA3MjcwODY2ZmZlYjg0NDhmM2IzZmNhOTBiYjljNWJjNDZlMzE0OTljMg==",
      "id": "0x4fa76f9ae541bf883e547407270866ffeb8448f3b3fca90bb9c5bc46e31499c2",
      "title": "GGP 0018: Add Gnosis Chain to subgraph API feature matrix",
      "content": "GGP: 0018\nScope: Graph Node\nCreated: 2022-12-09\n\n---\n\n# Graph Governance Proposal 0018\n\nThis proposal updates the subgraph API feature matrix to include the Gnosis Chain (ID 100) as a data source type starting on graph. This updates the feature matrix originally defined in [GGP 0015](https://snapshot.org/#/council.graphprotocol.eth/proposal/0xbdd884654a393620a7e8665b4289201b7542c3ee62becfad133e951b0c408444).\n\n```\ngraph-node: ≥0.29.0 <0.30.0\nvalid from: 708\nupgrade window: 720\n\n| Subgraph Feature         | Aliases | Implemented | Experimental | Query Arbitration | Indexing Arbitration | Indexing Rewards |\n|--------------------------|---------|-------------|--------------|-------------------|----------------------|------------------|\n| **Core Features**        |         |             |              |                   |                      |                  |\n| Full-text Search         |         | Yes         | No           | No                | Yes                  | Yes              |\n| Non-Fatal Errors         |         | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| Grafting                 |         | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| **Data Source Types**    |         |             |              |                   |                      |                  |\n| eip155:*                 | *       | Yes         | No           | No                | No                   | No               |\n| eip155:1                 | mainnet | Yes         | No           | Yes               | Yes                  | Yes              |\n| eip155:100               | gnosis  | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| near:*                   | *       | Yes         | Yes          | No                | No                   | No               |\n| cosmos:*                 | *       | Yes         | Yes          | No                | No                   | No               |\n| arweave:*                | *       | Yes         | Yes          | No                | No                   | No               |\n| **Data Source Features** |         |             |              |                   |                      |                  |\n| ipfs.cat in mappings     |         | Yes         | Yes          | No                | No                   | No               |\n| ENS                      |         | Yes         | Yes          | No                | No                   | No               |\n```",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xd201C95461F69A031Cdc317f453ff190890722aA",
      "totalVotes": 6,
      "blockNumber": 16150168,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x4fa76f9ae541bf883e547407270866ffeb8448f3b3fca90bb9c5bc46e31499c2",
      "startTime": {
        "timestamp": 1670625449
      },
      "endTime": {
        "timestamp": 1671116400
      },
      "startTimestamp": 1670625449,
      "endTimestamp": 1671116400,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1678236144000,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4OGMzYzk0ZTZhMzA2NDAyM2VhYzU4MmQ2MDkwNDE1MjRjMWY0MWI3MGJlY2U2MmY2YzU4ZDMwM2ZhYTQyYjdlOA==",
      "id": "0x8c3c94e6a3064023eac582d609041524c1f41b70bece62f6c58d303faa42b7e8",
      "title": "GGP 0017: L2 Bridge and Protocol Deployment",
      "content": "GGP: 0017\nScope: Smart Contracts\nCreated: 2022-11-08\n\n# GIPs\n\n## GIP-0040\n\nGIP: 0040\nTitle: L2 Bridge and Protocol Deployment\nAuthors: Pablo Carranza Vélez pablo@edgeandnode.com, Ariel Barmat ariel@edgeandnode.com, Tomás Migone tomas@edgeandnode.com\nCreated: 2022-11-03\nUpdated: 2022-11-03\nCategory: Protocol Operations\n\n### Abstract\nThis GIP proposes the deployment of The Graph contracts on Arbitrum from the latest [published version](https://github.com/graphprotocol/contracts/tree/pcv/l2-bridge).\n\n### Motivation\nAs mentioned in GIP-0031, there is an interest in the community to move to an L2 to benefit from gas savings, and Arbitrum is thought by many to be the best candidate at this time. It is desirable to move to L2 gradually, however, as Arbitrum is still in beta and such a big protocol change is not without risks. Therefore, we’ve proposed having an experimental stage where rewards are not distributed in L2.\n\n### High Level Description\nWe propose a gradual move to L2 by deploying the new L2 protocol in parallel to the existing L1 deployment. Initially, this new deployment would be experimental because indexing rewards would be disabled. Eventually, governance can enable reward distribution.\n\nThe L2 network will mostly work like the existing L1 network. Most of the contracts will be deployed with no functional changes, so staking and curation can be done in the same way as in L1. To participate in the L2 network, users can move GRT to L2 using the bridge proposed in GIP-0031, though future GIPs can propose ways to facilitate migration of staked tokens or subgraphs and curated signal.\n\nWe propose deploying the L2 in 3 stages, though this GIP is only about the deployment of the first stage:\n\n- Stage 1: Deploy a mirror of L1 contracts on Arbitrum, including an L1-L2 bridge with disabled indexing rewards. In addition to that, we propose to deploy Curation in L2 with a flattened bonding curves as explained in GIP-0039.\n- Stage 2: Upgrade the protocol to support indexing rewards on L2.\n- Stage 3: Add migration helpers to facilitate users moving stake, delegations and subgraphs from L1 to L2.\nA similar GIP to this will be written to propose the deployments of phase 2 and 3 in the future.\n\n### Related Work\nThis GIP propose the deployment of the updates described in GIP-0031 and GIP-0039 and giving an outline about the different stages.\n\nStage 1: L2 Bridge and Protocol Deployment\n- GIP-0031: An Arbitrum GRT Bridge\n- GIP-0039: Curation 1.x\n\nStage 2: L2 Rewards\n- GIP-0034: The Graph Arbitrum deployment with rewards distribution using drip mechanism\n- GIP-0037: The Graph Arbitrum deployment with linear reward distribution minted on L2\n\n### L1 vs L2 Contracts Changes\nMost of the protocol contracts are the same as the ones deployed on Mainnet Ethereum. The only difference is that the GraphToken is upgradeable on L2 and adds a few more functions required by the L2 Bridge.\n\n### New Contracts\nHaving a functioning L2 requires the deployment of an L1-L2 Bridge that can move state over. The bridge is comprised of three contracts that are in charge of passing cross-chain messages and lock GRT. We propose deploying the L1GraphTokenGateway, Escrow and L2GraphTokenGateway and set them up as the canonical bridge for GRT. Please refer to GIP-0031 for more information.\n\n### Operations\nMost of the L2 deployment can be performed using a deployer account with sufficient funds that will then transfer governance to the Council. However, certain actions require the intervention from the Council.\n\n- Base L2 protocol contracts: deployed and configured by deployer, and then transferred to governance.\n- Bridge on L2: deployed and configured by deployer, and then transferred to governance.\n- Bridge on L1: deployed by deployer, configured by the Council.\n\nThe Bridge is Paused by default when deployed, the Council will send a transaction to unpause when the deployer verifies that the configuration is complete. The Council signals the acceptance of the L2 deployment by accepting ownership of the contracts and unpausing the bridge.\n\n### Dependencies\nThis document is proposing the deployment of the work described in GIP-0031 and GIP-0039.\n\n### Risks and Security Considerations\nPlease see the Related Work section for a full risk registry.\n\n### Validation\n- GIP-0031 has been audited by OpenZeppelin. You can find the [audit report](https://github.com/graphprotocol/contracts/blob/a2a09a5aac15dd468d73f9c02618a74edafb0fff/audits/OpenZeppelin/2022-07-pr552-summary.pdf) in the contracts repo.\n\n- The GIP-0031 code has been audited by a [CodeArena bounty](https://code4rena.com/contests/2022-10-the-graph-l2-bridge-contest) with no critical issues found.\n\n- The updates that this GIP propose to deploy has been tested in a private testnet using Goerli and Goerli Arbitrum Nitro according to a test plan developed by Edge & Node.\n\n- We will make public both the test plan and the contingency plan describing potential risks and failure modes.\n\n### Copyright Waiver\nCopyright and related rights waived via CC0.\n\n## GIP-0031\n\nGIP: 0031\nTitle: Arbitrum GRT bridge\nAuthors: Pablo Carranza Velez <pablo@edgeandnode.com>\nCreated: 2022-04-20\nUpdated: 2022-09-29\nDiscussions-To: https://forum.thegraph.com/t/gip-0031-arbitrum-grt-bridge/3305\nCategory: Protocol Logic, Protocol Interfaces\nImplementations: Original implementation was https://github.com/graphprotocol/contracts/pull/552 - superseded by https://github.com/graphprotocol/contracts/pull/699\nAudits: Main report at https://github.com/graphprotocol/contracts/blob/a2a09a5aac15dd468d73f9c02618a74edafb0fff/audits/OpenZeppelin/2022-07-graph-arbitrum-bridge-audit.pdf - relevant issues summarized in https://github.com/graphprotocol/contracts/blob/a2a09a5aac15dd468d73f9c02618a74edafb0fff/audits/OpenZeppelin/2022-07-pr552-summary.pdf\n\n[**Link to GIP-0031**](https://gateway.pinata.cloud/ipfs/QmfV1TmmuQJqfz8qHiSVQeBZ3uwVE3A1DTTq1sXAKxzG2N).\n\n## GIP 0039\n\nGIP: 0039\nTitle: Curation v1.x\nAuthors: Howard Heaton, Anirudh Patel\nCreated: 2022-09-29\nUpdated: 2022-09-29\nCategory: Protocol Economics\n\n[**Link to GIP-0039**](https://ipfs.io/ipfs/QmUBf1WLKEWnZiKB84XzLvcdmX8aPPrifax195oZXMgRaU).\n\n---\n\n# Graph Governance Proposal 0017\n\nFollowing the approval of this proposal, Stage 1 of the protocol deployment to Arbitrum One will be executed as described on GIP 0040.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xd201C95461F69A031Cdc317f453ff190890722aA",
      "totalVotes": 6,
      "blockNumber": 15925703,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x8c3c94e6a3064023eac582d609041524c1f41b70bece62f6c58d303faa42b7e8",
      "startTime": {
        "timestamp": 1667915240
      },
      "endTime": {
        "timestamp": 1668524400
      },
      "startTimestamp": 1667915240,
      "endTimestamp": 1668524400,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1678236144000,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4YmRkODg0NjU0YTM5MzYyMGE3ZTg2NjViNDI4OTIwMWI3NTQyYzNlZTYyYmVjZmFkMTMzZTk1MWIwYzQwODQ0NA==",
      "id": "0xbdd884654a393620a7e8665b4289201b7542c3ee62becfad133e951b0c408444",
      "title": "GGP 0015: Subgraph API Versioning and Feature Support",
      "content": "GGP: 0015\nScope: Graph Node\nCreated: 2022-11-07\n\n# GIPs\n\nGIP: 0008\nTitle: Subgraph API Versioning and Feature Support\nAuthors: [Brandon Ramirez](brandon@edgeandnode.com), [Adam Fuller](adam@edgeandnode.com)\nCreated: 2021-04-27\nUpdated: 2022-11-01\nDiscussions-To: https://forum.thegraph.com/t/a-process-for-specifying-the-subgraph-api-version-and-feature-support-matrix/2004\nCategory: Process\n\n[Link to GIP-0008 on IPFS](https://ipfs.io/ipfs/QmWgFjzfMCTc61FFGKsNHdrcGTGZ4pFaUeEZGtboKLVHrB).\n\n---\n\n# Graph Governance Proposal 0015\n\nThis proposal defines a process for defining the canonical behavior of the subgraph API in the protocol as well as establishing the matrix of subgraph API features and their corresponding supported protocol features, as defined in GIP 0008 linked above.\n\nThe Council defines the following initial Graph Node Version & Feature Support Matrix, understood as per GIP 0008. This matches the currently supported features on the network, with the upcoming Graph Node version.\n\n```\ngraph-node: ^0.28.2\nvalid from: 673\nupgrade window: 687\n\n| Subgraph Feature         | Aliases | Implemented | Experimental | Query Arbitration | Indexing Arbitration | Indexing Rewards |\n|--------------------------|---------|-------------|--------------|-------------------|----------------------|------------------|\n| **Core Features**        |         |             |              |                   |                      |                  |\n| Full-text Search         |         | Yes         | No           | No                | Yes                  | Yes              |\n| Non-Fatal Errors         |         | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| Grafting                 |         | Yes         | Yes          | Yes               | Yes                  | Yes              |\n| **Data Source Types**    |         |             |              |                   |                      |                  |\n| eip155:*                 | *       | Yes         | No           | No                | No                   | No               |\n| eip155:1                 | mainnet | Yes         | No           | Yes               | Yes                  | Yes              |\n| near:*                   | *       | Yes         | Yes          | No                | No                   | No               |\n| cosmos:*                 | *       | Yes         | Yes          | No                | No                   | No               |\n| arweave:*                | *       | Yes         | Yes          | No                | No                   | No               |\n| **Data Source Features** |         |             |              |                   |                      |                  |\n| ipfs.cat in mappings     |         | Yes         | Yes          | No                | No                   | No               |\n| ENS                      |         | Yes         | Yes          | No                | No                   | No               |\n```",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xd201C95461F69A031Cdc317f453ff190890722aA",
      "totalVotes": 6,
      "blockNumber": 15921266,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0xbdd884654a393620a7e8665b4289201b7542c3ee62becfad133e951b0c408444",
      "startTime": {
        "timestamp": 1667861769
      },
      "endTime": {
        "timestamp": 1668438000
      },
      "startTimestamp": 1667861769,
      "endTimestamp": 1668438000,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1678236144000,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4Y2JmM2Y3MTA0NTA5NzIzODhjYjY4YTYzODllNjI5OGE4ZmQ4YWUxMTRkODEzNzQ4ODQ2N2ZjM2YzOGMxMjNhMQ==",
      "id": "0xcbf3f710450972388cb68a6389e6298a8fd8ae114d8137488467fc3f38c123a1",
      "title": "GGP 0014: Arbitration Charter",
      "content": "GGP: 0014\nScope: Arbitration charter\nCreated: 2022-11-07\n\n# GIPs\n\nGIP: 0009\nTitle: Arbitration Charter\nAuthors: [Brandon Ramirez](brandon@edgeandnode.com), [Adam Fuller](adam@edgeandnode.com)\nCreated: 2021-04-09\nUpdated: 2022-11-01\nStage: Candidate\nDiscussions-To: https://forum.thegraph.com/t/an-arbitration-charter-to-clarify-arbitrator-behavior/\nCategory: Protocol Charters\nDepends-On: GIP-0005, GIP-0007, GIP-0008\n\n## Abstract\n\nThe Graph has a protocol role called an Arbitrator who is assigned through decentralized governance. The Arbitrator is an Ethereum Account that has the ability to decide the outcome of disputes in the protocol. The purpose of the Arbitration Charter are to establish norms that constrain the Arbitrator’s actions beyond what is expressible or currently expressed in smart contract code. We propose that any Arbitrator that does not comply with the norms laid out in this charter be replaced via decentralized governance.\n\n# Contents\n\nThe full text of the arbitration charter as of version 2022-11-01 is stored in IPFS under CID [QmaENLieqnQ9ronsPexUzNbHysWDrhDgKvydZQCbLB16kw](https://ipfs.io/ipfs/QmaENLieqnQ9ronsPexUzNbHysWDrhDgKvydZQCbLB16kw).\n\n# Motivation\n\nThe Arbitrator is a protocol role that is assigned via decentralized governance, and as such there are certain parts of its behavior that are not specified in smart contract code running on-chain. Having a protocol charter for this actor's behavior creates clarity for the ecosystem in how the role of the Arbitrator will be executed and establishes a standard for measuring the effectiveness of an Arbitrator, which can be referenced in protocol governance discussions around the appointment of an Arbitrator.\n\nThe substance of the Arbitration charter is intended to ensure that the Arbitrator is fulfilling their role of supporting a healthy and functioning network where Indexers perform their work correctly, while minimizing the risk to honest Indexers of being economically penalized while interacting with the protocol in good faith.\n\nThe next section elaborates on the specific rationale behind select parts of the charter and how they help accomplish said goals.\n\n# Rationale and Alternatives\n\n## Indexing and query faults due to software malfunctions\nAllowing the Arbitrator to exercise discretion in the event of determinism bugs removes possible disincentives and barriers for participation for Indexers. The alternative would require Indexers to become experts on the Graph Node software, which is written in Rust and under active development, or else assume the risk of having their stake slashed for software malfunctions that are outside their direct control.\n\n## Double Jeopardy\nThis is a form of replay protection which prevents an Indexer from being slashed an indefinite number of times for a single fault. Allowing for such an outcome would be a massive disincentive to Indexers participating in the protocol.\n\nA drawback of the current approach is that given the current Attestation structure, an Indexer actually *could* give the same incorrect response to multiple Consumers and those Attestations would be indistinguishable from one another and could result in at most one instance of the Indexer being slashed.\n\nAn alternate approach would be to alter the Attestation structure such that the replay protection only applied to incorrect query responses provided to a specific Consumer.\n\nFurthermore, it might be preferable for the protocol smart contracts to store a record of past disputes in order to enforce the double jeopardy rule, rather than leaving it up to the Arbitrator, which might be prone to error.\n\nBoth of the above alternative designs would be far heavier to implement, however, as they require changes to the protocol software and additional on-chain bookkeeping. These may be explored in future GIPs.\n\n\n## Statute of Limitations\nThere are several reasons for placing a statute of limitations on the faults for which an Indexer can be slashed:\n1. The alternative, allowing Indexers to be slashed for faults that occurred an indefinite amount of time in the past, would punish Indexers that participate in the protocol for a long period of time and thus have a far greater number of instances where they might be slashed due to software malfunctions or operational errors.\n2. Without this clause, Indexers might periodically exit and re-enter the protocol under new identities, to manage their risk of slashing due to possible accumulated faults. This lack of continuity between Indexer identities would create noise in the protocol and would possibly obstruct useful Indexer reputation systems being built around The Graph.\n3. A malicious Indexer attacking the protocol can unstake their GRT immediately after an attack and thus would not be slashable after a thawing period. It would be unfair to make the stake of honest Indexers slashable for a period substantially longer than that of a malicious Indexer.\n\nAn alternate design that addresses the above issues would be to enforce the statute of limitations in the protocol smart contracts. A drawback of this approach, as before, is that it requires software changes and so is a heavier change. This approach may be explored in a future GIP.\n\n## Data Availability\nAn Arbitrator can only perform their job if they are able to reproduce the work of an Indexer. This requires access to data such as subgraph manifests or the body of a query, both of which are too large to store on-chain. A Fisherman should have a built-in incentive to make sure this data is available so they can be awarded for a successful dispute.\n\nThe proposed charter requires settling disputes where data is unavailable as a *Draw*. An alternative design would be to punish the Fisherman for submitting a dispute without making the data available. A drawback of this approach is that discovering files through the IPFS distributed hash table (DHT) is not 100% reliable and could introduce undue risk to the Fisherman. This might be mitigated by requiring the Fisherman to pin all necessary files to a specific IPFS node, but this feels overly centralized and brittle.\n\nAnother alternative could be to require the necessary files to be pinned to a storage chain such as Arweave or Filecoin, and only allow a dispute to created if all necessary files are available. This may be explored in a future GIP.\n\n## Maximum allowable slashing for query disputes\nBy capping the amount that an Indexer can be slashed for queries in a given time period, the charter addresses an important asymmetry between indexing and querying in the protocol: specifically, the fact that Indexers only submit one PoI per allocation and thus can be slashed a maximum of once per allocation for indexing faults, but Indexers may respond to an unbounded number of queries during an allocation and thus might expose themselves to a similarly unbounded level of risk due to slashing, capped only by their total stake, from software malfunctions or other operational errors. Without the cap specified in this clause, an Indexer *could theoretically have all their stake slashed in a single allocation.*\n\nAn alternative design would be to implement this cap in the protocol smart contracts. This is a heavier change as it requires an upgrade to the protocol smart contracts. This may be explored in a future GIP.\n\n## Valid Proofs of Indexing for a given epoch.\n\nCurrently, the protocol smart contracts do not let you specify as of which epoch you would like to close an allocation; rather, this is inferred from the current epoch as of when the transaction gets mined that closes the allocation. This leaves open the possibility that an Indexer may submit a PoI in a transaction that is intended to close an allocation in one epoch, but the transaction might not actually get mined until the following epoch. Given the unpredictability of gas costs and interacting with the blockchain, it would be undesirable to punish Indexers for such a situation.\n\nAn alternative design would be to allow Indexers to specify an epoch number when closing an allocation. This is a heavier change as it requires an upgrade to the protocol smart contracts. This may be explored in a future GIP.\n\n## Experimental features\n\nSubgraph API Versioning and Feature Support (GIP-0008) describes the introduction of new subgraph features, including \"experimental\" features. These may be known to require further development to achieve determinism, in which case they will not be eligible for rewards and therefore disputes. But in some cases, features may be expected to be deterministic, but might require observation in a production environment in order to achieve full confidence. An example might be the introduction of a new Ethereum network. In these cases, features might be marked as eligible for rewards, but in the event of a dispute, indexers who cooperate with the Arbitrator can expect a higher likelihood of a draw, given the contribution towards a better understanding the behaviour of the experimental feature.\n\n# Dependencies\nThis GIP depends on two other GIPs:\n- GIP-0005 (TBD) - Makes timeouts in subgraph fully deterministic using WASM gas metering. This is necessary for the Arbitrator to reproduce the work of Indexers in a way that is completely deterministic.\n- GIP-0008 - Specifies the process for making upgrades to the Subgraph API and Indexer software. This is necessary for defining the canonical version of the protocol software that the Arbitrator should run in reproducing the work of Indexers.\n- GIP XXXX (TBD) - Allows the protocol to set separate slashing percentages for indexing and query faults. This is necessary because this charter proposes allowing Indexers to be slashed once per epoch for query faults, which with current network parameters of 2.5% slashing and 28 epochs max allocation duration, equates to up to 70% possible slashing from query faults for a single allocation. This is disproportionately high compared to the 2.5% maximum slashing per allocation that currently exists for indexing faults.\n\n## Risks and Security Considerations\nAs this GIP is a protocol charter, it does not introduce any new technical risks or security considerations that do not already exist in the protocol today.\n\nA possible non-technical risk is that this charter provides a false sense of security to Indexers participating in the protocol that it is impossible to be slashed while interacting with the protocol in good faith, but then are slashed due to the Arbitrator executing their duties incorrectly.\n\n## Future work\n\n### Delayed dispute decision finalization\nIt was suggested in the review of this GIP that there could be a protocol-enforced window before the decision of a dispute can be finalized in order to provide ample time for appealing to the community and The Graph Council. This may be explored in a future GIP.\n\n### Enforcing conventions in this charter at the protocol level\nWhile most of the Arbitration charter describes conventions for behavior that are difficult to specify on-chain, some clauses could be enforced at the smart contract layer. This may be explored in future GIPs.\n\n### Only make allocated stake slashable\nCurrently, all of an Indexer's stake may be slashed for a fault that occurred involving a single allocation. A possible change would be to allow Indexers to limit their risk by only having the allocated stake associated with a fault be slashable. This also removes a disincentive for Indexers to create many simultaneous allocations. This would require a change to the smart contracts and may be explored in a future GIP.\n\n### Make shorter allocations slashable for a smaller amount that longer allocations for indexing disputes\nCurrently, an Indexer is punished for closing their allocations more frequently, as they submit more PoIs in this process, which creates more opportunities to be slashed. An alternate design would be to set a slashing percentage per epoch of indexing, such that longer allocations may be slashed for a greater percentage than shorter allocations. This would require a smart contract upgrade and may be explored in a future GIP.\n\n---\n\n# Graph Governance Proposal 0014\n\nThrough this proposal, the Council ratifies the Arbitration Charter with IPFS CID [QmaENLieqnQ9ronsPexUzNbHysWDrhDgKvydZQCbLB16kw](https://ipfs.io/ipfs/QmaENLieqnQ9ronsPexUzNbHysWDrhDgKvydZQCbLB16kw), which  is currently used to inform arbitration decisions, and has been updated for the introduction of the Epoch Block Oracle.\n",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xd201C95461F69A031Cdc317f453ff190890722aA",
      "totalVotes": 5,
      "blockNumber": 15920748,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0xcbf3f710450972388cb68a6389e6298a8fd8ae114d8137488467fc3f38c123a1",
      "startTime": {
        "timestamp": 1667847495
      },
      "endTime": {
        "timestamp": 1668438000
      },
      "startTimestamp": 1667847495,
      "endTimestamp": 1668438000,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 5.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 5.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1678236144000,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4MmZmYmVhZWE0YTNlNmI1MjJmNWVmYzlhMGIxODFhMmQ5YTMzY2Q5NDA5ZWZmODE5ZTY1ZTg3Yzg1NTI5MmI2MA==",
      "id": "0x2ffbeaea4a3e6b522f5efc9a0b181a2d9a33cd9409eff819e65e87c855292b60",
      "title": "GGP 0016: Epoch Block Oracle & Data Edge specification",
      "content": "GGP: 0016\nScope: Smart Contracts\nCreated: 2022-11-07\n\n# GIPs\n\nGIP: 0038\nTitle: Epoch Block Oracle\nAuthors: Adam Fuller (adam@edgeandnode.com), Ariel Barmat (ariel@edgeandnode.com), Zachary Burns\nCreated: 2022-02-11\nUpdated: 2022-11-01\nCategory: Protocol Interfaces\n\n[Link to GIP-0038 on IPFS](https://ipfs.io/ipfs/QmPJEK4ErhKR1h5aaqdKGBmThJArxhtxpsF2DmTHMTYNey).\n\n---\n\n# Graph Governance Proposal 0016\n\nThis proposal introduces an \"Epoch Block Oracle\" to specify the `currentEpochBlock` on other chains, unlocking indexing rewards and network growth, as per GIP-0038.\n\nThe Council specifies that the protocol will use the following Data Edge contract instance on mainnet:\n\n[`0xADE906194C923b28F03F48BC5D9D987AAE21fFab`](https://etherscan.io/address/0xADE906194C923b28F03F48BC5D9D987AAE21fFab)\n\n\n",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xd201C95461F69A031Cdc317f453ff190890722aA",
      "totalVotes": 6,
      "blockNumber": 15921319,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x2ffbeaea4a3e6b522f5efc9a0b181a2d9a33cd9409eff819e65e87c855292b60",
      "startTime": {
        "timestamp": 1667862413
      },
      "endTime": {
        "timestamp": 1668438000
      },
      "startTimestamp": 1667862413,
      "endTimestamp": 1668438000,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1678236144000,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4M2M0N2UyZjJhMGUyNGE0YzgyYjQ1ZTkwMmU0N2IwOTgxNzQ2NTYzODUzZDBkNWZkOWQxMzdlZmUwYThkYjQzZQ==",
      "id": "0x3c47e2f2a0e24a4c82b45e902e47b0981746563853d0d5fd9d137efe0a8db43e",
      "title": "GGP-0013: Decrease protocol issuance rate to keep annual issuance at 3%",
      "content": "Indexing rewards in The Graph utilize a parameter that defines issuance rate of GRT per block. After The Merge, block generation is now faster along with the effective issuance rate. Ethereum now has 2628000 blocks a year instead of approximately 2425846, which at the current per block issuance rate will lead to yearly 3.2% rate, rather than The Graph's original 3% annnual issuance rate.\n\nThis proposal is to update the issuanceRate parameter of The Graph’s protocol smart contracts running on Ethereum Mainnet from the current 1000000012184945188 to 1000000011247641700\n\nForum discussion: https://forum.thegraph.com/t/indexing-rewards-and-the-merge/3523\n\nThe update must be performed by initiating a RewardsManager.setIssuanceRate() transaction with the proposed value on Ethereum Mainnet.\n\nFollowing a successful “yes” vote, the protocol update should be carried out at the earliest convenience using The Graph Council’s Gnosis Multisig.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0x37BC95e38235Ec42F185E945922a4E2C9795B391",
      "totalVotes": 6,
      "blockNumber": 15771742,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x3c47e2f2a0e24a4c82b45e902e47b0981746563853d0d5fd9d137efe0a8db43e",
      "startTime": {
        "timestamp": 1666056982
      },
      "endTime": {
        "timestamp": 1666638000
      },
      "startTimestamp": 1666056982,
      "endTimestamp": 1666638000,
      "currentState": "closed",
      "choices": [
        "For",
        "Against",
        "Abstain"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        },
        {
          "total": 0.0,
          "choice": 2
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1678236144000,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4ZDY0ZTUyMzcxM2EwNTY4MmY2Y2VmOWJmYWY3ZmIzNDBkZGUzMzk2YWViMWZlMTZkNmVjNWMxZTFlYWE3ZGQxZQ==",
      "id": "0xd64e523713a05682f6cef9bfaf7fb340dde3396aeb1fe16d6ec5c1e1eaa7dd1e",
      "title": "GGP 0012: Create altruistic allocations and close stale allocations",
      "content": "GGP: 0012\nScope: Staking contract\nCreated: \nGIPs-Repo-Latest-Commit: 9385b40faedd77c9af14eb6703b9c3f459e30949\n\n## GIPs\n  GIP: 0027\n  Title: Create altruistic allocations and close stale allocations\n  Authors: Ariel Barmat <ariel@thegraph.com> , Sam Green <sam@semiotic.ai>\n  Created: 2022-03-24\n  Stage: Candidate\n  Discussions-To: https://forum.thegraph.com/t/gip-0027-create-altruistic-allocations-and-close-stale-allocations/3217\n\n\n## Abstract\nProvide a mechanism so that indexers can opt-out of indexing rewards by allocating zero tokens to a subgraph. This would be useful for an indexer who wants to altruistically serve queries. In addition, this implementation allows the public to close stale allocations after the max allocation period, however, nobody can close an altruistic allocation.\n\n\n## Motivation\nStale allocations affect the stability of the network when an indexer that has a big proportional allocated stake on a subgraph does not keep it active, as other indexers won’t want to allocate if it already has a big allocation. Stale allocations also reduce the speed of how value flows through the protocol, reducing the frequency at which curators and delegators get their share of rewards and fees. Currently, delegators of an indexer are the only ones who can close stale allocations, but this is an unnecessary validation considering that anyone could turn into a delegator, even with the smallest amount of tokens, and then close it. For a summary of the current stale allocation statistics, see the “Allocation Age” histogram here: Dune 3.\n\nToday, indexers must allocate more than zero tokens. However, indexers might want to index and serve queries on a particular subgraph altruistically by opting out of rewards. Today indexers can serve queries altruistically by presenting an empty PoI on closeAllocation, however, this is not efficient because they must still pay Ethereum transaction fees to “refresh” (i.e., close and re-open) their allocations. By allowing altruistic indexers to allocate zero tokens, we can skip all the code paths for updating indexing rewards and provide a huge gas improvement.\n\n\n\n\n## References\nAudit report: https://github.com/graphprotocol/contracts/blob/064d362af559b6ebb3df18634b0141f12ad0ed53/audits/ConsenSysDiligence/2022-03-graph-altruistic-alloc-and-query-versioning.pdf\nImplementations: https://github.com/graphprotocol/contracts/pull/549\nImplementations latest commit-hash: e999cb6d210a85bfb074dfe814c5d4b2bf3e88c1\n\n---\n\n# Graph Governance Proposal-0012\n\n## Create altruistic allocations and close stale allocations\n\nThis proposal is to upgrade The Graph's protocol smart contracts running on Ethereum mainnet with the changes described in Graph Improvement Proposal (GIP) 0027, including the motivation and scope of the changes described in this proposal.\n\nThe code deployed that implements GIP-0027 must correspond to the commit hash included in the front matter of this governance proposal.\n\nFollowing a successful \"yes\" vote, the protocol upgrade should be carried out at the earliest convenience using The Graph Council's Gnosis Multisig.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0x38FA68D1C06BD272893908a74E6BcC67E28d4Da8",
      "totalVotes": 6,
      "blockNumber": 14878782,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0xd64e523713a05682f6cef9bfaf7fb340dde3396aeb1fe16d6ec5c1e1eaa7dd1e",
      "startTime": {
        "timestamp": 1654001426
      },
      "endTime": {
        "timestamp": 1654617600
      },
      "startTimestamp": 1654001426,
      "endTimestamp": 1654617600,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1678236144000,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4NjViNzY2YzRiNzUyZWQ2MzI3NzFkNmFjMDY2ZDNhYTE5NWI2MTBjZmVjNTg0NDk0Njg3M2I4ZjcwYjE1ZTllZQ==",
      "id": "0x65b766c4b752ed632771d6ac066d3aa195b610cfec5844946873b8f70b15e9ee",
      "title": "GGP 0011: Minimum Curation Amount for Indexing Rewards Eligibility",
      "content": "GGP: 0011\nScope: RewardsManager contract\nCreated: 2022-05-07\nGIPs-Repo-Latest-Commit: 7f427b25a84391032e15193e323997e37967eb75\n\n## GIPs\n  GIP: 0030\n  Title: Minimum Curation Amount for Indexing Rewards Eligibility\n  Authors: Ricky Esclapon <ricky@edgeandnode.com>, Craig Tutterow <craig@edgeandnode.com>\n  Created: 2022-04-19\n  Stage: Candidate\n  Discussions-To: https://forum.thegraph.com/t/gip-0030-minimum-curation-amount-for-indexing-rewards-eligibility/3290\n\n\n## Abstract\nTo mitigate economic security risks to the protocol, we propose initializing a new protocol parameter: minimum_signal, to an amount of 500 GRT in order for a subgraph to become eligible for receiving indexing rewards. We present a sensitivity analysis that indicates that a minimum curation parameter will make the proof of indexing spoofing attack identified in the protocol’s OpenZeppelin security audit unprofitable under specified economic conditions.\n\n\n## Motivation\nThe OpenZeppelin audit identified an economic attack vector (C02) wherein a dishonest Indexer could:\n\n* Minimize self-staking to reduce value at risk of slashing.\n* Maximize self-delegation, which is eligible for receiving indexing rewards without slashing risk.\n* Forego infrastructure and labor costs of indexing by spoofing PoIs, thereby taking on slashing risk while claiming indexing rewards.\n\nPrysm Group, a team of economists specializing in mechanism design and game theory, received a grant from The Graph Foundation to develop a model and conduct an analysis of the viability of this strategy, as well as develop recommendations for mitigating the risk of such an attack. Edge & Node data scientists subsequently performed a numerical and sensitivity analysis to extend the Prysm models and identify values for protocol parameters that are capable of preventing this attack under different economic circumstances.\n\n\n## References\n\n* The OpenZeppelin Audit (Issue C02) provided a qualitative description of the proof of indexing spoofing attack.\n* Prysm Group was contracted to develop a formal model and design a mechanism to protect against such an attack: Initial Analysis of PoI Spoofing Attack Viability, PoI Spoofing Profitability Model and Analysis.\n* Development work for implementing the minimum curation signal protocol parameter was completed in December and subsequently audited, but establishing a value that would prevent the attack required further analysis based on the Prysm Group models. See: Github PR for graphprotocol/contracts.\n* Edge & Node Data Science did a parameter search based on the Prysm analysis. This was presented in slides on the March 31 Core Dev call and code for the analysis can be found in the notebook here.\n* Implementations: https://github.com/graphprotocol/contracts/pull/528/\n\n---\n\n# Graph Governance Proposal-0011\n\nThis proposal is to upgrade The Graph's protocol smart contracts running on Ethereum mainnet with the changes described in Graph Improvement Proposal (GIP) 0030, including the motivation and scope of the changes described in this proposal.\n\nThe code deployed that implements GIP-0030 must correspond to the commit hash included in the front matter of this governance proposal.\n\nFollowing a successful \"yes\" vote, the protocol upgrade should be carried out at the earliest convenience using The Graph Council's Gnosis Multisig. Following the upgrade, the Council should subsequently set the minimum_signal parameter to 500 GRT, as proposed in the GIP.\n",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xd201C95461F69A031Cdc317f453ff190890722aA",
      "totalVotes": 6,
      "blockNumber": 14805286,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x65b766c4b752ed632771d6ac066d3aa195b610cfec5844946873b8f70b15e9ee",
      "startTime": {
        "timestamp": 1652965200
      },
      "endTime": {
        "timestamp": 1653577200
      },
      "startTimestamp": 1652965200,
      "endTimestamp": 1653577200,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1678236144000,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4MDM0MGU5Yjc2MTdhZGZiMzUwZTQ4ZTliZjE3MTgwNGY2NDdlMzE0NDg4ZGZkMGMzNmY5MGIyMDY2OWZkMGU2OQ==",
      "id": "0x0340e9b7617adfb350e48e9bf171804f647e314488dfd0c36f90b20669fd0e69",
      "title": "GGP 0011: Minimum Curation Amount for Indexing Rewards Eligibility",
      "content": "GGP: 0011\nScope: RewardsManager contract\nCreated: 2022-05-07\nGIPs-Repo-Latest-Commit: 7f427b25a84391032e15193e323997e37967eb75\n\n## GIPs\n  GIP: 0030\n  Title: Minimum Curation Amount for Indexing Rewards Eligibility\n  Authors: Ricky Esclapon <ricky@edgeandnode.com>, Craig Tutterow <craig@edgeandnode.com>\n  Created: 2022-04-19\n  Stage: Candidate\n  Discussions-To: https://forum.thegraph.com/t/gip-0030-minimum-curation-amount-for-indexing-rewards-eligibility/3290\n\n\n## Abstract\nTo mitigate economic security risks to the protocol, we propose initializing a new protocol parameter: minimum_signal, to an amount of 500 GRT in order for a subgraph to become eligible for receiving indexing rewards. We present a sensitivity analysis that indicates that a minimum curation parameter will make the proof of indexing spoofing attack identified in the protocol’s OpenZeppelin security audit unprofitable under specified economic conditions.\n\n\n## Motivation\nThe OpenZeppelin audit identified an economic attack vector (C02) wherein a dishonest Indexer could:\n\n* Minimize self-staking to reduce value at risk of slashing.\n* Maximize self-delegation, which is eligible for receiving indexing rewards without slashing risk.\n* Forego infrastructure and labor costs of indexing by spoofing PoIs, thereby taking on slashing risk while claiming indexing rewards.\n\nPrysm Group, a team of economists specializing in mechanism design and game theory, received a grant from The Graph Foundation to develop a model and conduct an analysis of the viability of this strategy, as well as develop recommendations for mitigating the risk of such an attack. Edge & Node data scientists subsequently performed a numerical and sensitivity analysis to extend the Prysm models and identify values for protocol parameters that are capable of preventing this attack under different economic circumstances.\n\n\n## References\n\n* The OpenZeppelin Audit (Issue C02) provided a qualitative description of the proof of indexing spoofing attack.\n* Prysm Group was contracted to develop a formal model and design a mechanism to protect against such an attack: Initial Analysis of PoI Spoofing Attack Viability, PoI Spoofing Profitability Model and Analysis.\n* Development work for implementing the minimum curation signal protocol parameter was completed in December and subsequently audited, but establishing a value that would prevent the attack required further analysis based on the Prysm Group models. See: Github PR for graphprotocol/contracts.\n* Edge & Node Data Science did a parameter search based on the Prysm analysis. This was presented in slides on the March 31 Core Dev call and code for the analysis can be found in the notebook here.\n* Implementations: https://github.com/graphprotocol/contracts/pull/528/\n\n---\n\n# Graph Governance Proposal-0011\n\nThis proposal is to upgrade The Graph's protocol smart contracts running on Ethereum mainnet with the changes described in Graph Improvement Proposal (GIP) 0030, including the motivation and scope of the changes described in this proposal.\n\nThe code deployed that implements GIP-0030 must correspond to the commit hash included in the front matter of this governance proposal.\n\nFollowing a successful \"yes\" vote, the protocol upgrade should be carried out at the earliest convenience using The Graph Council's Gnosis Multisig. Following the upgrade, the Council should subsequently set the minimum_signal parameter to 500 GRT, as proposed in the GIP.\n",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0xd201C95461F69A031Cdc317f453ff190890722aA",
      "totalVotes": 4,
      "blockNumber": 14729960,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x0340e9b7617adfb350e48e9bf171804f647e314488dfd0c36f90b20669fd0e69",
      "startTime": {
        "timestamp": 1651928757
      },
      "endTime": {
        "timestamp": 1652540400
      },
      "startTimestamp": 1651928757,
      "endTimestamp": 1652540400,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 4.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 4.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1678236144000,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4YmY2ODlkNDZhN2RhZWZhNjMyMTE3OTgwYmU3YWU3OTkzNGEwOTgzNzA3NDRhODZjMDE1NTRlYzMzM2E4Y2M0NQ==",
      "id": "0xbf689d46a7daefa632117980be7ae79934a098370744a86c01554ec333a8cc45",
      "title": "GGP 0010: Transfer Ownerhsip w/ External NFT Contract",
      "content": "---\nGGP: 0010\nScope: Smart Contracts\nCreated: 02/09/22\nGIPs-Repo-Latest-Commit: 2692d748894c57d43defda8a581adf6fd1d83096\nGIPs: \n  - GIP: 0023\n  Title: Subgraph Ownership transfer using external NFT contract\n  Authors: Ariel Barmat <ariel@edgeandnode.com>\n  Created: 2022-01-16\n  Stage: Candidate\n  Discussions-To: https://forum.thegraph.com/t/gip-0023-subgraph-ownership-transfer-using-external-nft-contract/2924\n  Implementations: https://github.com/graphprotocol/contracts/pull/527\n  Commit: 0a3888d572cd2faab0f9b32477fe237f0cd5856e\n  Audits: https://github.com/graphprotocol/contracts/blob/dev/audits/ConsenSysDiligence/2022-01-graph-pr527-audit.pd\n\nAudits:\n  - Auditor: Consensys Diligence\n  Commits: 760a7eaae745432053911c915cc2ca5e7a5d5717, 0a3888d572cd2faab0f9b32477fe237f0cd5856e\n  Report: https://github.com/graphprotocol/contracts/blob/dev/audits/ConsenSysDiligence/2022-01-graph-pr527-audit.pdf\n---\n\n# Graph Governance Proposal-0010\n## Subgraph ownership transfer using external NFT contract\nThis proposal is to upgrade The Graph's protocol smart contracts running on Ethereum mainnet with the changes described in Graph Improvement Proposal (GIP) 0023, to enable subgraphs to be transferred as NFTs. The full motivation and scope are described in GIP-0023.\n\nGIP-0023 supersedes GIP-0018, which had previously been approved by The Graph Council in Graph Governance Proposal (GGP) 0008. The Council aborted the upgrade described in GGP-0008 because a non-critical issue was discovered during testing of the changes, which would have impacted interoperability of subgraph NFTs with existing NFT wallets and explorers.\n\nFollowing a successful \"yes\" vote, the protocol upgrade should be carried out at the earliest convenience using The Graph Council's Gnosis Multisig.\n\nThe code deployed that implements GIP-0023 must correspond to the commit hash included in the front matter of this governance proposal. \n\n",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0x37BC95e38235Ec42F185E945922a4E2C9795B391",
      "totalVotes": 6,
      "blockNumber": 14173452,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0xbf689d46a7daefa632117980be7ae79934a098370744a86c01554ec333a8cc45",
      "startTime": {
        "timestamp": 1644433200
      },
      "endTime": {
        "timestamp": 1645038000
      },
      "startTimestamp": 1644433200,
      "endTimestamp": 1645038000,
      "currentState": "closed",
      "choices": [
        "Approve",
        "Reject"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1678236144000,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4YWFhMzE4M2IwMTgyNTJlNjkxMjBiZTUzYzY5NmQyYzUzYWI1MmY0NTViM2JlNWJiNjU4ZTRiNDdkMWM3MWFhMQ==",
      "id": "0xaaa3183b018252e69120be53c696d2c53ab52f455b3be5bb658e4b47d1c71aa1",
      "title": "GGP 0008: Subgraph ownership transfer",
      "content": "GGP: 0008\nScope: Smart Contracts\nCreated: 2021-12-01\nGIPs-Repo-Latest-Commit: 4ec06e9357c948829e72c3a4c9ed8bfc1d0d04ba\n\n## GIPs\n  GIP: 0018\n  Title: Subgraph ownership transfer\n  Authors: Ariel Barmat ariel@edgeandnode.com\n  Created: 2021-09-25\n  Stage: Candidate\n  Discussions-To: https://forum.thegraph.com/t/gip-0018-subgraph-ownership-transfer/2589\n\n## Motivation\nApp developers create subgraphs to index blockchain data. Then, they want indexers to run their subgraphs in the decentralized network. To achieve that, they publish a Subgraph in the GNS that targets a Subgraph Deployment. Once they publish a subgraph, they work to attract curators that delegate signal to the Subgraph so that the app developer can properly incentivize indexers.\n\nFor many reasons, the app developer might want to transfer ownership of the subgraph to a different account, a valid use case, not possible with the current implementation.\n\n## Implementation\nThe proposed implementation involves a number of changes to make it easier to manage a subgraph. In addition to that, it simplifies many of the contract interfaces. The following bullet points provide a summary of the implementation areas:\n- Subgraph Primary Key\n- NFT-based Ownership\n- Interface Simplification\n- Remove Unused Functionality\n- Migration Facilities\n\nDetails of the implementation are captured in the Implementations link.\n\n## References\n\nImplementations: https://github.com/graphprotocol/contracts/pull/497\n\nAudit: https://github.com/graphprotocol/contracts/blob/4ec06e9357c948829e72c3a4c9ed8bfc1d0d04ba/audits/OpenZeppelin/2021-11-graph-gns-transferrable-owner.pdf\n\n---\n\n# Graph Governance Proposal-0008\n\n## Subgraph ownership transfer\nThis proposal is to upgrade The Graph's protocol smart contracts running on Ethereum mainnet with the changes described in Graph Improvement Proposal (GIP) 0018, including the motivation and scope of the changes described in this proposal.\n\nThe code deployed that implements GIP-0018 must correspond to the commit hash included in the front matter of this governance proposal.\n\nFollowing a successful \"yes\" vote, the protocol upgrade should be carried out at the earliest convenience using The Graph Council's Gnosis Multisig.\n",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0x7EbE5983FDA73749f94E39A215Cc80263A280385",
      "totalVotes": 6,
      "blockNumber": 13728657,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0xaaa3183b018252e69120be53c696d2c53ab52f455b3be5bb658e4b47d1c71aa1",
      "startTime": {
        "timestamp": 1638442800
      },
      "endTime": {
        "timestamp": 1638874800
      },
      "startTimestamp": 1638442800,
      "endTimestamp": 1638874800,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1678236144000,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4MDJmZDMyMjNlZGU3ZTBlYThiZTM2ZmIyZTIyYWJkN2I0MWFlOTQ0MWFkZTBlZGY4M2Q2MDBiOGJlY2FmMmE2OA==",
      "id": "0x02fd3223ede7e0ea8be36fb2e22abd7b41ae9441ade0edf83d600b8becaf2a68",
      "title": "GGP 0009: Save gas when initializing a subgraph deployment",
      "content": "GGP: 0009\nScope: Smart Contracts\nCreated: 2021-12-01\nGIPs-Repo-Latest-Commit: 2e84093ed32024530e77a5e862eea46f491a322f\n\n## GIPs\n  GIP: 0019\n  Title: Save gas when initializing a subgraph deployment\n  Authors: Ariel Barmat ariel@edgeandnode.com\n  Created: 2021-09-25\n  Stage: Candidate\n  Discussions-To: https://forum.thegraph.com/t/gip-0019-save-gas-when-initializing-a-subgraph-deployment/2590\n\n## Motivation\nReduce the gas cost for anyone initializing a subgraph deployment. This update is particularly beneficial for subgraph/app developers who do the first signal.\n\n## Implementation\nUse a Minimal Proxy to clone the Graph Curation Token (ERC20) based on an implementation contract deployed just once. The implementation bytecode is also called master copy.\n\nThe benefit of this solution is that the token interface remain the same, making it backwards compatible.\n\nThis solution involves the following changes:\n\n- Modify the initializer of Curation to accept the master copy contract address to use when cloning.\n- Expose a function in Curation contract so that governance can change the implementation in the future.\n- Leverage \"@openzeppelin/contracts/proxy/Clones.sol\" to spawn the Minimal Proxies.\n- Update the current Graph Curation Token contract code and make it upgradeable so it can be used from the context of a Minimal Proxy.\n\n\n## References\n\nImplementations: https://github.com/graphprotocol/contracts/pull/505\n\nAudit: https://github.com/graphprotocol/contracts/blob/a24f6a140ad170cfc11572136e309c70975b8a2a/audits/OpenZeppelin/2021-11-graph-curation-minimal-proxy.pdf\n\n---\n\n# Graph Governance Proposal-0009\n## Save gas when initializing a subgraph deployment\nThis proposal is to upgrade The Graph's protocol smart contracts running on Ethereum mainnet with the changes described in Graph Improvement Proposal (GIP) 0019, including the motivation and scope of the changes described in this proposal.\n\nThe code deployed that implements GIP-0019 must correspond to the commit hash included in the front matter of this governance proposal.\n\nFollowing a successful \"yes\" vote, the protocol upgrade should be carried out at the earliest convenience using The Graph Council's Gnosis Multisig.\n",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0x7EbE5983FDA73749f94E39A215Cc80263A280385",
      "totalVotes": 6,
      "blockNumber": 13728686,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x02fd3223ede7e0ea8be36fb2e22abd7b41ae9441ade0edf83d600b8becaf2a68",
      "startTime": {
        "timestamp": 1638442800
      },
      "endTime": {
        "timestamp": 1638874800
      },
      "startTimestamp": 1638442800,
      "endTimestamp": 1638874800,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1678236144000,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OjB4MGVlMzBkOGEwNGQwMDgxOTcwMWU4OTA4ZjAyYWZhMzQ4NWZkYWQyNmFmNGUwN2I4NDZmZGUwM2VjODlhMDgyZg==",
      "id": "0x0ee30d8a04d00819701e8908f02afa3485fdad26af4e07b846fde03ec89a082f",
      "title": "GGP 0007: Staking and Delegation Upgrades",
      "content": "GGP: 0007\nScope: Smart Contracts\nCreated: 2021-11-23\nGIPs-Repo-Latest-Commit: 6db18c583241694b9bb4c78714a7de06895d3ce7\n\n## GIPs\n  GIP: 0015\n  Title: Allow unstake passing a larger amount than available \n  Authors: Ariel Barmat ariel@edgeandnode.com \n  Created: 2021-09-25 \n  Stage: Candidate \n  Implementations: https://github.com/graphprotocol/contracts/pull/487\n\n  GIP: 0016 \n  Title: Revert when not enough precision to assign a delegation share \n  Authors: Ariel Barmat ariel@edgeandnode.com \n  Created: 2021-09-25 \n  Stage: Candidate \n  Implementations: https://github.com/graphprotocol/contracts/pull/491\n\n  GIP: 0017 Title: Allow batching calls in Staking contract \n  Authors: Ariel Barmat ariel@edgeandnode.com \n  Created: 2021-09-25 \n  Stage: Candidate \n  Implementations: https://github.com/graphprotocol/contracts/pull/475\n\n---\n\n## GGP 0007: Staking and Delegation Upgrades\n\nThis proposal is to upgrade The Graph’s protocol smart contracts running on Ethereum mainnet with the changes described in Graph Improvement Proposals (GIP) 0015, 0016, 0017. The motivation and scope of the changes are captured in the language of the proposal itself.\n\nThe code deployed that implements GIP-0015, GIP-0016 and GIP-0017 must correspond to the commit hash included in the front matter of this governance proposal, which corresponds to the version of the implementation that was audited by OpenZeppelin including fixes.\n\nFollowing a successful “yes” vote, given that the change described in the GIPs are backwards compatible, the protocol upgrade should be carried out at the earliest convenience using The Graph Council’s Gnosis Multisig after one condition has been met: GIP-0017 adds a multicall function but removes some functions the Indexer agent is using that will be replaced by the multicall. The changes in the Indexer agent must therefore be implemented before executing GGP-0007. The Indexer agent upgrade must be verified prior to initiating the upgrade on the Multisig.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0x4530aFEaDe76579f4D4E6fF9e079520B7e7ebA9A",
      "totalVotes": 7,
      "blockNumber": 13673214,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/0x0ee30d8a04d00819701e8908f02afa3485fdad26af4e07b846fde03ec89a082f",
      "startTime": {
        "timestamp": 1637668800
      },
      "endTime": {
        "timestamp": 1638273600
      },
      "startTimestamp": 1637668800,
      "endTimestamp": 1638273600,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 7.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 7.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1678236144000,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OnFtem5lZGI1eTFnajJydzZ0ZGxoMWZibXI2anRucmQzbmxtYnkxdmZtMWFiYXM=",
      "id": "QmZnedB5Y1GJ2RW6tdLh1FBMr6jTnrd3nLmbY1vFM1aBAS",
      "title": "Graph Governance Proposal - 0006",
      "content": "GGP: 0006\nScope: Economic Parameters\nCreated: 2021-10-08\nGIPs-Repo-Latest-Commit: 352037dda593c20f91c241a7ed266ebcec33ffd3\n\n## GIPs\n  GIP: 0013\n  Title: Reduce Curation Tax.\n  Authors: Brandon Ramirez brandon@edgeandnode.com, Dave Kajpust dave@edgeandnode.com\n  Created: 2021-07-13\n  Stage: Candidate\n  Discussions-To: https://forum.thegraph.com/t/proposal-to-reduce-curation-tax/2212\n\n## Motivation\nAs production subgraphs migrate to The Graph's decentralized network, we have collected more data and feedback on the total costs of using the network as a subgraph developer. As many subgraph developers initially signaled ~100K GRT when using the network, the cost of upgrading a subgraph currently sits around 2.5K GRT. This cost is in addition to the opportunity cost of locking up the signal as well as the cost of actually paying for query fees.\n\n## References\n\nEconomic Attack Evaluation:\nThe major constraint of lowering the curation tax was evaluated in Appendix A of GIP-0013, which is referred to as Subgraph Withholding Attack\n\nCommunity Polls:\nhttps://snapshot.org/#/graphprotocol.eth/proposal/QmRz29aE4TXpi9HrNbn6ZA1sRF1xEBeGbw8HxRpHZRZ4rD\n\nAudit:\nThe code that implements the curation tax has already been audited as a part of previous audits. GIP-0013 implements a parameter change in the existing code in the form of a reduction of the curation tax from 2.5% to 1%\n\n—\n\n# Graph Governance Proposal-0006\n\n## Reduce Curation Tax\nThis proposal is to update The Graph's curation tax parameters from 2.5% to 1% as described in Graph Improvement Proposal (GIP) 0013.\n\nThe code deployed that implements GIP-0013 must correspond to the commit hash included in the front matter of this governance proposal.\n\nFollowing a successful \"yes\" vote, the protocol update should be carried out at the earliest convenience using The Graph Council's Gnosis Multisig.\n",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0x38FA68D1C06BD272893908a74E6BcC67E28d4Da8",
      "totalVotes": 7,
      "blockNumber": 13399201,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/QmZnedB5Y1GJ2RW6tdLh1FBMr6jTnrd3nLmbY1vFM1aBAS",
      "startTime": {
        "timestamp": 1633978800
      },
      "endTime": {
        "timestamp": 1634583600
      },
      "startTimestamp": 1633978800,
      "endTimestamp": 1634583600,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 7.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 7.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1678236144000,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OnFtYThoaXp6cmg4eTVjbXZzbXdtcHh0OWFucWp4ZHRwcGp0ZGV4dWpmbmR1bW4=",
      "id": "Qma8hiZZrH8Y5CMVsMwMPXt9anQJxdtpPJTDeXUJfnduMn",
      "title": "GGP 0005: Batch GNS transactions",
      "content": "GGP: 0005\nScope: Smart Contracts\nCreated: 2021-09-07\nGIPs-Repo-Latest-Commit: 329e92fb3c897f68bddbd93abf12278167116266\n \n## GIPs\nGIP: 0014\n   Title: Batch GNS transactions\n   Authors: Ariel Barmat <ariel@edgeandnode.com>\n   Created: 2021-09-07\n   Stage: Candidate\n   Discussions-To: https://forum.thegraph.com/t/batch-gns-transactions/2285\n \n## Motivation\nOne of the issues brought by the community is that sometimes a subgraph publisher would want to publish a new subgraph and deposit the initial tokens. Today, that’s only possible by using a Multisig or any other contract to batch those transactions.\n \nThis proposal allows batching transactions on the GNS, based on the Multicall pattern seen in Uniswap (https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/base/Multicall.sol) and recently implemented in OpenZeppelin (https://docs.openzeppelin.com/contracts/4.x/api/utils#Multicall)\n \n## Implementation\nA new contract called MultiCall is introduced, inspired by the one used by Uniswap. The payable keyword was removed from the multicall() as the protocol does not deal with ETH. Additionally, it is insecure in some instances if the contract relies on msg.value.\n \nThe GNS inherits from MultiCall that expose a public multicall(bytes[] calldata data) function that receives an array of payloads to send to the contract itself. This allows to batch ANY publicly callable contract function.\nClient-side one can build such payloads like:\n \n// Build payloads\nconst tx1 = await gns.populateTransaction.publishNewSubgraph(\n    <subgraphAccount>,\n    <subgraphDeploymentID>,\n    <versionMetadata>,\n    <subgraphMetadata>,\n)\nconst tx2 = await gns.populateTransaction.mintNSignal(\n    <subgraphAccount>,\n    <subgraphNumber>,\n    <amount>,\n    <signalOut>,\n)\n \n// Send batch\nawait gns.multicall([tx1.data, tx2.data])\n \n \n \n## References\nImplementation: https://etherscan.io/address/0x8F0031C8A936e3f78Db1E0670135CCad27E5b689#code\nAudit: https://github.com/graphprotocol/contracts/blob/40a2a721e1b8441a76a8f7105ffd9577cd163fc6/audits/OpenZeppelin/the-graph-gns-audit-2021-08.pdf\n \n \n \n---\n \n# Graph Governance Proposal-0005\n \n## Batch GNS transactions\n \nThis proposal is to upgrade The Graph's protocol smart contracts running on Ethereum mainnet with the changes described in Graph Improvement Proposal (GIP) 0014, including the motivation and scope of the changes described in this proposal.\n \nThe code deployed that implements GIP-0014 must correspond to the commit hash included in the front matter of this governance proposal.\n \nFollowing a successful \"yes\" vote, the protocol upgrade should be carried out at the earliest convenience using The Graph Council's Gnosis Multisig.\n\n",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0x4530aFEaDe76579f4D4E6fF9e079520B7e7ebA9A",
      "totalVotes": 6,
      "blockNumber": 13184611,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/Qma8hiZZrH8Y5CMVsMwMPXt9anQJxdtpPJTDeXUJfnduMn",
      "startTime": {
        "timestamp": 1631098800
      },
      "endTime": {
        "timestamp": 1631703600
      },
      "startTimestamp": 1631098800,
      "endTimestamp": 1631703600,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1678236144000,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OnFtemloeWJjemF5c3N3eHVzbXplbGNlZDEzMWc1YnNkeGR4bzRzYzRweG16aDk=",
      "id": "QmZihyBcZaYSSwxusMzELCED131g5bsDxdxo4sC4PXMzh9",
      "title": "GGP 0004: Staking Upgrade",
      "content": "GGP: 0004\nScope: Smart Contracts\nCreated: 2021-06-25\nGIPs-Repo-Latest-Commit: a5b7040a0df212bfac9997ca7be39ed950388cb9\nGIPs:\n\nGIP: 0010\nTitle: Update rewards snapshot when close allocation with empty POI\nAuthors: Ariel Barmat ariel@edgeandnode.com\nCreated: 2021-06-15\nStage: Candidate\nImplementations: https://github.com/graphprotocol/contracts/pull/459\nGIP: 0011\nTitle: Delegation parameters initialization when used from stakeTo\nAuthors: Ariel Barmat ariel@edgeandnode.com\nCreated: 2021-06-14\nStage: Candidate\nImplementations: https://github.com/graphprotocol/contracts/pull/457\nGIP: 0012\nTitle: Reduced gas usage by caching address resolution\nAuthors: Ariel Barmat ariel@edgeandnode.com\nCreated: 2021-06-14\nStage: Candidate\nImplementations: https://github.com/graphprotocol/contracts/pull/430\nThis proposal is to upgrade The Graph’s protocol smart contracts running on Ethereum mainnet with the changes described in Graph Improvement Proposals (GIP) 0010, 0011, 0012. The motivation and scope of the changes are captured in the language of the proposal itself.\n\nThe code deployed that implements GIP-0010, GIP-0011 and GIP-0012 must correspond to the commit hash included in the front matter of this governance proposal, which corresponds to the version of the implementation that was audited by OpenZeppelin including fixes.\n\nFollowing a successful “yes” vote, given that the change described in the GIPs are backwards compatible, the protocol upgrade should be carried out at the earliest convenience using The Graph Council’s Gnosis Multisig.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0x4530aFEaDe76579f4D4E6fF9e079520B7e7ebA9A",
      "totalVotes": 6,
      "blockNumber": 12735130,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/QmZihyBcZaYSSwxusMzELCED131g5bsDxdxo4sC4PXMzh9",
      "startTime": {
        "timestamp": 1625065200
      },
      "endTime": {
        "timestamp": 1625583600
      },
      "startTimestamp": 1625065200,
      "endTimestamp": 1625583600,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1678236144000,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OnFteDhzc2MyeHh2ZWduOWZ5enNxbmd3M3J3bThxdWtmcmVnZHN4dHlic2JqdW4=",
      "id": "QmX8sSc2xxVEGN9fYZSQNgw3RwM8qUKfREGDSXtYbsBJUN",
      "title": "GGP 0003: Dispute Manager Upgrade",
      "content": "GGP: 0003\nScope: Smart Contracts\nCreated: 2021-06-25\nGIPs-Repo-Latest-Commit: a5b7040a0df212bfac9997ca7be39ed950388cb9\nGIPs:\n\nGIP: 0007\nTitle: Separate slashing percentages for query and indexing disputes\nAuthors: Ariel Barmat ariel@edgeandnode.com\nCreated: 2021-05-21\nUpdated: 2021-06-03\nStage: Candidate\nDiscussions-To: https://forum.thegraph.com/t/different-slashing-percentages-for-query-and-indexing-disputes/2020\nImplementations: https://github.com/graphprotocol/contracts/pull/458\nAudits: https://blog.openzeppelin.com/thegraph-slashing-upgrade-audit/\nThis proposal is to upgrade The Graph’s protocol smart contracts running on Ethereum mainnet with the changes described in Graph Improvement Proposal (GIP) 0007. The motivation and scope of the changes are captured in the language of the proposal itself.\n\nThe code deployed that implements GIP-0007 must correspond to the commit hash included in the front matter of this governance proposal, which corresponds to the version of the implementation that was audited by OpenZeppelin including fixes.\n\nFollowing a successful “yes” vote, given that the change described in GIP-0007 is backwards compatible, the protocol upgrade should be carried out at the earliest convenience using The Graph Council’s Gnosis Multisig.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0x4530aFEaDe76579f4D4E6fF9e079520B7e7ebA9A",
      "totalVotes": 6,
      "blockNumber": 12735096,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/QmX8sSc2xxVEGN9fYZSQNgw3RwM8qUKfREGDSXtYbsBJUN",
      "startTime": {
        "timestamp": 1625065200
      },
      "endTime": {
        "timestamp": 1625583600
      },
      "startTimestamp": 1625065200,
      "endTimestamp": 1625583600,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1678236144000,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OnFtY3hhZHc0cXJvcXMydG13bjhyZTF2ZmxoeG5lY25nYXhyOGF4Z2dqZ25yNWU=",
      "id": "QmcXadW4qroQs2tMwn8Re1vfLhxnECNGaXr8axggjgNR5e",
      "title": "GGP 0002: Rewards Manager Upgrade",
      "content": "---\nGGP: 0002\nScope: Smart Contracts\nCreated: 2021-04-28\nGIPs-Repo-Latest-Commit: a5b7040a0df212bfac9997ca7be39ed950388cb9\nGIPs:\n -  GIP: 0003\n    Title: Fix accumulated subgraph rewards being reset to zero\n    Authors: Ariel Barmat ariel@edgeandnode.com\n    Created: 2021-03-01\n    Stage: Candidate\n    Discussions-To: https://forum.thegraph.com/t/accumulated-subgraph-rewards-reset-to-zero-on-edge-case/1537\n    Implementations: https://github.com/graphprotocol/contracts/pull/452\n    Commit: b1ffb2a62bbf34e24627c48daefa42f464d8cc0b\n    Audit: https://blog.openzeppelin.com/the-graph-rewardsmanager-upgrade-audit/\n---\n\n# GGP 0002 - Rewards Manager Upgrade\n\nThis proposal is to upgrade The Graph's protocol smart contracts running on Ethereum mainnet with the changes described in Graph Improvement Proposal (GIP) 0003. The motivation and scope of the changes are captured in the language of the proposal itself.\n\nThe code deployed that implements GIP-0003 must correspond to the commit hash included in the front matter of this governance proposal, which corresponds to the version of the implementation that was audited by OpenZeppelin.\n\nFollowing a successful \"yes\" vote, given that the change described in GIP-0003 is backwards compatible, the protocol upgrade should be carried out at the earliest convenience using The Graph Council's Gnosis Multisig.",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0x37BC95e38235Ec42F185E945922a4E2C9795B391",
      "totalVotes": 6,
      "blockNumber": 12336139,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/QmcXadW4qroQs2tMwn8Re1vfLhxnECNGaXr8axggjgNR5e",
      "startTime": {
        "timestamp": 1619708400
      },
      "endTime": {
        "timestamp": 1620140400
      },
      "startTimestamp": 1619708400,
      "endTimestamp": 1620140400,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 6.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 6.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1678236144000,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    },
    {
      "refId": "cHJvcG9zYWw6dGhlZ3JhcGhjb3VuY2lsOnNuYXBzaG90OnFtenN4dmNnY3k3M2dlczVhc3N2dnV6ZW5qZHl6dzcyeGVmeHZ3eG53YWNoYmI=",
      "id": "QmZsXvcGcY73gES5AssVvUZenJdYzw72xEFxVwxNwAchbb",
      "title": "Graph Governance Proposal - 0001",
      "content": "---\nGGP: 0001\nScope: Smart Contracts\nCreated: 2021-03-26\nGIPs-Repo-Latest-Commit: 49ca9118f6e4da6d1dae3ed1ce92e1945de9c1c9\nGIPs: \n  - GIP: 0002\n    Title: Separate destination address for Indexer indexing rewards.\n    Authors: Ariel Barmat <ariel@edgeandnode.com>\n    Created: 2021-03-01\n    Stage: Candidate\n    Discussions-To: https://forum.thegraph.com/t/rewards-destination-for-indexers-indexing-rewards/1279\n    Implementations: https://github.com/graphprotocol/contracts/pull/450\n    Commit: 6512d291087eb0b1b000e7378d13778ae6703e62\n    Audit: https://gist.github.com/xaler5/6e31e0521f1cdd58c17b229de30954f8#file-thegraph-08-rewards-destination-md\n---\n\n# Graph Governance Proposal-0001\n\n## Separate destination address for withdrawing Indexer indexing rewards\n\nThis proposal is to upgrade The Graph's protocol smart contracts running on Ethereum mainnet with the changes described in Graph Improvement Proposal (GIP) 0002. The motivation and scope of the changes are captured in the language of the proposal itself.\n\nThe code deployed that implements GIP-0002 must correspond to the commit hash included in the front matter of this governance proposal, which corresponds to the version of the implementation that was audited by OpenZeppelin.\n\nFollowing a successful \"yes\" vote, given that the change described in GIP-0002 is backwards compatible, the protocol upgrade should be carried out at the earliest convenience using The Graph Council's Gnosis Multisig. \n\n",
      "protocol": "thegraphcouncil",
      "adapter": "snapshot",
      "proposer": "0x37BC95e38235Ec42F185E945922a4E2C9795B391",
      "totalVotes": 9,
      "blockNumber": 12117735,
      "externalUrl": "https://snapshot.org/#/council.graphprotocol.eth/proposal/QmZsXvcGcY73gES5AssVvUZenJdYzw72xEFxVwxNwAchbb",
      "startTime": {
        "timestamp": 1616803200
      },
      "endTime": {
        "timestamp": 1617120000
      },
      "startTimestamp": 1616803200,
      "endTimestamp": 1617120000,
      "currentState": "closed",
      "choices": [
        "Yes",
        "No"
      ],
      "results": [
        {
          "total": 9.0,
          "choice": 0
        }
      ],
      "events": [],
      "type": "basic",
      "indexedResult": [
        {
          "total": 9.0,
          "choice": 0
        },
        {
          "total": 0.0,
          "choice": 1
        }
      ],
      "summary": "",
      "privacy": "",
      "indexedAt": 1678236144000,
      "txHash": "",
      "quorum": 0,
      "flagged": null,
      "executionArgs": "",
      "executables": "",
      "chainId": null
    }
  ],
  "nextCursor": null
}